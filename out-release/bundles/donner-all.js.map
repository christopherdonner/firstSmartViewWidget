{"version":3,"sources":["../../src/widgets/.donner/impl/.donner.model.js","../../src/widgets/.donner/impl/.donner.model.factory.js","../../src/widgets/.donner/impl/nls/lang.js","../../src/widgets/.donner/impl/nls/root/lang.js","../../src/widgets/.donner/impl/.donner!hbs","../../src/widgets/.donner/impl/.donner!css","../../src/widgets/.donner/.donner.view.js","../../src/widgets/.donner/.donner.manifest.json!json","donner-all.js"],"names":["csui","define","Backbone","Url","Model","extend","defaults","name","constructor","attributes","options","prototype","apply","this","arguments","connector","assignTo","url","combine","connection","parse","response","data","ModelFactory","ConnectorFactory","DonnerModel","propertyPrefix","context","getObject","property","undefined","fetch","root","en-us","en","helloMessage","waitMessage","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","helper","escapeExpression","message","helperMissing","call","hash","registerPartial","_","Marionette","DonnerModelFactory","lang","ItemView","className","templateHelpers","model","get","str","sformat","getModel","listenTo","render","$schema","title","description","kind","schema","type","properties","require","css","styleLoad"],"mappings":"AAAAA,KAAAC,OAAA,6CAEA,oBAEA,kBACA,SAAAC,EAAAC,GACA,YA+BA,OA7BAD,GAAAE,MAAAC,QAEAC,YACAC,OAAA,WAIAC,cAAA,SAAAC,EAAAC,GACAR,EAAAE,MAAAO,UAAAH,YAAAI,MAAAC,KAAAC,WAGAJ,GAAAA,EAAAK,WACAL,EAAAK,UAAAC,SAAAH,OAKAI,MAAA,WAEA,MAAAd,GAAAe,QAAAL,KAAAE,UAAAI,WAAAF,IAAA,UAIAG,QAAA,SAAAC,GAEA,MAAAA,GAAAC,UAOAtB,KAAAC,OAAA,qDCvCA,wCACA,0CACA,6CACA,SAAAsB,EAAAC,EAAAC,GACA,YA4BA,OA1BAF,GAAAlB,QAGAqB,iBAAA,UAEAlB,cAAA,SAAAmB,EAAAjB,GACAa,EAAAZ,UAAAH,YAAAI,MAAAC,KAAAC,UAKA,IAAAC,GAAAY,EAAAC,UAAAJ,EAAAd,EAIAG,MAAAgB,SAAA,GAAAJ,OAAAK,IACAf,YAAAA,KAIAgB,QAAA,SAAArB,GAEA,MAAAG,MAAAgB,SAAAE,MAAArB,QC3BAV,KAAAC,OAAA,wCAEA+B,QAAA,EAEAC,SAAA,EACAC,MAAA,ICLAlC,KAAAC,OAAA,6CACAkC,eAAA,iBACAC,cAAA,0BCFApC,KAAAC,OAAA,2CAAA,SAAA,MAAA,uBAAA,SAAAoC,EAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,UAAAC,YAAA,EAAA,mBAAAC,OAAA,SAAAC,EAAAC,EAAAC,EAAAxB,GACA,GAAAyB,EAEA,OAAA,SACAlC,KAAAmC,kBAAAD,EAAA,OAAAA,EAAAF,EAAAI,UAAA,MAAAL,EAAAA,EAAAK,QAAAL,IAAAG,EAAAF,EAAAK,cAAA,kBAAAH,GAAAA,EAAAI,KAAAP,GAAArC,OAAA,UAAA6C,YAAAL,IACA,gBAGA,OADAR,GAAAc,gBAAA,sCAAAb,GACAA,ICVAxC,KAAAC,OAAA,6CAAA,cCAAD,KAAAC,OAAA,uCACA,sBACA,sBACA,oDACA,4CACA,0CACA,2CACA,SAAAqD,EAAAC,EAAAC,EAAAC,EAAAhB,GACA,YA0CA,OAvCAc,GAAAG,SAAArD,QAEAsD,YAAA,qCAGAlB,WAAAA,EAGAmB,kBAAA,WAQA,OACAX,UANApC,KAAAgD,MAAAC,IAAA,MACAR,EAAAS,IAAAC,QAAAP,EAAAtB,aACAtB,KAAAgD,MAAAC,IAAA,cACAjD,KAAAgD,MAAAC,IAAA,cACAL,EAAArB,cAQA5B,cAAA,SAAAE,GAKAA,EAAAmD,MAAAnD,EAAAiB,QAAAsC,SAAAT,GAIAD,EAAAG,SAAA/C,UAAAH,YAAA2C,KAAAtC,KAAAH,GAGAG,KAAAqD,SAAArD,KAAAgD,MAAA,SAAAhD,KAAAsD,aC9CAnE,KAAAC,OAAA,qDACAmE,UAAA,sDACAC,QAAA,QACAC,cAAA,UACAC,OAAA,OACAC,UACAC,OAAA,SACAC,mBCLA1E,KAAAC,OAAA,sBACA,sCACA,yDAGAD,KAAA2E,SACA,UACA,OACA,SAAAA,EAAAC,GAGAA,EAAAC,UAAAF,EAAA","file":"donner-all.js","sourcesContent":["csui.define('donner/widgets/.donner/impl/.donner.model',[\r\n  // MVC component support\r\n  'csui/lib/backbone',\r\n  // CS REST API URL parsing and combining\r\n  'csui/utils/url'\r\n], function (Backbone, Url) {\r\n  'use strict';\r\n\r\n  var DonnerModel = Backbone.Model.extend({\r\n    // Declare model properties with default values\r\n    defaults: {\r\n      name: 'Unnamed'\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger\r\n    constructor: function DonnerModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n\r\n      // Enable this model for communication with the CS REST API\r\n      if (options && options.connector) {\r\n        options.connector.assignTo(this);\r\n      }\r\n    },\r\n\r\n    // Computes the REST API URL using the connection options\r\n    url: function () {\r\n      // /auth returns information about the authenticated user\r\n      return Url.combine(this.connector.connection.url, '/auth');\r\n    },\r\n\r\n    // Massage the server response, so that it looks like object attributes\r\n    parse: function (response) {\r\n      // All attributes are placed below the `data` key\r\n      return response.data;\r\n    }\r\n  });\r\n\r\n  return DonnerModel;\r\n});\r\n\n","csui.define('donner/widgets/.donner/impl/.donner.model.factory',[\r\n  'csui/utils/contexts/factories/factory',   // Factory base to inherit from\r\n  'csui/utils/contexts/factories/connector', // Factory for the server connector\r\n  'donner/widgets/.donner/impl/.donner.model'     // Model to create the factory for\r\n], function (ModelFactory, ConnectorFactory, DonnerModel) {\r\n  'use strict';\r\n\r\n  var DonnerModelFactory = ModelFactory.extend({\r\n    // Unique prefix of the default model instance, when this model is placed\r\n    // to a context to be shared by multiple widgets\r\n    propertyPrefix: '.donner',\r\n\r\n    constructor: function DonnerModelFactory(context, options) {\r\n      ModelFactory.prototype.constructor.apply(this, arguments);\r\n\r\n      // Obtain the server connector from the application context to share\r\n      // the server connection with the rest of the application; include\r\n      // the options, which can contain settings for dependent factories\r\n      var connector = context.getObject(ConnectorFactory, options);\r\n\r\n      // Expose the model instance in the `property` key on this factory\r\n      // instance to be used by the context\r\n      this.property = new DonnerModel(undefined, {\r\n        connector: connector\r\n      });\r\n    },\r\n\r\n    fetch: function (options) {\r\n      // Just fetch the model exposed by this factory\r\n      return this.property.fetch(options);\r\n    }\r\n  });\r\n\r\n  return DonnerModelFactory;\r\n});\r\n\n","// Lists explicit locale mappings and fallbacks\r\n\r\ncsui.define('donner/widgets/.donner/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","// Defines localizable strings in the default language (English)\r\n\r\ncsui.define('donner/widgets/.donner/impl/nls/root/lang',{\r\n  helloMessage: 'Hello {0} {1}!',\r\n  waitMessage: 'One moment, please...'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!donner/widgets/.donner/impl/.donner',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<span>\"\n    + this.escapeExpression(((helper = (helper = helpers.message || (depth0 != null ? depth0.message : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"message\",\"hash\":{}}) : helper)))\n    + \"</span>\\r\\n\";\n}});\nHandlebars.registerPartial('donner_widgets_.donner_impl_.donner', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!donner/widgets/.donner/impl/.donner',[],function(){});\n","// An application widget is exposed via a RequireJS module\r\ncsui.define('donner/widgets/.donner/.donner.view',[\r\n  'csui/lib/underscore',                           // Cross-browser utility belt\r\n  'csui/lib/marionette',                           // MVC application support\r\n  'donner/widgets/.donner/impl/.donner.model.factory',  // Factory for the data model\r\n  'i18n!donner/widgets/.donner/impl/nls/lang',  // Use localizable texts\r\n  'hbs!donner/widgets/.donner/impl/.donner',            // Template to render the HTML\r\n  'css!donner/widgets/.donner/impl/.donner'             // Stylesheet needed for this view\r\n], function (_, Marionette, DonnerModelFactory, lang, template) {\r\n  'use strict';\r\n\r\n  // An application widget is a view, because it should render a HTML fragment\r\n  var DonnerView = Marionette.ItemView.extend({\r\n    // Outermost parent element should contain a unique widget-specific class\r\n    className: 'donner--donner panel panel-default',\r\n\r\n    // Template method rendering the HTML for the view\r\n    template: template,\r\n\r\n    // Mix additional properties in the template input data\r\n    templateHelpers: function () {\r\n      // Say hello to the authenticated user, if the model has been fetched,\r\n      // otherwise show a waiting message\r\n      var message = this.model.get('id') ?\r\n                    _.str.sformat(lang.helloMessage,\r\n                        this.model.get('first_name'),\r\n                        this.model.get('last_name')) :\r\n                    lang.waitMessage;\r\n      return {\r\n        message: message\r\n      };\r\n    },\r\n\r\n    // Constructor gives an explicit name to the object in the debugger and\r\n    // can update the options for the parent view, which `initialize` cannot\r\n    constructor: function DonnerView(options) {\r\n      // Obtain the model with the data shown by this view; using the model\r\n      // factory with the context makes the model instance not only shareable\r\n      // with other widgets through the context, but also fetched at the same\r\n      // moment as the other models.\r\n      options.model = options.context.getModel(DonnerModelFactory);\r\n\r\n      // Models and collections passed via options to the parent constructor\r\n      // are wired to\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n\r\n      // Whenever properties of the model change, re-render the view\r\n      this.listenTo(this.model, 'change', this.render);\r\n    }\r\n  });\r\n\r\n  return DonnerView;\r\n});\r\n\n","\ncsui.define('json!donner/widgets/.donner/.donner.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"Hello\",\r\n  \"description\": \"Heyoooo\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","// Placeholder for the build target file; the name must be the same,\n// include public modules from this component\n\ncsui.define('bundles/donner-all',[\n  'donner/widgets/.donner/.donner.view',\n  'json!donner/widgets/.donner/.donner.manifest.json'\n], {});\n\ncsui.require([\n  'require',\n  'css'\n], function (require, css) {\n\n  // Load the bundle-specific stylesheet\n  css.styleLoad(require, 'donner/bundles/donner-all');\n});\n"]}