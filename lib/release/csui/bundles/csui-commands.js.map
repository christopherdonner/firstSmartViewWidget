{"version":3,"sources":["../../src/utils/command.error.js","../../src/utils/commands/nls/localized.strings.js","../../src/utils/commands/nls/root/localized.strings.js","../../src/utils/commands/nls/localized.strings!i18n","../../src/utils/commands/versions/nls/localized.strings.js","../../src/utils/commands/versions/nls/root/localized.strings.js","../../src/utils/commands/versions/nls/localized.strings!i18n","../../src/utils/commandhelper.js","../../src/models/command.js","../../src/integration/folderbrowser/commands/nls/localized.strings.js","../../src/integration/folderbrowser/commands/go.to.node.history.js","../../src/integration/folderbrowser/commands/nls/root/localized.strings.js","../../src/integration/folderbrowser/commands/nls/localized.strings!i18n","../../src/integration/folderbrowser/commands/open.full.page.container.js","../../src/models/commands.js","../../src/utils/commands!csui-ext","../../src/utils/commands.js","../../src/utils/commands/add.categories.js","../../src/dialogs/file.open/impl/file.open!hbs","../../src/dialogs/file.open/file.open.dialog.js","../../src/utils/commands/add.js","../../src/utils/commands/add.item.metadata.js","../../src/utils/commands/add.version.js","../../src/utils/commands/open.node.perspective.js","../../src/utils/commands/browse.js","../../src/utils/commands/collection/nls/lang.js","../../src/utils/commands/collection/nls/root/lang.js","../../src/utils/commands/collection/nls/lang!i18n","../../src/utils/commands/collection/collect.items.js","../../src/utils/commands/multiple.items.js","../../src/utils/commands/confirmable.js","../../src/utils/commands/collection/remove.collected.items.js","../../src/utils/commands/copy.js","../../src/utils/commands/copy.link.js","../../src/models/perspective/server.adaptor.mixin.js","../../src/models/perspective/perspective.model.js","../../src/utils/commands/create.perspective.js","../../src/utils/commands/node.js","../../src/utils/commands/delete.js","../../src/utils/commands/download.js","../../src/utils/commands/open.classic.page.js","../../src/utils/commands/edit.js","../../src/utils/commands/editactivex.js","../../src/utils/commands/editofficeonline.js","../../src/utils/commands/edit.perspective.js","../../src/utils/commands/editwebdav.js","../../src/utils/commands/nls/lang.js","../../src/utils/commands/nls/root/lang.js","../../src/utils/commands/nls/lang!i18n","../../src/utils/commands/email.link.js","../../src/utils/commands/execute.saved.query.js","../../src/utils/commands/favorite.add.js","../../src/utils/commands/favorite.remove.js","../../src/utils/commands/inlineedit.js","../../src/utils/commands/move.js","../../src/utils/commands/navigate.js","../../src/utils/commands/open.plugins/open.plugins!csui-ext","../../src/utils/commands/open.plugins/open.plugins.js","../../src/utils/commands/open.js","../../src/utils/commands/open.discussion.js","../../src/utils/commands/open.form.js","../../src/utils/commands/open.milestone.js","../../src/utils/commands/open.channel.js","../../src/utils/commands/open.news.js","../../src/utils/commands/open.poll.js","../../src/utils/commands/open.prospector.js","../../src/utils/commands/open.specific.classic.page.js","../../src/utils/commands/open.specific.node.perspective.js","../../src/utils/commands/open.task.js","../../src/utils/commands/open.taskgroup.js","../../src/utils/commands/open.tasklist.js","../../src/utils/commands/open.topic.js","../../src/utils/commands/permissions.js","../../src/utils/commands/properties.js","../../src/utils/commands/rename.js","../../src/utils/commands/rename.favorite.js","../../src/utils/commands/reserve.js","../../src/utils/commands/run.livereport.js","../../src/utils/commands/sign.out.js","../../src/utils/commands/switch.to.classic.js","../../src/utils/commands/unreserve.js","../../src/utils/commands/user.profile.js","../../src/utils/commands/versions/delete.js","../../src/utils/commands/versions/download.js","../../src/utils/commands/versions/open.js","../../src/utils/commands/versions/properties.js","../../src/utils/commands/versions!csui-ext","../../src/utils/commands/versions.js","../../src/utils/commands/filter.js","../../src/utils/commands/description.toggle.js","../../src/utils/commands/thumbnail.toggle.js","../../src/utils/commands/save.filter.js","../../src/utils/commands/maximize.widget.view.js","../../src/utils/commands/restore.widget.size.js","../../src/utils/commands/permissions/apply.permission.js","../../src/utils/commands/permissions/edit.permission.js","../../src/utils/commands/permissions/change.owner.permission.js","../../src/utils/commands/permissions/delete.permission.js","../../src/utils/commands/permissions/add.user.group.js","../../src/utils/commands/permissions/add.owner.group.js","../../src/utils/commands/permissions/restore.public.access.js","../../src/temporary/cop/commands/open.blog.js","../../src/temporary/cop/commands/open.faq.js","../../src/temporary/cop/commands/open.forum.js","../../src/temporary/cop/commands/open.wiki.js","../../src/temporary/cop/commands/open.mailstore.js","../../src/utils/commands/goto.location.js","csui-commands.js"],"names":["csui","define","module","$","_","Backbone","log","base","CommandError","arg1","arg2","applyArg2","isString","this","errorDetails","Model","node","isObject","requestError","requestMessage","RequestErrorMessage","message","Error","stack","statusCode","call","name","prototype","Object","create","root","en-us","en","ShortcutPickerTitle","CommandNameAddItemMetadata","CommandNameAddVersion","CommandNameCopy","CommandVerbCopy","DialogTitleSingleCopy","DialogTitleCopy","SomeFilesNotCopiedSuccessfully","CopyingNodes","CopyingNode","CopyPageLeavingWarning","CopyingOneItem","CopyItems","CopySomeItems","CopyItemsNoneMessage","CopyOneItemSuccessMessage","CopySomeItemsSuccessMessage","CopyManyItemsSuccessMessage","CopyOneItemFailMessage","CopySomeItemsFailMessage","CopyManyItemsFailMessage","CopySomeItemsFailMessage2","CopyManyItemsFailMessage2","DeleteCommandConfirmDialogTitle","DeleteCommandConfirmDialogHtml","DeleteCommandConfirmDialogSingleMessage","DeleteCommandConfirmDialogMultipleMessage","CommandNameDelete","CommandVerbDelete","DeletePageLeavingWarning","DeleteItemFailed","DeleteItems","DeletingOneItem","DeletingSomeItems","DeleteItemsNoneMessage","DeleteOneItemSuccessMessage","DeleteSomeItemsSuccessMessage","DeleteManyItemsSuccessMessage","DeleteOneItemFailMessage","DeleteSomeItemsFailMessage","DeleteManyItemsFailMessage","DeleteSomeItemsFailMessage2","DeleteManyItemsFailMessage2","ApplyingManyItemsSuccessMessage","ApplyingOneItemFailMessage","ApplyingManyItemsFailMessage2","CommandNameDownload","CommandVerbDownload","CommandNameMove","CommandNameVerbMove","DialogTitleSingleMove","DialogTitleMove","SomeFilesNotMovedSuccessfully","MovePageLeavingWarning","MovingNodes","MovingNode","MovingOneItem","MovingItems","MovingSomeItems","MoveItemsNoneMessage","MoveOneItemSuccessMessage","MoveSomeItemsSuccessMessage","MoveManyItemsSuccessMessage","MoveOneItemFailMessage","MoveSomeItemsFailMessage","MoveManyItemsFailMessage","MoveSomeItemsFailMessage2","MoveManyItemsFailMessage2","CommandNamePaste","CommandNameReserve","CommandVerbReserve","ReservePageLeavingWarning","ReserveItemsNoneMessage","ReserveOneItemSuccessMessage","ReserveSomeItemsSuccessMessage","ReserveManyItemsSuccessMessage","ReserveOneItemFailMessage","ReserveSomeItemsFailMessage","ReserveManyItemsFailMessage","CommandNameFavorite","CommandVerbFavorite","CommandDoneVerbFavorite","CommandRemovedVerbFavorite","updateFavoriteFailTitle","updateFavoriteFailMessage","CommandDescriptionToggle","CommandHideDescription","CommandShowDescription","CommandNameEmailLink","CommandVerbEmailLink","EmailLinkSubject","EmailLinkDesktop","EmailAppleLinkFormat","EmailLinkCommandFailedWithTooMuchItemsErrorMessage","EmailLinkCommandFailedWithTooMuchItemsDetailErrorMessage","SignOutCommandName","SwitchToClassicCommandName","CommandNameUnreserve","CommandVerbUnreserve","UnreservePageLeavingWarning","UnreserveItemsNoneMessage","UnreserveOneItemSuccessMessage","UnreserveSomeItemsSuccessMessage","UnreserveManyItemsSuccessMessage","UnreserveOneItemFailMessage","UnreserveSomeItemsFailMessage","UnreserveManyItemsFailMessage","UserProfileCommandName","CommandVerbRename","CommandNameSaveFilter","CommandVerbSaveFilter","DialogTitleSaveFilter","SaveFilterCommandSuccessfully","NoEditUrl","CommandNameCopyLink","CommandVerbCopyLink","CopyLinkSuccessMessage","CopyLinkFailMessage","DeletePermissionCommandRemoveOwner","DeletePermissionCommandRemoveGroup","DeletePermissionCommandRemovePublicAccess","DeletePermissionCommandRemoveOther","DeletePermissionCommandConfirmDialogTitle","DeletePermissionCommandConfirmDialogSingleMessage","DeletePermissionCommandConfirmDialogPublicAccessMessage","DeletePermissionCommandSuccessMessage","DeletePermissionCommandSuccessMessageWithCount","DeletePermissionCommandFailMessage","publicAccess","RestorePublicAccessSuccessMessage","RestorePublicAccessSuccessMessageWithCount","undefinedCollection","EditPermissionCommandFailMessage","Owner","CommandNameAddOwnerOrOwnerGroup","AddOwnerOrGroup","AddOwner","AddOwnerGroup","CommandNameAddUserorGroup","CommandNameRestorePublicAccess","AddButtonLabel","AddOwnerOrGroupDialogTitle","AddOwnerDialogTitle","AddOwnerGroupDialogTitle","ChangeOwnerPermissionCommand","ChangeOwnerGroupPermissionCommand","AddUserOrGroupSuccess","AddUserOrGroupFailure","AddUserOrGroupSuccessWithCount","formatForNone","formatForOne","formatForTwo","formatForFive","AppliedPermissions","AppliedPermissionsOneSuccess","AppliedPermissionsOnlySuccess","AppliedPermissionsOneFailure","AppliedPermissionsOnlyFailure","AppliedPermissionsSuccessAndFailure","CommandSuccessfullySingular","CommandFailedSingular","CommandSuccessfullyPlural","CommandFailedPlural","CommandFailedPartial","NoConnectivity","GoToOffline","viewTypeUnsupported","MobileIOS","DesktopAndroid","Close","warnTitle","warnMessage","yesButton","noButton","grammer","otheruser","allUsersAndGroups","addUsersAndGroups","allGroups","cancelButtonLabel","applyButtonLabel","EditPerspective","CreatePerspective","ThumbnailTitle","ListViewTitle","CommandNameVersionDelete","CommandVerbVersionDelete","VersionDeleteCommandConfirmDialogSingleMessage","VersionDeleteCommandConfirmDialogMultipleMessage","DeleteVersionPageLeavingWarning","DeleteVersions","DeletingSomeVersions","DeletingOneVersion","DeleteVersionItemsNoneMessage","DeleteVersionOneItemSuccessMessage","DeleteVersionSomeItemsSuccessMessage","DeleteVersionManyItemsSuccessMessage","DeleteVersionOneItemFailMessage","DeleteVersionSomeItemsFailMessage2","DeleteVersionManyItemsFailMessage2","require","lang","versionsLang","VersionModel","config","CommandHelper","extend","Events","checkNodeTypesAndRights","nodes","types","rights","isArray","container","contains","length","all","get","right","checkNodeTypes","attributes","isBackbone","type","checkNodeRights","getJustOneNode","status","at","getAtLeastOneNode","Collection","collection","model","updateNode","attributesToUpdate","save","wait","patch","silent","then","fetch","force","error","commandError","Deferred","reject","handleExecutionResults","promise","options","handleExecutionResultsDeferred","modulePromise","GlobalMessage","resolve","whenAll","always","parameters","results","okCnt","failedCnt","each","result","undefined","cancelled","suppressSuccessMessage","showMessage","str","sformat","command","offlineSupport","suppressFailMessage","customError","_getErrorMessageFromResponse","err","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","text","refreshModelAttributesFromServer","tempNode","clone","set","original","showOfflineMessage","yesCallBck","noCallBack","self","modalAlert","showInformation","buttons","YesNo","answer","window","location","href","trigger","idAttribute","constructor","apply","arguments","enabled","scope","_getNodesByScope","signatures","_checkPermittedActions","isNonPromoted","checkFn","_getNonPromotedCheckFunctionsForSignatures","find","action","models","_getCheckFunctionsForSignatures","checkNode","any","signature","actions","findRecursively","_getNodeActionForSignature","CommandModel","visitedNodesByContext","defaults","GoToHistory","visitedNodes","context","_ensureGoBackList","cid","execute","deferred","NextNodeModelFactory","nextNode","getModel","pop","clearHistory","NodeModelFactory","visitCurrentNode","Factory","nodeId","push","on","OpenFullPageContainer","nodeLinks","open","getUrl","getAllSignatures","chain","pluck","map","flatten","compact","unique","value","CommandCollection","extraCommands","commands","browse","download","add","navigate","version","Command","command_key","originalFormCollection","form","additionalProperties","MetadataAddCategoriesController","AddNewCategory","done","resp","addPropertiesCallback","parentView","catModel","fail","warn","console","last","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","helper","escapeExpression","multiple","helperMissing","hash","registerPartial","Marionette","id","ItemView","className","templateHelpers","ui","fileInput","events","change @ui.fileInput","earlierElement","document","body","debug","remove","onDestroy","off","show","render","append","el","click","_processFiles","event","originalEvent","files","target","dataTransfer","NodeModel","FileOpenDialog","addableTypes","addableType","newNode","addableTypeName","_getAddableTypeName","forwardToTable","type_name","connector","_selectShortcutTarget","_selectFilesForUpload","errMsg","commandSignature","fileOpenDialog","listenTo","fileUploadHelper","uploadController","newUpload","addFilesToUpload","destroy","NodePicker","pickerOptions","dialogTitle","initialContainer","globalSearch","startLocation","unselectableTypes","resolveShortcuts","resultOriginalNode","nodePicker","args","original_id","original_id_expand","findWhere","_getAddableTypesWithoutInlineFormAsMap","144","isAddableTypeWithoutInlineForm","AddItemMetadataCommand","MetadataAddItemController","displayForm","ActionCollection","date","number","member","moment","fakeActions","ConnectorFactory","currentModel","recentVersionOwnerId","owner_id","currentLoggedInUserId","tableView","lockedForOtherContols","getObject","versions","allModels","recentVersion","_fileOpenDialog","_showWarnDialog","file","_uploadFiles","_getBodyMessage","versionInfo","currentDate","versDate","deserializeDate","create_date","difference","diff","version_owner","formatMemberName","owner_id_expanded","formatExactDate","formatFriendlyDateTimeNow","formatExactTimeOnly","formatDateTime","_getOwnerInfoOfLatestVersion","bind","DialogView","_dialog","iconLeft","title","bodyMessage","showTitleIcon","dialogClassName","label","default","disabled","_onClickSelectButton","onClickCancelButton","extendAjaxOptions","url","connection","ajax","dialogView","dialog","_dialogProgressUpload","AddVersionController","view","originatingView","selectedNode","uploadFile","fileUploadModel","response","sizeinbytes","sizeinkb","formatFileSize","isLocallyCreated","Array","OpenNodePerspectiveCommand","BrowseCommand","__super__","collectCommandSignature","addItemsToolTip","collectItemsDialogTitle","selectButtonLabel","conflictsItemsHeader","conflictsDialogCloseLabel","CollectItemsNoneMessage","CollectOneItemSuccessMessage","CollectManyItemsSuccessMessage","CollectOneItemFailMessage","CollectManyItemsFailMessage","RemoveCollectItemsCommandConfirmDialogHtml","RemoveCommandConfirmDialogSingleMessage","RemoveCommandConfirmDialogMultipleMessage","RemoveCommandConfirmDialogTitle","RemoveItemsNoneMessage","RemoveOneItemSuccessMessage","RemoveSomeItemsSuccessMessage","RemoveManyItemsSuccessMessage","RemoveOneItemFailMessage","RemoveSomeItemsFailMessage","RemoveManyItemsFailMessage","RemoveSomeItemsFailMessage2","RemoveManyItemsFailMessage2","RemoveItems","RemovingOneItem","RemovingSomeItems","CollectingOneItem","CollectingItems","CollectManyItemsFailMessage2","removefromCollection","Url","NodeCollection","parallelism","TaskQueue","UploadFileCollection","PageLeavingBlocker","CollectionConflictView","CollectCommand","successMessages","formatForMany","errorMessages","_addToCollection","selectedOptions","selectedNodes","state","count","total","targetFolder","uploadCollection","_announceOperationStart","fileUpload","unset","_addSelectedNodesToCollection","promises","hideFileUploadProgress","_checkPromises","failedNodes","_showDialog","resolveOption","kill","successNodes","_showGlobalMessage","_announceOperationEnd","showError","selectableTypes","showAllTypes","orderBy","selectMultiple","startLocations","targetCollection","queue","pending","worker","node_id","targetId","_collectNode","_addToCurrentTable","cause","showFileUploadProgress","oneFileTitle","oneFileSuccess","multiFileSuccess","oneFilePending","multiFilePending","oneFileFailure","multiFileFailure","someFileSuccess","someFilePending","someFileFailure","enableCancel","targetFolderID","nodeAttr","collection_id","collectOptions","replace","encodeURIComponent","JSON","stringify","contentType","_getListView","conflictFiles","toolTip","_showConflictDialog","failureMessage","formatMessage","midSize","successPromises","failedPromises","prom","collectItem","refernce_id","unshift","successCount","successMessage","blockActions","enable","disable","unblockActions","_performActions","_announceStart","index","_performAction","_announceFinish","suppressMultipleSuccessMessage","showSuccess","suppressMultipleFailMessage","checkResult","countFailed","countOk","_getErrorMessage","msg","_getSuccessMessage","showSuccessWithLink","msgOptions","cnt","emessages","smessages","toLowerCase","pageLeavingWarning","MultipleItemsCommand","ConfirmableCommand","_confirmAction","_getConfirmTemplate","_getConfirmData","html","alertDialog","confirmQuestion","arg","omit","RemoveCollectionItemsCommand","allowCollectionRefetch","d","operation","containerCollection","jqxhr","abort","startGlobalMessage","localGlobalMessage","_executeRemoveCollectionItems","first","commandData","showProgressDialog","infiniteScroll","merge","oneSuccess","rejectResults","newStatus","errors","ConflictResolver","ApplyPropertiesSelectorView","CopyCommandParent","verb","_selectCopyOptions","applyProperties","openSelectedProperties","copyToCurrentFolder","namesToResolve","returnObj","mime_type","size","size_formatted","copyNamesToResolve","_resolveNamingConflicts","copyInstructions","instruction","_metadataHandling","sourceNode","aNode","_copySelectedNodes","nextNodeModelFactory","link_url","copyResults","userAction","contextMenuCopy","numNodes","parent","initialSelection","includeCombineProperties","propertiesSeletor","nodeNames","h1","h1Label","actionBtnLabel","excludeAddVersion","run","items","MetadataCopyMoveItemsController","controllerFunction","openMetadata","metadataController","CopyMoveItemsWithMetadata","APPLY_DESTINATION_PROPERTIES","COMBINE_ALL_PROPERTIES","CopyMoveItemsRequiredMetadata","KEEP_ORIGINAL_PROPERTIES","inheritance","_getCategories","categories","_copyNode","parent_id","newName","roles","assignTo","extended_data","getCategoriesOptions","param","statusText","categoryGroupMapping","forms","NodeLinks","nodeLink","completeUrl","success","_copyToClipboard","clipboardData","setData","element","createTextNode","elParent","createElement","style","color","background","backgroundColor","appendChild","getSelection","selection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","removeChild","mixin","makeServerAdaptor","isFetchableDirectly","urlBase","isNumber","combine","parse","perspectives","perspective","cascading","containerType","container_type","constantData","constant_data","overrideType","override_type","overrideId","override_id","nodepath","node_path","rules","rule_data","constant_extraction_mode","pnodepath","perspective_node_path","ServerAdaptorMixin","UploadableMixin","ConnectableMixin","PerspectiveModel","pick","makeUploadable","makeConnectable","isNew","isFetchable","prepareFormData","pData","requirejs","s","contexts","enableInlinePerspectiveEditing","AncestorCollectionFactory","canEditPerspective","_applicationScope","inlinePerspectiveEditing","_editInline","_editInClassicPMan","_preparePerspectiveConfig","perspectiveConfig","widgets","getCollection","_getNodePath","PManView","Date","getTime","f","_getForm","submit","attr","_getUrl","appendTo","params","_getUrlQueryParameters","i","hasOwnProperty","getCgiScript","toString","elements","btn-mode-code","btn-view-general","btn-view-rules","btn-view-layout","btn-view-widgets","view-perspective-action","perspective-action-create","perspective-action-edit","perspective-action-copy","view-perspective-form","perspective-title","perspective-type","perspective-scope","perspective-nodetypes","perspective-node","perspective-cascading","display-size-msg","rules-code","layout-flow","layout-left-center-right","layout-grid","layout-tabbed","widgetGroupsBlacklist","widgetsWhitelist","disableGrouping","NodeCommand","DeleteCommand","localUploadFileCollection","localNextNodeModelFactory","_executeDelete","setTimeout","parentId","Connector","doneVerb","CommandDoneVerbDownload","isAppleMobile","_openContent","_downloadContent","_executeContentCommand","token","_getContentUrl","_performDownload","content","focus","close","requestContentAuthToken","iframe","hide","delay","Math","min","connectionTimeout","openInNewTab","classicUnsupported","_classicUnsupported","_navigateTo","urlQuery","getUrlQueryParameters","shouldCloseTabAfterRedirect","ModalAlert","showInfo","closeUrl","isFunction","supportPath","isAbsolute","appendQuery","getOrigin","combineQueryString","nextURL","parseParam","OpenClassicPageCommand","toolItem","perspectiveId","perspective_id","publicLang","rewriteApplicationURL","enableAppleSupport","appleNodeLinkBase","applicationUrl","_getApplicationUrl","_getNodesLinks","newHref","_openNewHref","iOSEnabled","iOSText","androidText","desktopText","actionUrl","lastIndexOf","substr","join","SearchQueryModelFactory","searchQuery","clear","useContainer","FavoriteModel","modelId","selected","addToFavorites","removeFromFavorites","InlineEditCommand","inlineFormViewFactory","inlineFormView","getInlineFormView","MoveCommandParent","uploadFileModels","_selectMoveOptions","moveNamesToResolve","moveInstructions","_moveSelectedNodes","filemodel","NodeDestinationPicker","_moveNodeWithMetadata","_moveNode","errObj","bodyParam","moveOptions","method","formatAjaxData","getAjaxContentType","nodeID","finish","absoluteUrl","match","request","RulesMatchingMixin","OpenPluginModel","sequence","plugin","makeRulesMatching","OpenPluginCollection","comparator","findByNode","widgetOnly","rule","item","openWindow","getUrlQuery","openWidget","createWidget","matchRules","openPlugins","DownloadCommand","openAuthenticatedPage","forceDownload","_openWindow","widgetView","_openWidget","FullPageModal","ViewerView","_openURL","needsAuthentication","func","objAction","objId","nexturl","order","summaries","classicNodes","isSupported","smartNodes","navigationView","metadatanavigation","$el","closest","_getAtLeastOneNode","addClass","PermissioNavigationWidget","MetadataView","PermissionsView","permissionsView","showInDialogView","mdv","shortcutNode","showCloseIcon","showBackIcon","activeTab","metadataTabView","selectedTab","tabLinks","showPermissionView","isExpandedView","nameAttribute","supportOriginatingView","triggerMethodOn","_showOriginatingView","$csProperties","$originatingView","width","direction","complete","isDisplayed","removeClass","triggerMethod","requireSwitched","largeSize","header","MetadataNavigationWidget","NodeVersionCollection","metadata","selectedProperty","showThumbnails","_showNode","rename","RenameFavoriteCommand","inlineFormFavoriteView","isReservedClicked","UserModelFactory","user","ensureFetched","reserved_user_id","PerspectiveRouter","signInPageUrl","_signOut","cgiUrl","routesWithSlashes","authenticator","unauthenticate","reason","query","search","pathname","applicationScope","urlQueryParameters","viewType","isUnreservedClicked","UserWidgetView","userId","userid","baseElement","showUserProfileLink","showMiniProfile","loggedUserId","showUserProfileDialog","versionLang","VersionDeleteCommand","DeleteVersionSomeItemsFailMessage","DeleteVersionManyItemsFailMessage","selectedVersions","OpenCommand","PropertiesCommand","VersionDownloadCommand","VersionOpenCommand","VersionPropertiesCommand","_isSupported","notSupportedObjects","inArray","accessibleTable","exec","thumbnailViewState","showDescriptions","icon","langStr","contents","replaceWith","backbone","enableGridView","_selectSaveFilterOptions","facets","filterName","selectedFacets","filters","idx","facet","facettypes","facetArrayType","values","facettype","ajaxFormData","location_id","selected_facets","saveFilterOptions","FormData","virtualFolderId","properties","virtualFolderNode","dets","responseText","errorObj","saveFilter","hasClass","checkMaximizeMode","permissionModel","right_id","permissionType","filterId","authenticatedUserPermissions","hasEditPermissionRights","admin_permissions","targetView","failureMsg","_getMessageWithUserDisplayName","EditPermissionHelper","loginUserId","editPermissionHelper","popoverPlacement","popoverAtBodyElement","popoverTragetElement","permissions","readonly","applyTo","userSelection","saveAttr","apply_to","include_sub_types","failure","errObject","commandName","errObjects","failedfilesCollection","errCollection","succesfull_count","langTitle","success_msg","showPermissionApplyingProgress","unformattedMsg","displayName","userExpandDetails","currentRow","permissionsContentView","UserPickerView","MemberModelFactory","NodePermissionModel","memberFilter","userPickerView","userPickerModel","userpickerRegion","Region","currentView","getReadPermissions","right_id_expand","DeletePermissionCommand","confirmDialogMessage","setCommandTitle","ApplyPermissionView","ApplyPermissionHeaderView","BlockingView","_executeDeletePermission","_deletePermission","headerView","removePermission","_view","onHideDialog","imbue","origView","orginatingView","permissionModelType","subFolderSelected","destroyDialog","successMsg","processForEmptyOwner","handleFailure","failedPermissionsCollection","_selectAddUserOrGroupOptions","selectedMember","members","selectedPermissions","permissionModelData","nodePermissionModel","MembersPickerDialog","unSelectableMembers","originalCollection","permissionCollection","filter","dialogClass","adduserorgroup","nodeModel","addButtonLabel","availablePermissions","unselectableMembers","userRights","owner","noOwnerOrGroup","noGroup","_selectAddOwnerOrOwnerGroupOptions","include_sub_type","addOwnerGroup","_executeApplyPermission","restorePublicAccess","addPublicAccess","faq","supportedObjects","executeDefaultAction","cancel","defaultActionController","executeAction"],"mappings":"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","file":"csui-commands.js","sourcesContent":["csui.define('csui/utils/command.error',[\"module\",\r\n  \"csui/lib/jquery\",\r\n  \"csui/lib/underscore\",\r\n  'csui/lib/backbone',\r\n  \"csui/utils/log\",\r\n  \"csui/utils/base\"\r\n], function (module, $, _, Backbone, log, base) {\r\n\r\n  // constructor!!\r\n  function CommandError(arg1, arg2) {\r\n\r\n    if (!arg1) {\r\n      throw new Error(\"No argument passed\");\r\n    }\r\n\r\n    function applyArg2() {\r\n      // the second argument can be a object with errorDetails and/or node members or just\r\n      // a single errorDetails string or a NodeModel\r\n      if (arg2 && _.isString(arg2)) {\r\n        this.errorDetails = arg2;\r\n      } else {\r\n        if (arg2 instanceof Backbone.Model) {\r\n          this.node = arg2;\r\n        } else {\r\n          if (arg2 && _.isObject(arg2)) {\r\n            if (arg2.errorDetails && _.isString(arg2.errorDetails)) {\r\n              this.errorDetails = arg2.errorDetails;\r\n            }\r\n            if (arg2.node instanceof Backbone.Model) {\r\n              this.node = arg2.node;\r\n            }\r\n            if (arg2.requestError && _.isObject(arg2.requestError)) {\r\n              var requestMessage = new base.RequestErrorMessage(arg2.requestError);\r\n              if (this.message) {\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.message;\r\n                }\r\n              } else {\r\n                this.message = requestMessage.message;\r\n                if (!this.errorDetails) {\r\n                  this.errorDetails = requestMessage.errorDetails;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (arg1 instanceof Error) {\r\n      this.message = arg1.message;\r\n      if (arg1.stack) {\r\n        this.stack = arg1.stack;\r\n      }\r\n    } else {\r\n      if (_.isString(arg1)) {\r\n        this.message = arg1;\r\n      } else {\r\n        var requestMessage = new base.RequestErrorMessage(arg1);\r\n        this.message = requestMessage.message;\r\n        this.errorDetails = requestMessage.errorDetails;\r\n        this.statusCode = requestMessage.statusCode;\r\n      }\r\n    }\r\n    applyArg2.call(this);\r\n    this.name = \"CommandError\";\r\n  }\r\n\r\n  CommandError.prototype = Object.create(Error.prototype);\r\n\r\n  return CommandError;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/localized.strings',{\r\n\r\n  // Add\r\n  ShortcutPickerTitle: \"Select target for Shortcut\",\r\n\r\n  // AddItemMetadata\r\n  CommandNameAddItemMetadata: \"Add Item with metadata\",\r\n\r\n  CommandNameAddVersion: \"AddVersion\",\r\n\r\n  // Copy\r\n  CommandNameCopy: \"Copy\",\r\n  CommandVerbCopy: \"copy\",\r\n  DialogTitleSingleCopy: \"Copy {0} item\",\r\n  DialogTitleCopy: \"Copy {0} items\",\r\n  SomeFilesNotCopiedSuccessfully: 'Some items were not successfully copied.',\r\n  CopyingNodes: 'Copying {0} nodes',\r\n  CopyingNode: 'Copying 1 node',\r\n  CopyPageLeavingWarning: \"If you leave the page now, pending items will not be copied.\",\r\n  CopyingOneItem: 'Copying item',\r\n  CopyItems: 'Copying {0} items',\r\n  CopySomeItems: 'Copying {0} items',\r\n  CopyItemsNoneMessage: \"No items copied.\",\r\n  CopyOneItemSuccessMessage: '1 item successfully copied.',\r\n  CopySomeItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyManyItemsSuccessMessage: '{0} items successfully copied.',\r\n  CopyOneItemFailMessage: '1 item failed to copy.',\r\n  CopySomeItemsFailMessage: '{0} items failed to copy.',\r\n  CopyManyItemsFailMessage: '{0} items failed to copy.',\r\n  CopySomeItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n  CopyManyItemsFailMessage2: '{2} items failed to copy.',    // {2} !!\r\n\r\n  // Delete\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  DeleteCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                  \"<%- message %>\" +\r\n                                  \"</span>\",\r\n  DeleteCommandConfirmDialogSingleMessage: \"Do you want to delete {0}?\",\r\n  DeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} items?\",\r\n  CommandNameDelete: \"Delete\",\r\n  CommandVerbDelete: \"delete\",\r\n  DeletePageLeavingWarning: \"If you leave the page now, pending items will not be deleted.\",\r\n  DeleteItemFailed: 'Deleting item {0} failed.',\r\n  DeleteItems: 'Deleting {0} items',\r\n  DeletingOneItem: 'Deleting item',\r\n  DeletingSomeItems: 'Deleting {0} items',\r\n  DeleteItemsNoneMessage: \"No items deleted.\",\r\n  DeleteOneItemSuccessMessage: \"1 item successfully deleted.\",\r\n  DeleteSomeItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteManyItemsSuccessMessage: \"{0} items successfully deleted.\",\r\n  DeleteOneItemFailMessage: \"1 item failed to delete.\",\r\n  DeleteSomeItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteManyItemsFailMessage: \"{0} items failed to delete.\",\r\n  DeleteSomeItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n  DeleteManyItemsFailMessage2: \"{2} items failed to delete.\",   // {2} !!\r\n\r\n  ApplyingManyItemsSuccessMessage: \"Applied successfully to {0} items.\",\r\n  ApplyingOneItemFailMessage: \"Failed to apply to 1 item.\",\r\n  ApplyingManyItemsFailMessage2: \"Failed to apply to {0} items.\",\r\n\r\n  // Download\r\n  CommandNameDownload: \"Download\",\r\n  CommandVerbDownload: \"download\",\r\n\r\n  // Move\r\n  CommandNameMove: \"Move\",\r\n  CommandNameVerbMove: \"move\",\r\n  DialogTitleSingleMove: \"Move {0} item\",\r\n  DialogTitleMove: \"Move {0} items\",\r\n  SomeFilesNotMovedSuccessfully: 'Some items were not successfully moved.',\r\n  MovePageLeavingWarning: \"If you leave the page now, pending items will not be moved.\",\r\n  MovingNodes: 'Moving {0} nodes',\r\n  MovingNode: 'Moving 1 node',\r\n  MovingOneItem: 'Moving item',\r\n  MovingItems: 'Moving {0} items',\r\n  MovingSomeItems: 'Moving {0} items',\r\n  MoveItemsNoneMessage: \"No items moved.\",\r\n  MoveOneItemSuccessMessage: '1 item successfully moved.',\r\n  MoveSomeItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveManyItemsSuccessMessage: '{0} items successfully moved.',\r\n  MoveOneItemFailMessage: '1 item failed to move.',\r\n  MoveSomeItemsFailMessage: '{0} items failed to move.',\r\n  MoveManyItemsFailMessage: '{0} items failed to move.',\r\n  MoveSomeItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n  MoveManyItemsFailMessage2: '{2} items failed to move.',    // {2} !!\r\n\r\n  // Paste\r\n  CommandNamePaste: \"Paste\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  //Add Favorite\r\n  CommandNameFavorite: \"Add Favorite\",\r\n  CommandVerbFavorite: \"update Favorites\",\r\n  CommandDoneVerbFavorite: \"added to Favorites\",\r\n  CommandRemovedVerbFavorite: \"removed from Favorites\",\r\n  updateFavoriteFailTitle: \"Update Favorite\",\r\n  updateFavoriteFailMessage: 'Failed to update Favorite for node \"{0}\". \\n\\n{1}',\r\n\r\n  //Description\r\n  CommandDescriptionToggle: \"Description Toggle\",\r\n  CommandHideDescription: \"Hide description\",\r\n  CommandShowDescription: \"Show description\",\r\n\r\n  // Share\r\n  CommandNameEmailLink: \"Share\",\r\n  CommandVerbEmailLink: \"share\",\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n  EmailLinkCommandFailedWithTooMuchItemsErrorMessage: \"Share failed. Too many items were selected.\",\r\n  EmailLinkCommandFailedWithTooMuchItemsDetailErrorMessage: \"Only ~10 items can be shared at one\" +\r\n                                                            \" time.\",\r\n\r\n  // SignOut\r\n  SignOutCommandName: \"Sign Out\",\r\n\r\n  // SwitchToClassic\r\n  SwitchToClassicCommandName: \"Classic View\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n  // UserProfile\r\n  UserProfileCommandName: \"Profile\",\r\n\r\n  // Upload\r\n  // see src/controls/globalmessage/impl/progresspanel/impl/nls/root/progresspanel.lang.js\r\n\r\n  //Rename\r\n  CommandVerbRename: \"rename\",\r\n\r\n  //Filter Save\r\n  CommandNameSaveFilter: \"Save As\",\r\n  CommandVerbSaveFilter: \"Save As\",\r\n  DialogTitleSaveFilter: \"Save as\",\r\n  SaveFilterCommandSuccessfully: \"{0} virtual folder created successfully.\",\r\n\r\n  // Edit\r\n  NoEditUrl: 'Web page for editing of this doucment is not available.',\r\n\r\n  // Copy Link\r\n  CommandNameCopyLink: \"Copy link\",\r\n  CommandVerbCopyLink: \"copy link\",\r\n  CopyLinkSuccessMessage: \"Link copied to clipboard.\",\r\n  CopyLinkFailMessage: \"Copy link has failed to copy the link to clipboard.\",\r\n\r\n  //permissions commands\r\n  DeletePermissionCommandRemoveOwner: \"Remove owner\",\r\n  DeletePermissionCommandRemoveGroup: \"Remove owner group\",\r\n  DeletePermissionCommandRemovePublicAccess: \"Remove Public Access\",\r\n  DeletePermissionCommandRemoveOther: \"Remove from list\",\r\n  DeletePermissionCommandConfirmDialogTitle: 'Remove {0}',\r\n  DeletePermissionCommandConfirmDialogSingleMessage: 'Do you want to remove {0}' +\r\n                                                     ' from this permissions list?',\r\n  DeletePermissionCommandConfirmDialogPublicAccessMessage: 'Are you sure you want to remove' +\r\n                                                           ' {0} from this permissions list?',\r\n  DeletePermissionCommandSuccessMessage: \"{0} was removed from the permissions list.\",\r\n  DeletePermissionCommandSuccessMessageWithCount: \"{0} was removed from the permissions list of\" +\r\n                                                  \" {1}.\",\r\n  DeletePermissionCommandFailMessage: \"Failed to remove {0} from the permissions list.\",\r\n  publicAccess: 'Public Access',\r\n  RestorePublicAccessSuccessMessage: \"{0} restored\",\r\n  RestorePublicAccessSuccessMessageWithCount: \"{0} restored to the permission list of {1}\",\r\n  undefinedCollection: 'Collection is undefined',\r\n  EditPermissionCommandFailMessage: \"Failed to edit {0} from the permissions list.\",\r\n  Owner: 'owner',\r\n\r\n  CommandNameAddOwnerOrOwnerGroup: \"Add Owner Or Owner Group\",\r\n  AddOwnerOrGroup: \"Add owner or owner group\",\r\n  AddOwner: \"Add owner\",\r\n  AddOwnerGroup: \"Add owner group\",\r\n  CommandNameAddUserorGroup: 'Add user or group',\r\n  CommandNameRestorePublicAccess: 'Restore public access',\r\n  AddButtonLabel: 'Add',\r\n  AddOwnerOrGroupDialogTitle: \"Add Owner or Owner group\",\r\n  AddOwnerDialogTitle: \"Add Owner\",\r\n  AddOwnerGroupDialogTitle: \"Add Owner group\",\r\n\r\n  ChangeOwnerPermissionCommand: 'Change owner',\r\n  ChangeOwnerGroupPermissionCommand: 'Change owner group',\r\n\r\n  AddUserOrGroupSuccess: '{0} added successfully',\r\n  AddUserOrGroupFailure: '{0} failed to add',\r\n  AddUserOrGroupSuccessWithCount: '{0} was added to the permissions list of {1}.',\r\n\r\n  formatForNone: \"{0} items\",\r\n  formatForOne: \"{0} item\",\r\n  formatForTwo: \"{0} items\",\r\n  formatForFive: \"{0} items\",\r\n\r\n  AppliedPermissions: 'Permissions applied selected item',\r\n  AppliedPermissionsOneSuccess: 'Permissions applied to {0} item',\r\n  AppliedPermissionsOnlySuccess: 'Permissions applied to {0} items',\r\n  AppliedPermissionsOneFailure: 'Permissions failed to apply {0} item',\r\n  AppliedPermissionsOnlyFailure: 'Permissions failed to apply {0} items',\r\n  AppliedPermissionsSuccessAndFailure: 'Permissions applied to {0} items and failed to apply {1}' +\r\n                                       ' items',\r\n\r\n  // CommandHelper\r\n  CommandSuccessfullySingular: \"{0} item successfully {1}.\",\r\n  CommandFailedSingular: \"{0} item failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} items successfully {1}.\",\r\n  CommandFailedPlural: \"{0} items failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} items failed to {2}.\",\r\n\r\n  NoConnectivity: \"No connectivity\",\r\n  GoToOffline: \"Go to offline files?\",\r\n\r\n  viewTypeUnsupported: 'This content type is not currently supported on a mobile device.',\r\n\r\n  MobileIOS: \"iOS Mobile\",\r\n  DesktopAndroid: \"Desktop and Android\",\r\n  Close: 'Close',\r\n\r\n  warnTitle: \"Add Version\",\r\n  warnMessage: \"This document is unreserved and the latest version was added by {0} {1}\" +\r\n               \" {2}. Do you want to continue?\",\r\n  yesButton: \"Yes\",\r\n  noButton: \"No\",\r\n  grammer: \"on\",\r\n  otheruser: \"other user\",\r\n  allUsersAndGroups: \"Users and Groups\",\r\n  addUsersAndGroups: \"Add users or groups\",\r\n  allGroups: \"Groups\",\r\n  cancelButtonLabel: \"Cancel\",\r\n  applyButtonLabel: \"Apply\",\r\n  EditPerspective: \"Edit page\",\r\n  CreatePerspective: \"Create new perspective\",\r\n  ThumbnailTitle: \"Grid View\",\r\n  ListViewTitle: \"Browse View\"\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/versions/nls/root/localized.strings',{\r\n\r\n  // DeleteVersion\r\n  CommandNameVersionDelete: \"Delete Version\",\r\n  CommandVerbVersionDelete: \"delete\",\r\n  DeleteCommandConfirmDialogTitle: \"Delete\",\r\n  VersionDeleteCommandConfirmDialogSingleMessage: \"Do you want to delete version {0} from {1}?\",\r\n  VersionDeleteCommandConfirmDialogMultipleMessage: \"Do you want to delete {0} versions?\",\r\n  DeleteVersionPageLeavingWarning: \"If you leave the page now, pending versions will not be\" +\r\n                                   \" deleted.\",\r\n\r\n  DeleteVersions: 'Deleting {0} versions',\r\n  DeletingSomeVersions: 'Deleting {0} versions',\r\n  DeletingOneVersion: 'Deleting version',\r\n  DeleteVersionItemsNoneMessage: \"No versions deleted.\",\r\n  DeleteVersionOneItemSuccessMessage: \"1 version succeeded to delete.\",\r\n  DeleteVersionSomeItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionManyItemsSuccessMessage: \"{0} versions succeeded to delete.\",\r\n  DeleteVersionOneItemFailMessage: \"1 version failed to delete.\",\r\n  DeleteVersionSomeItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n  DeleteVersionManyItemsFailMessage2: \"{2} versions failed to delete.\",   // {2} !!!\r\n\r\n\r\n  // TODO: this is only here, because the CommandHelper.handleExecutionResults does an extension\r\n  // TODO: remove this if the handleExecutionResults is not used anymore or the extension is removed\r\n  CommandSuccessfullySingular: \"{0} version successfully {1}.\",\r\n  CommandFailedSingular: \"{0} version failed to {1}.\",\r\n  CommandSuccessfullyPlural: \"{0} versions successfully {1}.\",\r\n  CommandFailedPlural: \"{0} versions failed to {1}.\",\r\n  CommandFailedPartial: \"{0} of {1} versions failed to {2}.\"\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commandhelper',[\r\n  'require', 'module', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/lib/backbone', 'csui/utils/base', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/models/version', 'csui/lib/jquery.when.all'\r\n], function (require, module, $, _, Backbone, base, CommandError,\r\n    lang, versionsLang, VersionModel) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n\r\n  var CommandHelper = function () {};\r\n\r\n  _.extend(CommandHelper.prototype, Backbone.Events, {\r\n\r\n    checkNodeTypesAndRights: function (nodes, types, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            return (_.contains(types, node.get(\"type\")) ||\r\n                    container && node.get(\"container\")) &&\r\n                   _.all(rights, function (right) {\r\n                     return node.get(\"perm_\" + right);\r\n                   });\r\n          });\r\n    },\r\n\r\n    checkNodeTypes: function (nodes, types) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      var container = _.contains(types, -1);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.contains(types, attributes.type) ||\r\n                   container && attributes.container;\r\n          });\r\n    },\r\n\r\n    checkNodeRights: function (nodes, rights) {\r\n      _.isArray(nodes) || nodes && (nodes = [nodes]);\r\n      return nodes && nodes.length && _.all(nodes, function (node) {\r\n            var attributes = base.isBackbone(node) ? node.attributes : node;\r\n            return _.all(rights, function (right) {\r\n              return attributes[\"perm_\" + right];\r\n            });\r\n          });\r\n    },\r\n\r\n    getJustOneNode: function (status) {\r\n      var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n      return node;\r\n    },\r\n\r\n    getAtLeastOneNode: function (status) {\r\n      if (status.nodes) {\r\n        return status.nodes;\r\n      }\r\n\r\n      var ViewCollection = Backbone.Collection.extend(\r\n          status.collection ? {model: status.collection.model} : {}\r\n      );\r\n\r\n      return new ViewCollection();\r\n    },\r\n\r\n    updateNode: function (node, attributesToUpdate) {\r\n      var self = this;\r\n      return node\r\n          .save(attributesToUpdate, {\r\n            wait: true,\r\n            patch: true,\r\n            silent: true\r\n          })\r\n          .then(function () {\r\n            return node.fetch({force:true});\r\n          })\r\n          .then(function () {\r\n            return node;\r\n          }, function (error) {\r\n            var commandError = new CommandError(error, node);\r\n            $.Deferred().reject(commandError);\r\n            return commandError;\r\n          });\r\n    },\r\n\r\n    // TODO: The drawback of this function is that it uses localized strings where text gets composed with help of placeholders (doneVerb).\r\n    // TODO: This introduces great problems for localization.\r\n    // Returns a promise which is resolved when all given promises are resolved. The returned\r\n    // promise gets an array with the collected results of all given promises.\r\n    // If options.suppressSuccessMessage == true then no success message is displayed.\r\n    handleExecutionResults: function (promise, options) {\r\n      var handleExecutionResultsDeferred = $.Deferred(),\r\n          modulePromise = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function(GlobalMessage) {\r\n        modulePromise.resolve(GlobalMessage);\r\n      }, modulePromise.reject);\r\n\r\n      $.whenAll(modulePromise, promise)\r\n       .always(function (parameters) {\r\n        var GlobalMessage = parameters[0],\r\n            results = parameters[1];\r\n        if (!_.isArray(results)) {\r\n          results = [results];\r\n        }\r\n\r\n        // At this point all promises from all commands are either resolved or rejected\r\n        // If the command execution was successful, the node is in the results. If the command\r\n        // failed the result is Error\r\n        var okCnt = 0;\r\n        var failedCnt = 0;\r\n        _.each(results, function (result) {\r\n          if (result !== undefined && !result.cancelled) {\r\n            if (result instanceof Error) {\r\n              failedCnt++;\r\n            } else {\r\n              okCnt++;\r\n            }\r\n          }\r\n        });\r\n        if (failedCnt === 0 && okCnt === 0) {\r\n          // user canceled confirmation dialog or\r\n          // no parameter was intentionally specified for e.g. resolve and reject to skip error handling\r\n          handleExecutionResultsDeferred.reject();\r\n          return;\r\n        }\r\n        var commandError = results[0];\r\n        // the command itself took care of the status  and error handling\r\n\r\n        if (commandError instanceof VersionModel) {\r\n          // let's override language bundles based on model type.\r\n          _.extend(lang, versionsLang);\r\n        }\r\n\r\n        if (results.length === 1) {\r\n          if (okCnt === 1) {\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullySingular, okCnt,\r\n                      options.command.get('doneVerb')));\r\n            }\r\n          } else {\r\n            var message = commandError.errorDetails || commandError.message;\r\n\r\n            if (config.offlineSupport && commandError.statusCode === 0) {\r\n              handleExecutionResultsDeferred.reject(commandError);\r\n            }\r\n            else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedSingular, failedCnt,\r\n                      options.command.get('verb')),\r\n                  message);\r\n            }\r\n          }\r\n        } else {\r\n          if (failedCnt === 0) {\r\n            // all were successful\r\n            if (!options.suppressSuccessMessage) {\r\n              GlobalMessage.showMessage(\"success\",\r\n                  _.str.sformat(lang.CommandSuccessfullyPlural, okCnt,\r\n                      options.command.get('doneVerb')\r\n                  ));\r\n            }\r\n          } else {\r\n            if (okCnt === 0) {\r\n              // all failed\r\n              if (config.offlineSupport && commandError.statusCode === 0) {\r\n                handleExecutionResultsDeferred.reject(commandError);\r\n              }\r\n              else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n                GlobalMessage.showMessage(\"error\",\r\n                    _.str.sformat(lang.CommandFailedPlural, failedCnt,\r\n                        options.command.get('verb')\r\n                    ));\r\n              }\r\n            } else if (!options.suppressFailMessage && !commandError.suppressFailMessage) {\r\n              if (!!options.customError) {\r\n                GlobalMessage.showMessage('error', results[1]);\r\n              } else {\r\n                // some failed, some were successful\r\n                GlobalMessage.showMessage(\"error\",\r\n                  _.str.sformat(lang.CommandFailedPartial, failedCnt, results.length,\r\n                      options.command.get('verb')\r\n                ));\r\n              }\r\n            }\r\n          }\r\n        }\r\n        handleExecutionResultsDeferred.resolve(results);\r\n      });\r\n      // return a promise - table toolbar waits for it to do anything else after command\r\n      // execution (like display inline form)\r\n      return handleExecutionResultsDeferred.promise();\r\n    },\r\n\r\n    _getErrorMessageFromResponse: function (err) {\r\n      var errorMessage;\r\n      if (err && err.responseJSON && err.responseJSON.error) {\r\n        errorMessage = err.responseJSON.error;\r\n      } else {\r\n        var errorHtml = base.MessageHelper.toHtml();\r\n        base.MessageHelper.reset();\r\n        errorMessage = $(errorHtml).text();\r\n      }\r\n      return errorMessage;\r\n    },\r\n\r\n    // TODO: Deprecate and remove this method in favour of node.fetch.\r\n    refreshModelAttributesFromServer: function (node, collection) {\r\n      var tempNode = node.clone();\r\n      tempNode.collection = collection || node.collection;\r\n      return tempNode.fetch()\r\n                     .then(function () {\r\n                       node.set(tempNode.attributes);\r\n                       if (tempNode.original) {\r\n                         node.original = tempNode.original;\r\n                       }\r\n                       return node;\r\n                     });\r\n    },\r\n\r\n    showOfflineMessage: function (error, yesCallBck, noCallBack) {\r\n      if (error && error.statusCode === 0 && config.offlineSupport) {\r\n        var self = this;\r\n\r\n        require(['csui/dialogs/modal.alert/modal.alert'],\r\n            function (modalAlert) {\r\n\r\n              modalAlert.showInformation(lang.GoToOffline, lang.NoConnectivity,\r\n                  {\r\n                    buttons: modalAlert.buttons.YesNo\r\n                  })\r\n                  .always(function (answer) {\r\n                    if (answer) {\r\n                      yesCallBck ? yesCallBck() : window.location.href = \"#offline.list\";\r\n                    }\r\n                    else {\r\n                      noCallBack ? noCallBack() : self.trigger('offline:refused');\r\n                    }\r\n                  });\r\n            });\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  var helperInstance = new CommandHelper();\r\n  return helperInstance;\r\n\r\n});\r\n\n","csui.define('csui/models/command',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\"\r\n], function (module, require, _, Backbone, log, CommandHelper) {\r\n\r\n  // {\r\n  //   signature:   unique identifier among all commands\r\n  //   command_key: permitted action identifier returned by the server\r\n  //   name:        title to show in the UI by default\r\n  //   scope:       node scope to work at: singe|multiple\r\n  //   enabled: function (status) {\r\n  //     returns boolean if this command should be enabled or available;\r\n  //     the default implementation checks the presence of an action with\r\n  //     the command_key in actions available for all affected nodes\r\n  //   },\r\n  //   execute: function (status, options) {\r\n  //     executes this command; no default implementation\r\n  //   }\r\n  // }\r\n\r\n  var CommandModel = Backbone.Model.extend({\r\n\r\n    idAttribute: \"signature\",\r\n\r\n    constructor: function CommandModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope      = this.get(\"scope\"),\r\n          nodes      = this._getNodesByScope(status, scope),\r\n          signatures = this.get(\"command_key\");\r\n\r\n      return this._checkPermittedActions(nodes, signatures, status.container);\r\n    },\r\n\r\n    isNonPromoted: function (status) {\r\n      var scope         = this.get(\"scope\"),\r\n          nodes         = this._getNodesByScope(status, scope),\r\n          signatures    = this.get(\"command_key\"),\r\n          isNonPromoted = false;\r\n\r\n      // if at least one node is selected and at least one selected node\r\n      // has action which is non-promoted\r\n      if (nodes && nodes.length) {\r\n        var checkFn = this._getNonPromotedCheckFunctionsForSignatures(signatures);\r\n        if (checkFn) {\r\n          _.find(nodes, function (node) {\r\n            var action = checkFn(node);\r\n            if (action && action.get('csuiNonPromotedAction') === true) {\r\n              isNonPromoted = true;\r\n              return true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return isNonPromoted;\r\n    },\r\n\r\n    _getNodesByScope: function (status, scope) {\r\n      // get the array of nodes which the command should apply to\r\n      // according to the scope which the command is capable of\r\n      var nodes;\r\n      switch (scope) {\r\n      case \"single\":\r\n        nodes = CommandHelper.getJustOneNode(status);\r\n        nodes && (nodes = [nodes]);\r\n        break;\r\n      default: // without a specific scope, use case \"multiple\"\r\n        // the checks below use an array; not a Backbone.Collection\r\n        nodes = CommandHelper.getAtLeastOneNode(status).models;\r\n        break;\r\n      }\r\n      return nodes;\r\n    },\r\n\r\n    _getCheckFunctionsForSignatures: function (signatures) {\r\n      var checkNode;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkNode = function (node) {\r\n            return _.any(signatures, function (signature) {\r\n              return node.actions && node.actions.findRecursively(signature);\r\n            });\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkNode = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkNode;\r\n    },\r\n\r\n    _getNonPromotedCheckFunctionsForSignatures: function (signatures) {\r\n      var checkFn;\r\n      if (signatures) {\r\n        if (_.isArray(signatures) && signatures.length) {\r\n          checkFn = function (node) {\r\n            var action;\r\n            _.find(signatures, function (signature) {\r\n              action = node.actions && node.actions.findRecursively(signature);\r\n              return !!action;\r\n            });\r\n            return action;\r\n          };\r\n        } else if (_.isString(signatures)) {\r\n          checkFn = function (node) {\r\n            return node.actions && node.actions.findRecursively(signatures);\r\n          };\r\n        }\r\n      }\r\n      return checkFn;\r\n    },\r\n\r\n    _checkPermittedActions: function (nodes, signatures, container) {\r\n      // if at least one node is selected and each selected node\r\n      // has the right action in actions, the command is enabled\r\n      if (nodes && nodes.length) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        // if no command_key is specified, the descended command is\r\n        // always enabled; but it usually overrides the enabled() method\r\n        return !checkNode || _.all(nodes, checkNode);\r\n      }\r\n      return false;\r\n    },\r\n\r\n    _getNodeActionForSignature: function (node, signatures) {\r\n      var action;\r\n      if (node) {\r\n        var checkNode = this._getCheckFunctionsForSignatures(signatures);\r\n        if (!!checkNode) {\r\n          action = checkNode.call(this, node);\r\n        }\r\n      }\r\n      return action;\r\n    }\r\n\r\n  });\r\n\r\n  return CommandModel;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/localized.strings',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/go.to.node.history',['module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var visitedNodesByContext = {};\r\n\r\n  var GoToNodeHistoryCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Back',\r\n      name: lang.GoToHistory\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      // Module configuration can change later, than this module has been\r\n      // required and its callback executed. Repeat reading its config.\r\n      var config = _.extend({\r\n            enabled: false\r\n          }, module.config()),\r\n          context = status.context || options && options.context,\r\n          visitedNodes;\r\n      // Context us not mandatory; some commands can work without it,\r\n      // and those, which cannot, should say it\r\n      if (!context) {\r\n        return false;\r\n      }\r\n      if (config.enabled) {\r\n        this._ensureGoBackList(context);\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] || [];\r\n      // Top node is the current one. At least one more node below is needed\r\n      // for being able to go back to it.\r\n      return config.enabled && visitedNodes.length > 1;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node'\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            visitedNodes = visitedNodesByContext[context.cid] || [];\r\n        // Do not crash if somebody executed this command without asking\r\n        // if it is enabled first. Sanity check.\r\n        if (visitedNodes.length > 1) {\r\n          // Top node is the current one. Pop it, so that the previous one\r\n          // on the stack can become the current one.\r\n          visitedNodes.pop();\r\n          nextNode.set('id', visitedNodes[visitedNodes.length - 1]);\r\n        }\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    clearHistory: function (context) {\r\n      delete visitedNodesByContext[context.cid];\r\n    },\r\n\r\n    _ensureGoBackList: function (context) {\r\n      // There is only one command instance on the page, once the command\r\n      // has been required, but there can be multiple contexts.\r\n      var visitedNodes = visitedNodesByContext[context.cid];\r\n      if (visitedNodes) {\r\n        return;\r\n      }\r\n      visitedNodes = visitedNodesByContext[context.cid] = [];\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function (NodeModelFactory, NextNodeModelFactory) {\r\n        var nextNode = context.getModel(NextNodeModelFactory);\r\n        // Ensure, that the initially empty stack start with the current node.\r\n        visitCurrentNode(NodeModelFactory);\r\n        // Whenever the context is fetched, ensure, that the new node gets\r\n        // pushed on the top of the stack.\r\n        context.on('request', function () {\r\n          visitCurrentNode(NodeModelFactory);\r\n        });\r\n        // Some components either do not wait for context's \"request\" event,\r\n        // or they registered their listener earlier, than this command.\r\n        // Get the new node before a context plugin decides to fetch context.\r\n        nextNode.on('change:id', function () {\r\n          visitCurrentNode(NextNodeModelFactory);\r\n        });\r\n        function visitCurrentNode(Factory) {\r\n          var node = context.getModel(Factory),\r\n              nodeId = node.get('id');\r\n          // Node ID could be reset, if nextNode event has been caught.\r\n          // If both nextNode's and node's events are triggered, this\r\n          // function will be called with the same node ID.\r\n          if (nodeId && visitedNodes[visitedNodes.length - 1] !== nodeId) {\r\n            visitedNodes.push(nodeId);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  return GoToNodeHistoryCommand;\r\n\r\n});\r\n\n","csui.define('csui/integration/folderbrowser/commands/nls/root/localized.strings',{\r\n  \"GoToHistory\": \"Go Back\",\r\n  \"OpenFullPageContainer\": \"Open Full Page Container\"\r\n});\r\n\n","\n","csui.define('csui/integration/folderbrowser/commands/open.full.page.container',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'csui/models/command', 'csui/utils/node.links/node.links',\r\n  'i18n!csui/integration/folderbrowser/commands/nls/localized.strings'\r\n], function (module, require, $, _, CommandModel, nodeLinks, lang) {\r\n  'use strict';\r\n\r\n  var OpenFullPageWorkpsace = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Page',\r\n      name: lang.OpenFullPageContainer\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var config = _.extend({\r\n        enabled: false\r\n      }, module.config());\r\n      return config.enabled && !!status.container;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      window.open(nodeLinks.getUrl(status.container));\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n  });\r\n\r\n  return OpenFullPageWorkpsace;\r\n});\r\n\n","csui.define('csui/models/commands',[\"module\", \"csui/lib/underscore\", \"csui/lib/backbone\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (module, _, Backbone, log, CommandModel) {\r\n\r\n  var CommandCollection = Backbone.Collection.extend({\r\n\r\n    model: CommandModel,\r\n\r\n    constructor: function CommandCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    getAllSignatures: function () {\r\n      return _.chain(this.pluck('command_key'))\r\n          .map(function (signature) {\r\n            if (_.isArray(signature)) {\r\n              // If there are multiple command keys to check, take just the\r\n              // first one, which is the V2 one needed for the URL query\r\n              var result = signature[0];\r\n              // If the 'default' command key is requested, add the concrete\r\n              // key too; v1 expects 'default' and v2 'open', while the\r\n              // concrete action would be at the third place then.\r\n              if (result === 'default') {\r\n                result = ['default', 'open', signature[2]];\r\n              }\r\n              return result;\r\n            }\r\n            return signature;\r\n          })\r\n          .flatten()\r\n          .compact()\r\n          .unique()\r\n          .value();\r\n    }\r\n\r\n  });\r\n\r\n  return CommandCollection;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands',[\r\n  'csui/lib/underscore', 'csui/models/commands',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands'\r\n], function (_, CommandCollection, extraCommands) {\r\n  'use strict';\r\n\r\n  var commands = new CommandCollection();\r\n\r\n  _.extend(commands, {\r\n    signatures: {\r\n      browse: 'Browse',\r\n      open: 'Open',\r\n      download: 'Download',\r\n      add: 'Add',\r\n      navigate: 'Navigate',\r\n      original: 'Original'\r\n    },\r\n    version: '1.0'\r\n  });\r\n\r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n         .flatten(true)\r\n         .map(function (Command) {\r\n           return new Command();\r\n         })\r\n         .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n});\r\n\n","csui.define('csui/utils/commands/add.categories',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\", \"csui/utils/base\", \"csui/utils/log\",\r\n  \"csui/models/command\"\r\n], function (require, $, _, base, log, CommandModel) {\r\n\r\n  var AddCategories = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'AddCategory',\r\n      command_key: ['addcategory', 'AddCategory'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var scope = this.get(\"scope\");\r\n      var nodes = this._getNodesByScope(status, scope);\r\n\r\n      if (nodes && nodes.length > 0) {\r\n        // since this is a 'single' scope command, just check one node\r\n        if (nodes[0].get('id') === undefined) {\r\n          // ********* NOTE: **********\r\n          // For Create scenario, the server team does not deliver a RestAPI call to get the\r\n          // actions. Both Stefan Greim from CWS and Alex Gerasimov from RM have special\r\n          // requirements to enable/disable the actions based on the workflow/object state.\r\n          // Ferda came up with a solution by checking:\r\n          // - if there is no form[role_name='categories'], then allow the 'AddCategory' command\r\n          // - or if there is form[role_name='categories'], then check custom field in Alpaca form:\r\n          //   >> options.forms[role_name='categories'].schema.additionalProperties = true/false\r\n          // Then enable/disable the 'AddCategory' action based on this value.\r\n          //\r\n          // Stefan and Alex will set this value in their code if they want to override and control\r\n          // the 'AddCategory' command.  For their commands such as 'AddClassifications', they will\r\n          // implement similar logics as of this 'add.categories' command in their command\r\n          // implementation of the enabled() method.\r\n\r\n          var enabled = true;\r\n          if (status.originalFormCollection) {\r\n            status.originalFormCollection.each(function (form) {\r\n              if (form.get('role_name') === 'categories' &&\r\n                  form.get('schema').additionalProperties === false) {\r\n                enabled = false;\r\n              }\r\n            });\r\n          }\r\n          return enabled;\r\n        } else {\r\n          // For Edit/Copy/Move scenario, check the node for the actions\r\n          return CommandModel.prototype.enabled.apply(this, arguments);\r\n        }\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.categories.controller'\r\n      ], function (MetadataAddCategoriesController) {\r\n\r\n        /* Options needed:\r\n        var options = {\r\n          action: this.options.action,\r\n          node: this.options.node,\r\n          collection: this.options.collection,\r\n          container: this.options.container,\r\n          inheritance: this.options.inheritance,\r\n          context: this.options.context,\r\n          parentView: this.options.parentView,  // use for blocking view and callback\r\n          addPropertiesCallback: this.options.addPropertiesCallback  // to insert the new Category\r\n        }; */\r\n\r\n        var metadataAddCatController = new MetadataAddCategoriesController();\r\n        metadataAddCatController.AddNewCategory(options)\r\n            .done(function (resp) {\r\n              if (options.addPropertiesCallback) {\r\n                options.addPropertiesCallback.call(options.parentView, resp.catModel);\r\n              }\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(err);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataAddCategoriesController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return AddCategories;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/dialogs/file.open/impl/file.open',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<input type=\\\"file\\\" style=\\\"display:none\\\" \"\n    + this.escapeExpression(((helper = (helper = helpers.multiple || (depth0 != null ? depth0.multiple : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"multiple\",\"hash\":{}}) : helper)))\n    + \">\\r\\n\";\n}});\nHandlebars.registerPartial('csui_dialogs_file.open_impl_file.open', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/dialogs/file.open/file.open.dialog',['module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/utils/log', 'csui/utils/base',\r\n  'hbs!csui/dialogs/file.open/impl/file.open'\r\n], function (module, _, $, Marionette, log, base, template) {\r\n  'use strict';\r\n\r\n  log = log(module.id);\r\n\r\n  var FileOpenDialog = Marionette.ItemView.extend({\r\n\r\n    className: 'csui-file-open',\r\n\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        multiple: this.options.multiple ? 'multiple' : ''\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      fileInput: 'input'\r\n    },\r\n\r\n    events: {\r\n      'change @ui.fileInput': '_processFiles'\r\n    },\r\n\r\n    constructor: function FileOpenDialog(options) {\r\n      // Memoize properties, which can be provided as functions\r\n      this.className = _.result(this, 'className');\r\n\r\n      // If the previous caller didn't destroy the dialog, do it now.\r\n      // The view should be garbage collected. There should be just\r\n      // one dialog on the page at the same time.\r\n      var earlierElement = $(document.body).find('> .' + this.className);\r\n      if (earlierElement.length) {\r\n        log.debug('Removing an earlier file-open input element.')\r\n        && console.log(log.last);\r\n        earlierElement.remove();\r\n      }\r\n\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    onDestroy: function(){\r\n      this.ui.fileInput.off();\r\n    },\r\n\r\n    show: function () {\r\n      log.debug('Showing a file-open input element.')\r\n      && console.log(log.last);\r\n      this.render();\r\n      $(document.body).append(this.el);\r\n      this.ui.fileInput.click();\r\n      this.ui.fileInput.trigger('focus');\r\n    },\r\n\r\n    _processFiles: function (event) {\r\n      var originalEvent = event.originalEvent,\r\n          files = originalEvent.target.files ||\r\n                  originalEvent.dataTransfer &&\r\n                  originalEvent.dataTransfer.files;\r\n      log.debug(files.length + ' file(s) selected by a file-open input element.')\r\n      && console.log(log.last);\r\n      this.trigger('add:files', files);\r\n    }\r\n\r\n  });\r\n\r\n  return FileOpenDialog;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add',[\"require\", \"csui/lib/jquery\", \"csui/lib/underscore\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/log\", \"csui/utils/base\", \"csui/utils/commandhelper\",\r\n  \"csui/models/command\", 'csui/models/node/node.model',\r\n  'csui/dialogs/file.open/file.open.dialog'\r\n], function (require, $, _, lang, log, base, CommandHelper, CommandModel,\r\n    NodeModel, FileOpenDialog) {\r\n  'use strict';\r\n\r\n  var AddCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Add\"\r\n    },\r\n\r\n    enabled: function (status) {\r\n      status || (status = {});\r\n      if (status.container && status.container.get('container')) {\r\n        //Hide the add toolbar for the type collection 298\r\n        if (status.container.get(\"type\") === 298) {\r\n          return false;\r\n        }\r\n        status.data || (status.data = {});\r\n        var addableTypes = status.data.addableTypes;\r\n        return addableTypes && _.any([0, 1, 140, 144, 298], function (type) {\r\n              return !!addableTypes.get(type);\r\n            });\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      if (options && options.addableType === undefined) {\r\n        throw new Error('Missing options.addableType');\r\n      }\r\n      // the command handles multiple addable types (Content Server SubType)\r\n      var newNode, promise,\r\n          addableTypeName = this._getAddableTypeName(status, options);\r\n      // if status.forwardToTable == true then tabletoolbar (the command controller) can\r\n      // delegate the action to the table.view (used for inline forms)\r\n      switch (options.addableType) {\r\n      case 0: // folder\r\n      case 298: // collection\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": true,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 140: // url (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        newNode = new NodeModel({\r\n          \"type\": options.addableType,\r\n          \"type_name\": addableTypeName,\r\n          \"container\": false,\r\n          \"name\": \"\" // start with empty name\r\n        }, {\r\n          connector: status.container.connector,\r\n          collection: status.collection\r\n        });\r\n        promise = $.Deferred().resolve(newNode).promise();\r\n        break;\r\n      case 1: // short-cut (Content Server SubType)\r\n        status.forwardToTable = true;\r\n        promise = this._selectShortcutTarget(status, options);\r\n        break;\r\n      case 144: // document (Content Server SubType)\r\n        status.suppressSuccessMessage = true;\r\n        promise = this._selectFilesForUpload(status, options);\r\n        break;\r\n      default :\r\n        var errMsg = \"The \\\"Add\\\" action for the addableType \" +\r\n                     options.addableType + \" is not implemented\";\r\n        log.debug(errMsg) && console.log(log.last);\r\n        promise = $.Deferred().reject({\r\n          error: errMsg,\r\n          commandSignature: this.signature\r\n        }).promise();\r\n      }\r\n      // TODO: The add command is no actual command.  It cannot cay when it\r\n      // is finished - the node has been added.  Client which report the\r\n      // command status show immediately success.  It should be redesigned.\r\n      return promise;\r\n    },\r\n\r\n    _selectFilesForUpload: function (status, options) {\r\n      var deferred       = $.Deferred(),\r\n          // View to provide the area for the drag'n'drop overlay-view, which will\r\n          // turn up when files are dragged over it and trigger an event when the\r\n          // files are dropped on it.\r\n          fileOpenDialog = new FileOpenDialog({multiple: true});\r\n      deferred.resolve(); // resolve immediately because fileOpenDialog can't trigger anything\r\n      // on cancel\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            require(['csui/controls/fileupload/fileupload'\r\n            ], function (fileUploadHelper) {\r\n              deferred.resolve();\r\n              var uploadController = fileUploadHelper.newUpload(status, options);\r\n              uploadController.addFilesToUpload(files, {\r\n                collection: status.collection\r\n              });\r\n              uploadController.listenTo(uploadController, 'destroy', function () {\r\n                fileOpenDialog.destroy();\r\n              });\r\n            });\r\n          })\r\n          .show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectShortcutTarget: function (status, options) {\r\n      var self     = this,\r\n          deferred = $.Deferred();\r\n      require(['csui/dialogs/node.picker/node.picker'\r\n      ], function (NodePicker) {\r\n        var pickerOptions   = {\r\n              dialogTitle: lang.ShortcutPickerTitle,\r\n              connector: status.container.connector,\r\n              context: options.context,\r\n              initialContainer: status.container,\r\n              globalSearch: true,\r\n              startLocation: 'recent.containers',\r\n              unselectableTypes: [141, 142, 133],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            },\r\n            addableTypeName = self._getAddableTypeName(status, options);\r\n        self.nodePicker = new NodePicker(pickerOptions);\r\n        return self.nodePicker\r\n            .show()\r\n            .then(function (args) {\r\n              var node = args.nodes[0];\r\n              var newNode = new NodeModel({\r\n                \"type\": 1,\r\n                \"type_name\": addableTypeName,\r\n                \"container\": false,\r\n                \"name\": node.get('name'),\r\n                \"original_id\": node.get('id'),\r\n                // Show the right icon for this not-yet-saved node\r\n                \"original_id_expand\": node.attributes\r\n              }, {\r\n                connector: status.container.connector,\r\n                collection: status.collection\r\n              });\r\n              return newNode;\r\n            })\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    // The type_name is used before the actual node is created to supply\r\n    // the right icon, to provide the placeholder text for entering the\r\n    // node name, to make the title of the creation dialog etc.\r\n    _getAddableTypeName: function (status, options) {\r\n      // The command caller can override the type name returned by\r\n      // /addablenodetypes\r\n      if (options.addableTypeName) {\r\n        return options.addableTypeName;\r\n      }\r\n      // The enable method checks, that the type exists\r\n      var addableType = status.data.addableTypes.findWhere({\r\n        type: options.addableType\r\n      });\r\n      // The type_name is he same as returned by the server from the node\r\n      // info calls; nodeSpriteCollection should be used to show the\r\n      // displayable node type name and icon\r\n      return addableType.get('type_name');\r\n    }\r\n\r\n  }, {\r\n\r\n    // static methods here:\r\n    _getAddableTypesWithoutInlineFormAsMap: function () {\r\n      return {\r\n        144: true // document is handled by FileUploadController\r\n      };\r\n    },\r\n\r\n    isAddableTypeWithoutInlineForm: function (addableType) {\r\n      var x = this._getAddableTypesWithoutInlineFormAsMap();\r\n      return x[addableType] === true;\r\n    }\r\n\r\n  });\r\n\r\n  return AddCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.item.metadata',[\"module\", \"require\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/lib/backbone\",\r\n  \"csui/utils/log\", \"csui/utils/commandhelper\", \"csui/models/command\"\r\n], function (module, require, _, $, Backbone, log, CommandHelper, CommandModel) {\r\n\r\n  var AddItemMetadataCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"AddItemMetadata\",\r\n      command_key: \"Add_Item\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/widgets/metadata/metadata.add.item.controller'\r\n      ], function (MetadataAddItemController) {\r\n        var metadataAddItemController = new MetadataAddItemController();\r\n        metadataAddItemController\r\n            .displayForm(status, options)\r\n            .done(function () {\r\n              deferred.resolve.apply(deferred, arguments);\r\n            })\r\n            .fail(function () {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  AddItemMetadataCommand.version = \"1.0\";\r\n\r\n  return AddItemMetadataCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/add.version',[\r\n  'require', 'csui/lib/jquery', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/models/node/node.model',\r\n  'csui/models/actions', 'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/utils/types/date', 'csui/utils/types/number',\r\n  'csui/utils/types/member', 'csui/lib/moment'\r\n], function (require, $, _, lang, CommandModel, CommandHelper,\r\n    NodeModel, ActionCollection, FileOpenDialog, date, number, member,\r\n    moment) {\r\n  'use strict';\r\n  var ConnectorFactory;\r\n  var AddVersionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"AddVersion\",\r\n      command_key: \"addversion\",\r\n      name: lang.CommandNameAddVersion,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status || (status = {});\r\n      var deferred              = $.Deferred(),\r\n          currentModel          = status.nodes.models[0],\r\n          recentVersionOwnerId  = currentModel.get('versions').owner_id,\r\n          currentLoggedInUserId = status.context.getModel('user').id,\r\n          self                  = this;\r\n\r\n      this.trigger('close:dialogView:form');\r\n      require([\r\n        'csui/utils/contexts/factories/connector',\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n\r\n        if (!!status.tableView) {\r\n          status.tableView.lockedForOtherContols = false;\r\n        }\r\n\r\n        status.connector = status.context.getObject(ConnectorFactory);\r\n\r\n        if ((!!status.nodes.models[0].versions && !!status.nodes.models[0].versions.allModels)) {\r\n          var allModels     = status.nodes.models[0].versions.allModels,\r\n              recentVersion = allModels[allModels.length - 1];\r\n          recentVersionOwnerId = recentVersion.get('owner_id').id || recentVersion.get('owner_id');\r\n        }\r\n\r\n        // if recent version is added by same user and not reserved by self, then open \"File Open\r\n        // Dialog\", otherwise, open \"Warn Dialog\".\r\n        if (currentLoggedInUserId === recentVersionOwnerId || !!currentModel.get('reserved')) {\r\n          self._fileOpenDialog(status, options);\r\n        } else {\r\n          self._showWarnDialog(status, options, self);\r\n        }\r\n\r\n        deferred.resolve();\r\n        status.suppressSuccessMessage = true;\r\n        var file = status.file;\r\n\r\n        if (file) {\r\n          this\r\n              ._uploadFiles(file, status)\r\n              .done(deferred.resolve)\r\n              .fail(deferred.reject);\r\n        }\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getBodyMessage: function (versionInfo) {\r\n      var currentDate   = moment(),\r\n          versDate      = date.deserializeDate(versionInfo.create_date),\r\n          difference    = currentDate.diff(versDate, 'days'),\r\n          version_owner = member.formatMemberName(versionInfo.owner_id_expanded || versionInfo.owner_id);\r\n\r\n      if (difference >= 4) {\r\n        versDate = date.formatExactDate(versDate);\r\n      } else if (difference >= 2) {\r\n        versDate = date.formatFriendlyDateTimeNow(versDate) + \" \" + date.formatExactTimeOnly(versDate);\r\n      } else {\r\n        versDate = date.formatDateTime(versDate);\r\n      }\r\n\r\n      return _.str.sformat(lang.warnMessage, version_owner, lang.grammer, versDate);\r\n    },\r\n\r\n    _fileOpenDialog: function (status, options) {\r\n      var fileOpenDialog = new FileOpenDialog({multiple: false}),\r\n          self           = this;\r\n      fileOpenDialog\r\n          .listenTo(fileOpenDialog, 'add:files', function (files) {\r\n            self._uploadFiles(files[0], status, options)\r\n                .always(function () {\r\n                  fileOpenDialog.destroy();\r\n                });\r\n          })\r\n          .show();\r\n    },\r\n\r\n    _showWarnDialog: function (status, options, self) {\r\n\r\n      this._getOwnerInfoOfLatestVersion(status).done(_.bind(function (resp) {\r\n        // dialog view\r\n        require([\r\n          'csui/controls/dialog/dialog.view',\r\n          'css!csui/controls/globalmessage/impl/messagedialog'\r\n        ], function (DialogView) {\r\n          self._dialog = new DialogView({\r\n            iconLeft: 'notification_warning',\r\n            title: lang.warnTitle,\r\n            bodyMessage: self._getBodyMessage(resp.data),\r\n            status: status,\r\n            showTitleIcon: true,\r\n            className: self.dialogClassName(),\r\n            buttons: [\r\n              {\r\n                id: 'Version',\r\n                label: lang.yesButton,\r\n                'default': true,\r\n                disabled: false,\r\n                click: _.bind(self._onClickSelectButton, self, status)\r\n              },\r\n              {\r\n                label: lang.noButton,\r\n                click: _.bind(self.onClickCancelButton, self)\r\n\r\n              }\r\n            ]\r\n          });\r\n          self._dialog.show();\r\n        }, self);\r\n\r\n      }, this)).fail(function (resp) {\r\n      });\r\n    },\r\n\r\n    _getOwnerInfoOfLatestVersion: function (status) {\r\n      var deferred    = $.Deferred(),\r\n          node        = status.nodes.models[0],\r\n          connector   = status.connector,\r\n          versionInfo = connector.extendAjaxOptions({\r\n            url: connector.connection.url + '/nodes/' + node.get(\"id\") +\r\n                 '/versions/latest?expand=member',\r\n            type: 'GET'\r\n          });\r\n\r\n      $.ajax(versionInfo).done(function (resp) {\r\n        deferred.resolve(resp);\r\n      }).fail(function (resp) {\r\n        deferred.reject(resp);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    dialogClassName: function () {\r\n      var className = 'addversion-fornonreserve';\r\n      return className;\r\n    },\r\n\r\n    onClickCancelButton: function () {\r\n      this._dialog.destroy();\r\n\r\n    },\r\n\r\n    _onClickSelectButton: function (self, dialogView) {\r\n      if (!!dialogView) {\r\n        dialogView.dialog.destroy();\r\n      }\r\n      self = this;\r\n      self._fileOpenDialog(dialogView.dialog.options.status, {});\r\n    },\r\n\r\n    _uploadFiles: function (file, status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n\r\n      return this._dialogProgressUpload(node, file, status);\r\n    },\r\n\r\n    _dialogProgressUpload: function (node, file, status) {\r\n      var deferred = $.Deferred();\r\n\r\n      require([\r\n        'csui/controls/fileupload/impl/addversion.controller',\r\n        'csui/models/version'\r\n      ], function (AddVersionController, VersionModel) {\r\n        var node = CommandHelper.getJustOneNode(status);\r\n        var addVersionController = new AddVersionController({\r\n          view: status.originatingView,\r\n          selectedNode: node\r\n        });\r\n\r\n        addVersionController\r\n            .uploadFile(file)\r\n            .then(function (fileUploadModel) {\r\n              return fileUploadModel.version\r\n                  .fetch()\r\n                  .then(function (response) {\r\n                    return fileUploadModel.version;\r\n                  });\r\n            })\r\n            .then(function (version) {\r\n              if (node.versions || (!!node.attributes && !!node.attributes.versions)) {\r\n                var sizeinbytes = version.get('file_size'),\r\n                    sizeinkb    = number.formatFileSize(sizeinbytes);\r\n                version.set('file_size_formatted', sizeinkb);\r\n                version.isLocallyCreated = true;\r\n                // TODO: Remove this, as soon as the version REST API returns actions\r\n                fakeActions(node, version);\r\n                !!node.versions && node.versions.add(version, {at: 0});\r\n                if (Array.isArray(node.get('versions'))) {\r\n                  !!node.attributes && !!node.attributes.versions &&\r\n                  node.attributes.versions.push(version.attributes);\r\n                }\r\n\r\n              }\r\n            })\r\n            .then(function () {\r\n              // Adding a new version may change the icon, size and last\r\n              // modification time of the parent document\r\n             return true;\r\n            })\r\n            .then(function () {\r\n              // Prevent the node returned in the promise result\r\n              return true;\r\n            })\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  // TODO: Remove this, as soon as the version REST API returns actions\r\n  // (Another workaround could be loading all versions anew)\r\n  function fakeActions(node, version) {\r\n    var actions = [];\r\n    if (node.actions.findRecursively('download') || node.actions.findRecursively('Download')) {\r\n      actions.push({signature: 'versions_download'}, {signature: 'versions_open'});\r\n    }\r\n    if (node.actions.findRecursively('delete') || node.actions.findRecursively('Delete')) {\r\n      actions.push({signature: 'versions_delete'});\r\n    }\r\n    if (node.actions.findRecursively('properties') || node.actions.findRecursively('Properties')) {\r\n      actions.push({signature: 'versions_properties'});\r\n    }\r\n    version.actions.reset(actions);\r\n  }\r\n\r\n  return AddVersionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.node.perspective',['require', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper'\r\n], function (require, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var OpenNodePerspectiveCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/utils/contexts/factories/next.node',\r\n      ], function (NextNodeModelFactory) {\r\n        var context = status.context || options && options.context,\r\n            nextNode = context.getModel(NextNodeModelFactory),\r\n            node = CommandHelper.getJustOneNode(status);\r\n        nextNode.set('id', node.get('id'));\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNodePerspectiveCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/browse',['csui/utils/commands/open.node.perspective', 'csui/utils/commandhelper'\r\n], function (OpenNodePerspectiveCommand, CommandHelper) {\r\n  'use strict';\r\n\r\n  var BrowseCommand = OpenNodePerspectiveCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Browse',\r\n      // The server has no concrete action for children browsing;\r\n      // the 'default' command key has to be the first one\r\n      // WARNING: No other command should use the 'default'/'open'\r\n      // command key.  Always request a concrete command key from\r\n      // your REST API developer.\r\n      command_key: ['default', 'open', 'browse', 'Browse'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!BrowseCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('container');\r\n    }\r\n\r\n  });\r\n\r\n  return BrowseCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/collection/nls/root/lang',{\r\n  collectCommandSignature: 'Collect',\r\n  addItemsToolTip: 'Add Items',\r\n  collectItemsDialogTitle: 'Add items',\r\n  selectButtonLabel: 'Add selected',\r\n  conflictsItemsHeader: 'Listed items will not be added',\r\n  conflictsDialogCloseLabel: 'Close',\r\n  CollectItemsNoneMessage: \"No items added.\",\r\n  CollectOneItemSuccessMessage: '1 new item was successfully added',\r\n  CollectManyItemsSuccessMessage: '{0} new items were successfully added',\r\n  CollectOneItemFailMessage: '1 of your collected items already added',\r\n  CollectManyItemsFailMessage: '{0} of your collected items are already added',\r\n  RemoveCollectItemsCommandConfirmDialogHtml: \"<span class='msgIcon WarningIcon'>\" +\r\n                                              \"<%- message %>\" +\r\n                                              \"</span>\",\r\n  RemoveCommandConfirmDialogSingleMessage: \"Do you want to remove {0} from collection?\",\r\n  RemoveCommandConfirmDialogMultipleMessage: \"Do you want to remove {0} items from collection?\",\r\n  RemoveCommandConfirmDialogTitle: \"Remove from collection\",\r\n  RemoveItemsNoneMessage: \"No items removed from collection.\",\r\n  RemoveOneItemSuccessMessage: \"1 item successfully removed from collection.\",\r\n  RemoveSomeItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveManyItemsSuccessMessage: \"{0} items successfully removed from collection.\",\r\n  RemoveOneItemFailMessage: \"1 item failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage: \"{0} items failed to remove from collection.\",\r\n  RemoveSomeItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveManyItemsFailMessage2: \"{2} items failed to remove from collection.\",\r\n  RemoveItems: 'Removing {0} items from collection',\r\n  RemovingOneItem: 'Removing item from collection',\r\n  RemovingSomeItems: 'Removing {0} items from collection',\r\n  CollectingOneItem: 'Collecting item',\r\n  CollectingItems: 'Collecting {0} items',\r\n  CollectManyItemsFailMessage2: '{2} items failed to Collecting.',\r\n  removefromCollection: \"Remove from collection\"\r\n});\n","\n","csui.define('csui/utils/commands/collection/collect.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/base', 'csui/models/nodes',\r\n  'csui/lib/underscore.string'\r\n], function (module, require, _, $, Backbone, Url, CommandError, CommandModel,\r\n    lang, base, NodeCollection) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  var GlobalMessage, TaskQueue, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory, CollectionConflictView,\r\n      CollectCommand = CommandModel.extend({\r\n        defaults: {\r\n          signature: 'CollectionCanCollect',\r\n          name: lang.addItemsToolTip,\r\n          command_key: ['collectionCanCollect'],\r\n          scope: 'single',\r\n          successMessages: {\r\n            formatForOne: lang.CollectOneItemSuccessMessage,\r\n            formatForTwo: lang.CollectManyItemsSuccessMessage,\r\n            formatForMany: lang.CollectManyItemsSuccessMessage,\r\n            formatForFive: lang.CollectManyItemsSuccessMessage,\r\n          },\r\n          errorMessages: {\r\n            formatForOne: lang.CollectOneItemFailMessage,\r\n            formatForTwo: lang.CollectManyItemsFailMessage,\r\n            formatForMany: lang.CollectManyItemsFailMessage,\r\n            formatForFive: lang.CollectManyItemsFailMessage,\r\n          }\r\n        },\r\n\r\n        enabled: function (status) {\r\n          if (status.container.get('type') === 298) {\r\n            status.nodes = new NodeCollection([status.container]);\r\n            return CollectCommand.__super__.enabled.apply(this, arguments);\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var deferred = $.Deferred(),\r\n              self     = this;\r\n\r\n          require(['csui/controls/globalmessage/globalmessage',\r\n            'csui/controls/conflict.resolver/impl/collection.conflicts/collection.conflicts.view',\r\n            'csui/utils/taskqueue',\r\n            'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n            'csui/utils/contexts/factories/next.node'\r\n          ], function () {\r\n            GlobalMessage = arguments[0];\r\n            CollectionConflictView = arguments[1];\r\n            TaskQueue = arguments[2];\r\n            UploadFileCollection = arguments[3];\r\n            PageLeavingBlocker = arguments[4];\r\n            NextNodeModelFactory = arguments[5];\r\n            self._addToCollection(status, options)\r\n                .done(function (selectedOptions) {\r\n                  var selectedNodes    = selectedOptions.nodes,\r\n                      nodes            = _.map(selectedNodes, function (node) {\r\n                        return {\r\n                          name: node.get('name'),\r\n                          state: 'pending',\r\n                          count: 0,\r\n                          total: 1,\r\n                          node: node\r\n                        };\r\n                      }),\r\n                      targetFolder     = status.container,\r\n                      uploadCollection = new UploadFileCollection(nodes, {connector: connector}),\r\n                      connector        = status.container && status.container.connector;\r\n                  status.container.collection = status.collection;\r\n                  self._announceOperationStart(status);\r\n                  uploadCollection.each(function (fileUpload) {\r\n                    var node = fileUpload.get('node');\r\n                    fileUpload.node = node;\r\n                    fileUpload.unset('node');\r\n                    fileUpload.set('mime_type', node.get('mime_type'));\r\n                  });\r\n\r\n                  self._addSelectedNodesToCollection(uploadCollection, connector, targetFolder,\r\n                      status.collection)\r\n                      .then(function (promises) {\r\n                        GlobalMessage.hideFileUploadProgress();\r\n                        var result = self._checkPromises(promises);\r\n                        if (result.failedNodes.length) {\r\n                          self._showDialog(result.failedNodes).then(\r\n                              function (resolveOption, dialog) {\r\n                                dialog.kill();\r\n                                //if any success items are there then show global message\r\n                                if (result.successNodes.length) {\r\n                                  self._showGlobalMessage(result.successNodes.length);\r\n                                }\r\n                              });\r\n\r\n                        } else if (result.successNodes.length) {\r\n                          self._showGlobalMessage(result.successNodes.length);\r\n                        }\r\n                      });\r\n                  self._announceOperationEnd(status);\r\n                  deferred.resolve();\r\n                })\r\n                .fail(function (error) {\r\n                  if (error && !error.cancelled) {\r\n                    self.showError(error);\r\n                  }\r\n                  deferred.reject();\r\n                });\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addToCollection: function (status, options) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n\r\n          require(['csui/dialogs/node.picker/node.picker'],\r\n              function (NodePicker) {\r\n                var pickerOptions = _.extend({\r\n                  selectableTypes: [],\r\n                  showAllTypes: true,\r\n                  orderBy: 'type asc',\r\n                  dialogTitle: lang.collectItemsDialogTitle,\r\n                  selectButtonLabel: lang.selectButtonLabel,\r\n                  globalSearch: true,\r\n                  selectMultiple: true,\r\n                  context: options ? options.context : status.context,\r\n                  startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                    'favorites', 'recent.containers'],\r\n                  resolveShortcuts: true\r\n                }, status);\r\n\r\n                self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n                self.nodePicker\r\n                    .show()\r\n                    .done(function () {\r\n                      deferred.resolve.apply(deferred, arguments);\r\n                    })\r\n                    .fail(function () {\r\n                      deferred.reject.apply(deferred, arguments);\r\n                    });\r\n              }, function (error) {\r\n                deferred.reject(error);\r\n              });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _addSelectedNodesToCollection: function (uploadCollection, connector, targetFolder,\r\n            targetCollection) {\r\n          var self     = this,\r\n              queue    = new TaskQueue({\r\n                parallelism: config.parallelism\r\n              }),\r\n              count    = 0,\r\n              promises = _.map(uploadCollection.models, function (model) {\r\n                var deferred = $.Deferred();\r\n                queue.pending.add({\r\n                  worker: function () {\r\n                    var node     = model.node,\r\n                        node_id  = node.get('id'),\r\n                        targetId = targetFolder.get('id');\r\n                    self._collectNode(connector, targetId, node_id)\r\n                        .done(function () {\r\n                          // self._addToCurrentTable(model, targetCollection);\r\n                          model.set('count', 1);\r\n                          model.deferred.resolve(model);\r\n                          self._addToCurrentTable(model.node, targetCollection, targetId);\r\n                          deferred.resolve(model);\r\n                        })\r\n                        .fail(function (cause) {\r\n                          deferred.resolve(model);\r\n                        });\r\n                    return deferred.promise();\r\n                  }\r\n                });\r\n                count++;\r\n                return deferred.promise(promises);  // return promises\r\n              });\r\n          GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n            oneFileTitle: lang.CollectingOneItem,\r\n            oneFileSuccess: lang.CollectOneItemSuccessMessage,\r\n            multiFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            oneFilePending: lang.CollectingOneItem,\r\n            multiFilePending: lang.CollectingItems,\r\n            oneFileFailure: lang.CollectOneItemFailMessage,\r\n            multiFileFailure: lang.CollectManyItemsFailMessage2,\r\n            someFileSuccess: lang.CollectManyItemsSuccessMessage,\r\n            someFilePending: lang.CollectingItems,\r\n            someFileFailure: lang.CollectManyItemsFailMessage2,\r\n            enableCancel: false\r\n          });\r\n\r\n          return $.whenAll.apply($, promises);\r\n        },\r\n\r\n        _collectNode: function (connector, targetFolderID, node_id) {\r\n          var deferred = $.Deferred();\r\n          var nodeAttr = {\r\n            \"collection_id\": targetFolderID\r\n          };\r\n\r\n          var collectOptions = connector.extendAjaxOptions({\r\n            url: connector.connection.url.replace('/v1', '/v2') + '/nodes/' + node_id,\r\n            type: 'PUT',\r\n            data: 'body=' + encodeURIComponent(JSON.stringify(nodeAttr)),\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          });\r\n\r\n          $.ajax(collectOptions).done(function (resp) {\r\n            deferred.resolve(resp);\r\n\r\n          }).fail(function (resp) {\r\n            deferred.reject(resp);\r\n          });\r\n          return deferred.promise();\r\n        },\r\n\r\n        _getListView: function (conflictFiles) {\r\n          var retVal = new CollectionConflictView(_.extend({}, {collection: conflictFiles}));\r\n          return retVal;\r\n        },\r\n\r\n        _showDialog: function (conflictFiles) {\r\n          var deferred = $.Deferred(),\r\n              buttons  = [{\r\n                id: 'close',\r\n                label: lang.conflictsDialogCloseLabel,\r\n                toolTip: lang.conflictsDialogCloseLabel,\r\n                click: function (args) {\r\n                  deferred.resolve('close', args.dialog);\r\n                }\r\n              }];\r\n          this._showConflictDialog(conflictFiles, buttons);\r\n          return deferred;\r\n        },\r\n\r\n        _showConflictDialog: function (collection, buttons) {\r\n          var self     = this,\r\n              deferred = $.Deferred();\r\n          require(['csui/controls/dialog/dialog.view'], function (DialogView) {\r\n            var failureMessage = base.formatMessage(collection.length, self.get(\"errorMessages\")),\r\n                dialog         = new DialogView({\r\n                  title: failureMessage,\r\n                  midSize: true,\r\n                  iconLeft: 'csui-icon-notification-information',\r\n                  className: \"csui-collection-conflicts-dialog\",\r\n                  view: self._getListView(collection),\r\n                  buttons: buttons\r\n                });\r\n            dialog.show();\r\n            return dialog;\r\n          });\r\n\r\n        },\r\n\r\n        _checkPromises: function (promises) {\r\n          if (!_.isArray(promises)) {\r\n            promises = [promises];\r\n          }\r\n\r\n          var successPromises = new Backbone.Collection(),\r\n              failedPromises  = new Backbone.Collection();\r\n\r\n          _.each(promises, function (prom) {\r\n            if (prom !== undefined) {\r\n              if (!prom.cancelled) {\r\n                if (prom.get(\"count\") === undefined) {\r\n                  //which is not resolved or rejected\r\n                } else if (prom.get(\"count\")) {\r\n                  successPromises.push(prom);\r\n                }\r\n                else {\r\n                  failedPromises.push(prom);\r\n                }\r\n              }\r\n            }\r\n          });\r\n\r\n          return {\r\n            successNodes: successPromises,\r\n            failedNodes: failedPromises\r\n          };\r\n        },\r\n\r\n        _addToCurrentTable: function (collectItem, targetCollection, targetId) {\r\n          collectItem.isLocallyCreated = true;\r\n          collectItem.refernce_id = targetId;\r\n          collectItem.fetch({collection: targetCollection})\r\n              .then(function () {\r\n                targetCollection.unshift(collectItem);\r\n              });\r\n        },\r\n\r\n        _showGlobalMessage: function (successCount) {\r\n          var successMessage = base.formatMessage(successCount, this.get(\"successMessages\"));\r\n          GlobalMessage.showMessage(\"success\", successMessage);\r\n        },\r\n        _announceOperationStart: function (status) {\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.blockActions) {\r\n            originatingView.blockActions();\r\n          }\r\n          PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n        },\r\n\r\n        _announceOperationEnd: function (status) {\r\n          PageLeavingBlocker.disable();\r\n          var originatingView = status.originatingView;\r\n          if (originatingView.unblockActions) {\r\n            originatingView.unblockActions();\r\n          }\r\n        }\r\n      });\r\n\r\n  return CollectCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/multiple.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, CommandHelper, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies initialized during execution\r\n  var PageLeavingBlocker;\r\n\r\n  var MultipleItemsCommand = {\r\n\r\n    execute: function (status, options) {\r\n      // avoid messages from handleExecutionResults\r\n      // we use our own evaluation here and show message\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      return this._performActions(status, options);\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this,\r\n          promises;\r\n      require(['csui/utils/taskqueue', 'csui/utils/page.leaving.blocker'\r\n      ], function (TaskQueue) {\r\n        PageLeavingBlocker = arguments[1];\r\n        options = options || {};\r\n        if (!options.context) {\r\n          options.context = status.context;\r\n        }\r\n        self._announceStart(status);\r\n        var nodes = CommandHelper.getAtLeastOneNode(status),\r\n            queue = new TaskQueue({\r\n              parallelism: options.parallelism || config.parallelism\r\n            });\r\n\r\n        promises = nodes.map(function (node, index) {\r\n          var deferred = $.Deferred();\r\n          queue.pending.add({\r\n            worker: function () {\r\n              self._performAction(node, options)\r\n                  .done(deferred.resolve)\r\n                  .fail(function(error){\r\n                    deferred.reject(error);\r\n                  });\r\n              return deferred.promise();\r\n            }\r\n          });\r\n          return deferred.promise();\r\n        });\r\n\r\n        // return a promise that has an array with results of original promises\r\n        $.whenAll\r\n            .apply($, promises)\r\n            .always(_.bind(self._announceFinish, self, status))\r\n            .done(function () {\r\n              if(!status.suppressMultipleSuccessMessage) {\r\n                self.showSuccess(promises);\r\n              }\r\n              deferred.resolve.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            })\r\n            .fail(function () {\r\n              if(!status.suppressMultipleFailMessage) {\r\n                self.showError(promises);\r\n              }\r\n              deferred.reject.apply(deferred, arguments);      // pass the original arguments to handler, so that events are triggered\r\n            });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    showError: function(promises) {\r\n      var errorMessage,\r\n          successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if(checkResult) {\r\n        var countFailed = checkResult.countFailed;\r\n        var countOk = checkResult.countOk;\r\n\r\n        errorMessage = this._getErrorMessage(countFailed);\r\n\r\n        var msg;\r\n        if(countOk > 0) {\r\n          successMessage = this._getSuccessMessage(countOk);\r\n          msg = successMessage + \" \" + errorMessage;\r\n        } else {\r\n          msg = errorMessage;\r\n        }\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", msg, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccess: function(promises) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success\", successMessage, undefined, {});\r\n        });\r\n      }\r\n    },\r\n\r\n    showSuccessWithLink: function(promises, msgOptions) {\r\n      var successMessage;\r\n\r\n      var checkResult = this._checkPromises(promises);\r\n      if (checkResult) {\r\n        var countOk = checkResult.countOk;\r\n\r\n        successMessage = this._getSuccessMessage(countOk);\r\n\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"success_with_link\", successMessage, undefined, msgOptions);\r\n        });\r\n      }\r\n    },\r\n\r\n    // helper\r\n    _getErrorMessage: function(cnt) {\r\n      var emessages = this.get(\"errorMessages\");\r\n      var errorMessage = base.formatMessage(cnt, emessages);\r\n\r\n      return errorMessage;\r\n    },\r\n\r\n    // helper\r\n    _getSuccessMessage: function(cnt) {\r\n      var smessages = this.get(\"successMessages\");\r\n      var successMessage = base.formatMessage(cnt, smessages);\r\n\r\n      return successMessage;\r\n    },\r\n\r\n    // Analyzes the given promises and returns a result object with:\r\n    // {\r\n    //   countOk: okCnt,\r\n    //   countFailed: failedCnt\r\n    // }\r\n    //\r\n    _checkPromises: function(promises) {\r\n      if (!_.isArray(promises)) {\r\n        promises = [promises];\r\n      }\r\n\r\n      var okCnt = 0;\r\n      var failedCnt = 0;\r\n\r\n      // At this point all promises from all commands must either be resolved or rejected.\r\n      _.each(promises, function (prom) {\r\n        if (prom !== undefined) {\r\n          // an error or a node can be cancelled, skip it from counting.\r\n          // pressing \"cancel\" button may result in object with cancelled flag set.\r\n          if (!prom.cancelled) {\r\n            if (prom instanceof CommandError) {\r\n              failedCnt++;\r\n            } else if (typeof prom.state !== 'undefined' && typeof prom.state === 'function') {\r\n              // if state exists, evaluate it\r\n              if (prom.state() && prom.state().toLowerCase() === 'resolved') {\r\n                okCnt++;\r\n              } else {\r\n                failedCnt++;\r\n              }\r\n            } else {\r\n              // some model or anything else\r\n              okCnt++;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      return {\r\n        countOk: okCnt,\r\n        countFailed: failedCnt\r\n      };\r\n    },\r\n\r\n\r\n    _announceStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      var pageLeavingWarning = this.get('pageLeavingWarning');\r\n      if (pageLeavingWarning) {\r\n        PageLeavingBlocker.enable(pageLeavingWarning);\r\n      }\r\n    },\r\n\r\n    _announceFinish: function (status) {\r\n      if (this.get('pageLeavingWarning')) {\r\n        PageLeavingBlocker.disable();\r\n      }\r\n      var originatingView = status.originatingView;\r\n      if (originatingView && originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  return MultipleItemsCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/confirmable',['csui/lib/underscore', 'csui/lib/jquery',\r\n  'require', 'csui/utils/commands/multiple.items'\r\n], function (_, $, require, MultipleItemsCommand) {\r\n\r\n  var ConfirmableCommand = {\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      return this\r\n          ._confirmAction(status, options)\r\n          .then(function () {\r\n            return self._performActions(status, options);\r\n          }, function(error) {\r\n            return $.Deferred().reject().promise();\r\n          });\r\n    },\r\n\r\n    _confirmAction: function (status, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      if (this._getConfirmTemplate) {\r\n        var data = this._getConfirmData(status, options),\r\n        // FIXME: Use text instead of HTML template\r\n            html = this._getConfirmTemplate(status, options)(data);\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion($(html).text(), data.title)\r\n              .done(function (arg) {\r\n                deferred.resolve(arg);\r\n              })\r\n              .fail(function (arg) {\r\n                deferred.reject(arg);\r\n              });\r\n        });\r\n\r\n      }\r\n      else{\r\n        deferred.resolve();\r\n      }\r\n      return deferred.promise();\r\n    }\r\n\r\n  };\r\n\r\n  _.extend(ConfirmableCommand, _.omit(MultipleItemsCommand, 'execute'));\r\n\r\n  return ConfirmableCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/collection/remove.collected.items',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/confirmable', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, CommandModel, CommandHelper, lang,\r\n    ConfirmableCommand, MultipleItemsCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var GlobalMessage;\r\n\r\n  var RemoveCollectionItemsCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'RemoveCollectedItems',\r\n      command_key: 'removefromcollection',\r\n      name: lang.removefromCollection,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemSuccessMessage,\r\n        formatForTwo: lang.RemoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.RemoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.RemoveItemsNoneMessage,\r\n        formatForOne: lang.RemoveOneItemFailMessage,\r\n        formatForTwo: lang.RemoveSomeItemsFailMessage,\r\n        formatForFive: lang.RemoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.RemoveCollectItemsCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.RemoveCommandConfirmDialogMultipleMessage,\r\n                     nodes.length) );\r\n      return {\r\n        title: lang.RemoveCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _performAction: function (model, options) {\r\n      var node                = model.node,\r\n          d                   = $.Deferred(),\r\n          nodeAttr            = {\r\n            \"collection_id\": options.container.get(\"id\"),\r\n            \"operation\": \"remove\"\r\n          },\r\n          connector           = options.container.connector,\r\n          containerCollection = options.containerCollection,\r\n\r\n          collectOptions      = connector.extendAjaxOptions({\r\n            url: connector.connection.url.replace('/v1', '/v2') + '/nodes/' + node.get(\"id\"),\r\n            type: 'PUT',\r\n            data: 'body=' + encodeURIComponent(JSON.stringify(nodeAttr)),\r\n            contentType: 'application/x-www-form-urlencoded'\r\n          }),\r\n\r\n          jqxhr               = $.ajax(collectOptions).done(function (resp) {\r\n            model.set('count', 1);\r\n            containerCollection.remove(node);\r\n            model.deferred.resolve(model);\r\n            d.resolve(model);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, model) :\r\n                               error;\r\n            model.deferred.reject(model, commandError);\r\n            if (!error) {\r\n              jqxhr.abort();\r\n            }\r\n            d.reject(commandError);\r\n          });\r\n\r\n      return d.promise();\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.RemovingOneItem,\r\n        oneFileSuccess: lang.RemoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.RemoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.RemovingOneItem,\r\n        multiFilePending: lang.RemoveItems,\r\n        oneFileFailure: lang.RemoveOneItemFailMessage,\r\n        multiFileFailure: lang.RemoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.RemoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.RemovingSomeItems,\r\n        someFileFailure: lang.RemoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RemoveCollectionItemsCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localGlobalMessage) {\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeRemoveCollectionItems(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeRemoveCollectionItems: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      ConfirmableCommand.execute.apply(this, arguments)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n                  return !(result instanceof CommandError);\r\n                });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      options || (options = {});\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      options.container || (options.container = status.container);\r\n      options.containerCollection = status.collection;\r\n      require(['csui/models/fileuploads'\r\n      ], function (UploadFileCollection) {\r\n        var models = status.nodes.models;\r\n        var nodes = _.map(models, function (node) {\r\n          return {\r\n            name: node.get('name'),\r\n            state: 'pending',\r\n            count: 0,\r\n            total: 1,\r\n            node: node\r\n          };\r\n        });\r\n        var connector = models && models[0] && models[0].connector;\r\n        var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n        var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n        uploadCollection.each(function (fileUpload) {\r\n          // Replace the new node in the file upload model with the existing\r\n          // one to be able to destroy it; sync and destroy events will be\r\n          // triggered on it and the parent collection and view will see them.\r\n          var node = fileUpload.get('node');\r\n          fileUpload.node = node;\r\n          fileUpload.unset('node');\r\n          fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n        });\r\n\r\n        if (showProgressDialog) {\r\n          self.startGlobalMessage(uploadCollection);\r\n        }\r\n\r\n        // do not display our result messages in _performActions\r\n        newStatus.suppressMultipleSuccessMessage = true;\r\n        newStatus.suppressMultipleFailMessage = true;\r\n\r\n        MultipleItemsCommand._performActions.call(self, newStatus, options)\r\n            .done(function (results) {\r\n              if (showProgressDialog) {\r\n                GlobalMessage.hideFileUploadProgress();\r\n              }\r\n              self.showSuccess(results);\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (errors) {\r\n              if (!showProgressDialog) {\r\n                self.showError(errors);\r\n              }\r\n              return deferred.reject(errors);\r\n            });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return RemoveCollectionItemsCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/copy',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/utils/url', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/node.links/node.links'\r\n], function (module, require, _, $, lang, log, Url, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand, nodeLinks) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory;\r\n\r\n  var CopyCommandParent = CommandModel.extend({});                // create helper parent\r\n  _.extend(CopyCommandParent.prototype, MultipleItemsCommand);    // apply needed mixin\r\n\r\n  var CopyCommand = CopyCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Copy\",\r\n      command_key: ['copy', 'Copy'],\r\n      name: lang.CommandNameCopy,\r\n      verb: lang.CommandVerbCopy,\r\n      pageLeavingWarning: lang.CopyPageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemSuccessMessage,\r\n        formatForTwo: lang.CopySomeItemsSuccessMessage,\r\n        formatForFive: lang.CopyManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.CopyItemsNoneMessage,\r\n        formatForOne: lang.CopyOneItemFailMessage,\r\n        formatForTwo: lang.CopySomeItemsFailMessage,\r\n        formatForFive: lang.CopyManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressSuccessMessage = true;\r\n      status.suppressFailMessage = true;\r\n\r\n      require(['csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n\r\n        self._selectCopyOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var openMetadata = selectedOptions.openSelectedProperties;\r\n              var applyProperties = selectedOptions.applyProperties;\r\n\r\n              // note: in some scenarios such as expanded tile, the status.container is undefined\r\n              var copyToCurrentFolder = status.container ?\r\n                                        (targetFolder.get('id') === status.container.get('id')) :\r\n                                        false;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                return returnObj;\r\n              });\r\n              var copyNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, copyNamesToResolve)\r\n                  .done(function (copyInstructions) {\r\n\r\n                    _.each(copyInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(copyInstructions, _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(copyInstructions);\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          uploadCollection.each(function (model) {\r\n                            var sourceNode = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                            model.node.set(_.omit(sourceNode.attributes, 'id'));\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n\r\n                          self._copySelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties, copyToCurrentFolder, status.collection)\r\n                              .done(function (promises) {\r\n                                GlobalMessage.hideFileUploadProgress();\r\n                                if (promises.length) {\r\n                                  // display result message\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                  self.showSuccessWithLink(promises, msgOptions);\r\n                                }\r\n                                // return success wo parameter\r\n                                deferred.resolve();\r\n                              })\r\n                              .always(function (promises) {\r\n                                self._announceOperationEnd(status, copyToCurrentFolder);\r\n                              })\r\n                              .fail(function (copyResults) {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail( function (error) {\r\n                          self._announceOperationEnd(status, copyToCurrentFolder);\r\n\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {\r\n                    // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status, copyToCurrentFolder);\r\n                    deferred.reject();\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if(error && !error.cancelled) {                                   // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);          // require\r\n\r\n      return deferred.promise();    // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status, copyToCurrentFolder) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectCopyOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            //account for a copy command coming from a folders context menu.\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ?\r\n                                  (status.container.get('id') ===\r\n                                   status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(numNodes > 1 ? lang.DialogTitleCopy : lang.DialogTitleSingleCopy, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'copy',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 =  (nodeNames.length === 1) ? lang.CopyingNode : _.str.sformat( lang.CopyingNodes, nodeNames.length );\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameCopy,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'copy';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copySelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties,\r\n        copyToCurrentFolder, targetCollection) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var attributes = model.attributes,\r\n                    targetId   = targetFolder.get('id');\r\n\r\n                self._getCategories(attributes, connector, targetId, applyProperties)\r\n                    .done(function (categories) {\r\n                      self._copyNode(categories, attributes, connector, targetId, model.node)\r\n                          .done(function () {\r\n                            model.set('count', 1);\r\n                            model.deferred.resolve(model);\r\n                            copyToCurrentFolder &&\r\n                            self._addToCurrentTable(model.node, targetCollection);\r\n                            deferred.resolve(attributes);\r\n                          })\r\n                          .fail(function (cause) {\r\n                            var errMsg = new CommandError(cause);\r\n                            model.deferred.reject(model, errMsg);\r\n                            deferred.reject(errMsg);\r\n                          });\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errMsg = new CommandError(cause);\r\n                      model.deferred.reject(model, errMsg);\r\n                      deferred.reject(errMsg);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.CopyingOneItem,\r\n        oneFileSuccess: lang.CopyOneItemSuccessMessage,\r\n        multiFileSuccess: lang.CopyManyItemsSuccessMessage,\r\n        oneFilePending: lang.CopyingOneItem,\r\n        multiFilePending: lang.CopyItems,\r\n        oneFileFailure: lang.CopyOneItemFailMessage,\r\n        multiFileFailure: lang.CopyManyItemsFailMessage2,\r\n        someFileSuccess: lang.CopySomeItemsSuccessMessage,\r\n        someFilePending: lang.CopySomeItems,\r\n        someFileFailure: lang.CopySomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _addToCurrentTable: function (node, targetCollection) {\r\n      node.isLocallyCreated = true;\r\n      node.fetch({collection: targetCollection})\r\n          .then(function () {\r\n            targetCollection.unshift(node);\r\n          });\r\n    },\r\n\r\n    _copyNode: function (categories, instruction, connector, targetFolderID, node) {\r\n      var nodeAttr = {\r\n        \"original_id\": instruction.id,\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": categories\r\n      };\r\n\r\n      // FileUploadModel should be created with a container or connector\r\n      // to make its node cloneable.  But if not needed, use the default\r\n      // container of the upload controller to provide the connector.\r\n      if (!node.connector) {\r\n        connector.assignTo(node);\r\n      }\r\n\r\n      return node.save(undefined, {\r\n        data: nodeAttr,\r\n        url: connector.connection.url + '/nodes'\r\n      });\r\n    },\r\n\r\n    _getCategories: function (attributes, connector, targetFolderID, applyProperties) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      if (attributes.extended_data && attributes.extended_data.roles) {\r\n        deferred.resolve(attributes.extended_data.roles);\r\n      }\r\n      else {\r\n        var getCategoriesOptions = connector.extendAjaxOptions({\r\n          url: connector.connection.url + '/forms/nodes/copy?' +\r\n              $.param({\r\n                id: attributes.id,\r\n                parent_id: targetFolderID\r\n              })\r\n        });\r\n\r\n        $.ajax(getCategoriesOptions)\r\n            .then(function (response, statusText, jqxhr) {\r\n              var form = response.forms[1],\r\n                  data = form && form.data || {};\r\n              var categoryGroupMapping;\r\n              categoryGroupMapping = {};\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n              categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n              var categories = data[categoryGroupMapping[applyProperties]];\r\n              deferred.resolve({\"categories\": categories});\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return CopyCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/copy.link',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'csui/utils/node.links/node.links',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, NodeLinks, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var CopyLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'CopyLink',\r\n      name: lang.CommandNameCopyLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return !!node;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          nodeLink = status.url ? NodeLinks.completeUrl(node, status.url) : NodeLinks.getUrl(node),\r\n          success  = this._copyToClipboard(nodeLink);\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (success) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', lang.CopyLinkSuccessMessage);\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', lang.CopyLinkFailMessage);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _copyToClipboard: function (nodeLink) {\r\n      if (window.clipboardData) { /*Workaround for IE*/\r\n        window.clipboardData.setData('Text', nodeLink);\r\n        return true;\r\n      } else {\r\n        /* Create a fake text node in body, select it by creating a range, trigger copy command,\r\n         remove fake text node*/\r\n        var success  = false,\r\n            element  = document.createTextNode(nodeLink),\r\n            elParent = document.createElement('span');\r\n        //Set styles for span, so that text node doesn't use widget styles\r\n        elParent.style.color = 'black';\r\n        elParent.style.background = 'tranparent';\r\n        elParent.style.backgroundColor = 'white';\r\n\r\n        elParent.appendChild(element);\r\n        document.body.appendChild(elParent);\r\n        if (window.getSelection) { // moz, opera, webkit, ie11\r\n          var selection = window.getSelection();\r\n          selection.removeAllRanges();\r\n          var range = document.createRange();\r\n          range.selectNodeContents(element);\r\n          selection.addRange(range);\r\n          success = document.execCommand(\"copy\");\r\n          selection.removeAllRanges();\r\n        }\r\n        document.body.removeChild(elParent);\r\n        return success;\r\n      }\r\n    }\r\n  });\r\n\r\n  return CopyLinkCommand;\r\n});\r\n\n","csui.define('csui/models/perspective/server.adaptor.mixin',[\r\n  'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url'\r\n], function (_, $, Url) {\r\n  'use strict';\r\n\r\n  var ServerAdaptorMixin = {\r\n    mixin: function (prototype) {\r\n      return _.extend(prototype, {\r\n        makeServerAdaptor: function (options) {\r\n          return this;\r\n        },\r\n\r\n        isFetchableDirectly: function () {\r\n          return this.get('id') > 0;\r\n        },\r\n\r\n        urlBase: function () {\r\n          var id  = this.get('id'),\r\n              url = this.connector.connection.url;\r\n          if (!id) {\r\n            // Create a new node by POST /perspectives\r\n            url = Url.combine(url, 'perspectives');\r\n          } else if (!_.isNumber(id) || id > 0) {\r\n            // Access an existing node by VERB /perspectives/:id\r\n            url = Url.combine(url, 'perspectives', id);\r\n          } else {\r\n            throw new Error('Unsupported id value');\r\n          }\r\n          return url;\r\n        },\r\n\r\n        url: function () {\r\n          var url = this.urlBase();\r\n          return url;\r\n        },\r\n\r\n        parse: function (response) {\r\n\r\n          var perspectives = response.perspectives;\r\n          if (!perspectives || perspectives.length === 0) {\r\n            return {};\r\n          }\r\n\r\n          // TODO remove duplicate / unncessary keys\r\n          var perspective = perspectives[0];\r\n          perspective.cascading = perspective.cascading + '',\r\n              perspective.containerType = perspective.container_type;\r\n          perspective.constantData = perspective.constant_data;\r\n          perspective.overrideType = perspective.override_type;\r\n          perspective.overrideId = perspective.override_id;\r\n\r\n          perspective.nodepath = perspective.node_path;\r\n          perspective.rules = perspective.rule_data;\r\n          perspective.perspective = JSON.parse(perspective.perspective);\r\n          perspective.constant_extraction_mode = perspective.container_type;\r\n          perspective.pnodepath = perspective.perspective_node_path;\r\n\r\n          return perspective;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return ServerAdaptorMixin;\r\n});\r\n  \n","//TODO Check if this should be moved to pman \r\ncsui.define('csui/models/perspective/perspective.model',[\"module\", 'csui/lib/underscore', \"csui/lib/backbone\",\r\n  \"csui/models/perspective/server.adaptor.mixin\",\r\n  'csui/models/mixins/uploadable/uploadable.mixin',\r\n  'csui/models/mixins/connectable/connectable.mixin',\r\n  \"csui/utils/log\", \"csui/utils/base\"\r\n], function (module, _, Backbone, ServerAdaptorMixin, UploadableMixin, ConnectableMixin, log,\r\n    base) {\r\n  \"use strict\";\r\n\r\n  var config = _.extend({\r\n    idAttribute: null\r\n  }, module.config());\r\n\r\n  var PerspectiveModel = Backbone.Model.extend({\r\n    idAttribute: config.idAttribute,\r\n\r\n    constructor: function PerspectiveModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.call(this, attributes, options);\r\n      this.options = _.pick(options, ['connector']);\r\n      this.makeUploadable(options)\r\n          .makeConnectable(options)\r\n          .makeServerAdaptor(options);\r\n    },\r\n\r\n    isNew: function () {\r\n      return !this.get('id') || this.get('id') === 0;\r\n    },\r\n\r\n    isFetchable: function () {\r\n      return !!this.get('id');\r\n    },\r\n\r\n    prepareFormData: function (data, options) {\r\n      return {pData: JSON.stringify(data)};\r\n    }\r\n  });\r\n\r\n  UploadableMixin.mixin(PerspectiveModel.prototype);\r\n  ConnectableMixin.mixin(PerspectiveModel.prototype);\r\n  ServerAdaptorMixin.mixin(PerspectiveModel.prototype);\r\n\r\n  return PerspectiveModel;\r\n\r\n});\n","csui.define('csui/utils/commands/create.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, PerspectiveModel, lang) {\r\n  'use strict';\r\n\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: false\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory, NodeModelFactory, AncestorCollectionFactory;\r\n\r\n  var CreatePerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'CreatePerspective',\r\n      name: lang.CreatePerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id === undefined && attributes.canEditPerspective &&\r\n          context._applicationScope.attributes.id === \"node\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Prepare new perspective config required for current node since no perspective is configured yet.\r\n     */\r\n    _preparePerspectiveConfig: function (context) {\r\n      var perspectiveConfig = {\r\n            \"perspective\": {\r\n              \"type\": \"flow\",\r\n              \"options\": {\r\n                \"widgets\": [\r\n                  {\r\n                    \"type\": \"csui/widgets/nodestable\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            \"overrideType\": \"genericContainer\",\r\n            \"scope\": \"local\",\r\n            \"containerType\": \"-1\",\r\n            \"cascading\": \"false\"\r\n          },\r\n          node              = CommandHelper.getJustOneNode(status) ||\r\n                              context.getModel(NodeModelFactory),\r\n          collection        = context.getCollection(AncestorCollectionFactory);\r\n      perspectiveConfig.nodepath = this._getNodePath(collection);\r\n      perspectiveConfig.node = node.get('id');\r\n      perspectiveConfig.containerType = node.get('type');\r\n      perspectiveConfig.title = node.get('name');\r\n      return perspectiveConfig;\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/ancestors',\r\n        'csui/perspective.manage/pman.view'\r\n      ], function () {\r\n        NodeModelFactory = arguments[0];\r\n        ConnectorFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var PManView          = arguments[3],\r\n            // Create new perspective\r\n            perspectiveConfig = self._preparePerspectiveConfig(context, NodeModelFactory,\r\n                AncestorCollectionFactory);\r\n        // Append current timestamp to avoid name conflicts in perspective volume\r\n        perspectiveConfig.title = perspectiveConfig.title + ' ' + new Date().getTime();\r\n        var perspective = new PerspectiveModel(perspectiveConfig,\r\n            {connector: context.getObject(ConnectorFactory)});\r\n        var pmanView = new PManView({\r\n          context: context,\r\n          perspective: perspective\r\n        });\r\n        pmanView.show();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(), self = this;\r\n      require(['csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/node',\r\n        'csui/utils/contexts/factories/ancestors'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        AncestorCollectionFactory = arguments[2];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context, status);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var perspectiveConfig = this._preparePerspectiveConfig(context, NodeModelFactory,\r\n          AncestorCollectionFactory);\r\n      perspectiveConfig.ui = {\r\n        \"elements\": {\r\n          \"btn-mode-code\": true,\r\n          \"btn-view-general\": true,\r\n          \"btn-view-rules\": false,\r\n          \"btn-view-layout\": true,\r\n          \"btn-view-widgets\": true,\r\n\r\n          \"view-perspective-action\": true,\r\n          \"perspective-action-create\": true,\r\n          \"perspective-action-edit\": true,\r\n          \"perspective-action-copy\": true,\r\n\r\n          \"view-perspective-form\": true,\r\n          \"perspective-title\": true,\r\n          \"perspective-type\": true,\r\n          \"perspective-scope\": true,\r\n          \"perspective-nodetypes\": true,\r\n          \"perspective-node\": true,\r\n          \"perspective-cascading\": true,\r\n\r\n          \"display-size-msg\": false,\r\n          \"rules-code\": true,\r\n\r\n          \"layout-flow\": true,\r\n          \"layout-left-center-right\": true,\r\n          \"layout-grid\": false,\r\n          \"layout-tabbed\": false\r\n        },\r\n        \"widgetGroupsBlacklist\": [],\r\n        \"widgetsWhitelist\": [],\r\n        \"disableGrouping\": false\r\n      };\r\n      return {\r\n        config: JSON.stringify(perspectiveConfig)\r\n      };\r\n    },\r\n\r\n    _getNodePath: function (collection) {\r\n      var nodepath = \"\";\r\n      collection.each(function (model) {\r\n        nodepath += nodepath ? ':' : '';\r\n        nodepath += model.get('name');\r\n      });\r\n      return nodepath;\r\n    }\r\n\r\n  });\r\n\r\n  return CreatePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/node',['csui/lib/underscore', 'csui/models/command',\r\n  'csui/utils/commands/multiple.items'\r\n], function (_, CommandModel, MultipleItemsCommand) {\r\n\r\n  var NodeCommand = CommandModel.extend({\r\n\r\n    _performAction: function (node, options) {\r\n      throw new Error('Method not implemented in the descendant command.');\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(NodeCommand.prototype, MultipleItemsCommand);\r\n\r\n  return NodeCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/delete',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/log', 'csui/utils/commandhelper', 'csui/utils/commands/node',\r\n  'csui/utils/commands/multiple.items', 'csui/utils/commands/confirmable',\r\n  'csui/utils/command.error'\r\n], function (module, require, _, $, lang, log, CommandHelper, NodeCommand,\r\n    MultipleItemsCommand, ConfirmableCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 1\r\n  });\r\n\r\n  var UploadFileCollection, NextNodeModelFactory, GlobalMessage;\r\n\r\n  var DeleteCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'Delete',\r\n      command_key: ['delete', 'Delete'],\r\n      name: lang.CommandNameDelete,\r\n      verb: lang.CommandVerbDelete,\r\n      pageLeavingWarning: lang.DeletePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemSuccessMessage,\r\n        formatForTwo: lang.DeleteSomeItemsSuccessMessage,\r\n        formatForFive: lang.DeleteManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.DeleteItemsNoneMessage,\r\n        formatForOne: lang.DeleteOneItemFailMessage,\r\n        formatForTwo: lang.DeleteSomeItemsFailMessage,\r\n        formatForFive: lang.DeleteManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      var msg = (nodes.length === 1 ?\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogSingleMessage,\r\n                     nodes.at(0).get('name')) :\r\n                 _.str.sformat(lang.DeleteCommandConfirmDialogMultipleMessage,\r\n                     nodes.length));\r\n      return {\r\n        title: lang.DeleteCommandConfirmDialogTitle,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    // Perform the delete action. Return a promise, which is resolved with the deleted node if\r\n    // successful or rejected with the error.\r\n    // Note, that the node is used later to display the name of the deleted item.\r\n    _performAction: function (model, options) {\r\n      var node = model.node;\r\n      var d = $.Deferred();\r\n      var collection = node.collection;\r\n      if (collection) {\r\n        var jqxhr = node.destroy({\r\n          wait: true\r\n        })\r\n            .done(function () {\r\n              model.set('count', 1);\r\n              model.deferred.resolve(model);\r\n              d.resolve(node);\r\n            })\r\n            .fail(function (error) {\r\n              var commandError = error ? new CommandError(error, node) :\r\n                                 error;\r\n              model.deferred.reject(model, commandError);\r\n              if (!error) {\r\n                jqxhr.abort();\r\n              }\r\n              d.reject(commandError);\r\n            });\r\n        return d.promise();\r\n      }\r\n      else {\r\n        return d.reject(\r\n            new CommandError(_.str.sformat(lang.DeleteItemFailed, node.get('name')),\r\n                {errorDetails: 'collection is undefined'}));\r\n      }\r\n    },\r\n\r\n    // keep in sync with versions/delete.js\r\n    startGlobalMessage: function (uploadCollection, options) {\r\n      /* GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        oneFileSuccess: isVersionModel ? versionLang.DeleteVersionOneItemSuccessMessage : lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: isVersionModel ? versionLang.DeleteVersionManyItemsSuccessMessage : lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: isVersionModel ? versionLang.DeletingOneVersion : lang.DeletingOneFile,\r\n        multiFilePending: isVersionModel ? versionLang.DeleteVersions : lang.DeleteFiles,\r\n        oneFileFailure: isVersionModel ? versionLang.DeleteVersionOneItemFailMessage : lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: isVersionModel ? versionLang.DeleteVersionManyItemsFailMessage2 : lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: isVersionModel ? versionLang.DeleteVersionSomeItemsSuccessMessage : lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: isVersionModel ? versionLang.DeletingSomeVersions : lang.DeletingSomeFiles,\r\n        someFileFailure: isVersionModel ? versionLang.DeleteVersionSomeItemsFailMessage2 : lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      }); */\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.DeletingOneItem,\r\n        oneFileSuccess: lang.DeleteOneItemSuccessMessage,\r\n        multiFileSuccess: lang.DeleteManyItemsSuccessMessage,\r\n        oneFilePending: lang.DeletingOneItem,\r\n        multiFilePending: lang.DeleteItems,\r\n        oneFileFailure: lang.DeleteOneItemFailMessage,\r\n        multiFileFailure: lang.DeleteManyItemsFailMessage2,\r\n        someFileSuccess: lang.DeleteSomeItemsSuccessMessage,\r\n        someFilePending: lang.DeletingSomeItems,\r\n        someFileFailure: lang.DeleteSomeItemsFailMessage2,\r\n        enableCancel: false,\r\n        originatingView: options.originatingView\r\n      });\r\n    }\r\n  });\r\n\r\n  _.extend(DeleteCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n\r\n      // avoid messages from handleExecutionResults (must be set here and not in any async\r\n      // callbacks, because it is used in the calling code immediately after calling execute)\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/models/fileuploads',\r\n        'csui/utils/contexts/factories/next.node',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (localUploadFileCollection, localNextNodeModelFactory,\r\n          localGlobalMessage) {\r\n        UploadFileCollection = localUploadFileCollection;\r\n        NextNodeModelFactory = localNextNodeModelFactory;\r\n        GlobalMessage = localGlobalMessage;\r\n        self._executeDelete(status, options)\r\n            .then(deferred.resolve, deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeDelete: function (status, options) {\r\n      var self = this;\r\n      options || (options = {});\r\n      var nodes       = CommandHelper.getAtLeastOneNode(status),\r\n          node        = nodes.length === 1 && nodes.first(),\r\n          deferred    = $.Deferred(),\r\n          commandData = status.data || {},\r\n          context     = status.context || options.context;\r\n\r\n      options.parallelism || (options.parallelism = config.parallelism);\r\n      options.originatingView = status.originatingView;\r\n\r\n      var showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true;\r\n\r\n      // Do not use 'apply' with 'arguments' array because the 'options' parameter that is\r\n      // undefined and locally set will not be passed on with the locally set value.\r\n      // Use 'call' with parameters list.\r\n      ConfirmableCommand.execute.call(this, status, options)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n\r\n            // If the current container is deleted, open its parent\r\n            if (node && node === status.container) {\r\n              // Let the other subscribers execute before navigating away\r\n              setTimeout(function () {\r\n                var nextNode = context.getModel(NextNodeModelFactory),\r\n                    parentId = status.container.get('parent_id');\r\n                nextNode.set('id', parentId.id || parentId);\r\n              });\r\n            }\r\n            // For mobile we refresh last page in order to retrieve pushed\r\n            // up items after a delete.\r\n            else if (options.infiniteScroll) {\r\n              status.collection.fetch({\r\n                reset: false,\r\n                remove: false,\r\n                merge: true\r\n              });\r\n            }\r\n            //to refetch collection in table View\r\n            self.allowCollectionRefetch = true;\r\n            deferred.resolve(results);\r\n          })\r\n          .fail(function (args) {\r\n            //only return a result if there is at least one successful delete.\r\n            //This way the waiting CommandHelper in the tabletoolbar.view will trigger\r\n            //an execute complete event.\r\n            var oneSuccess = args && _.find(args, function (result) {\r\n              return !(result instanceof CommandError);\r\n            });\r\n            var rejectResults = oneSuccess ? oneSuccess : args;\r\n            deferred.reject(rejectResults);\r\n          });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          commandData        = status.data || {},\r\n          showProgressDialog = commandData.showProgressDialog != null ?\r\n                               commandData.showProgressDialog : true,\r\n          models             = status.nodes.models;\r\n      var nodes = _.map(models, function (node) {\r\n        return {\r\n          name: node.get('name'),\r\n          state: 'pending',\r\n          count: 0,\r\n          total: 1,\r\n          node: node\r\n        };\r\n      });\r\n      var connector = models && models[0] && models[0].connector;\r\n      var uploadCollection = new UploadFileCollection(nodes, {connector: connector});\r\n      var newStatus = _.defaults({nodes: uploadCollection}, status);\r\n      // TODO: Make the progressbar a reusable component; do not\r\n      // misuse the file-upload-progressbar for other scenarios.\r\n      // TODO: Handle this in the multi-item command to be consistent\r\n      // with other commands; do not override the delete command only.\r\n      uploadCollection.each(function (fileUpload) {\r\n        // Replace the new node in the file upload model with the existing\r\n        // one to be able to destroy it; sync and destroy events will be\r\n        // triggered on it and the parent collection and view will see them.\r\n        var node = fileUpload.get('node');\r\n        fileUpload.node = node;\r\n        fileUpload.unset('node');\r\n        fileUpload.set('mime_type', node.get('mime_type'));\r\n\r\n      });\r\n\r\n      // var isVersionModel = uploadCollection.models[0].node instanceof VersionModel;\r\n      if (showProgressDialog) {\r\n        this.startGlobalMessage(uploadCollection, options);\r\n      }\r\n\r\n      // do not display our result messages in _performActions\r\n      newStatus.suppressMultipleSuccessMessage = true;\r\n      newStatus.suppressMultipleFailMessage = true;\r\n\r\n      MultipleItemsCommand._performActions.call(this, newStatus, options)\r\n          .done(function (results) {\r\n            if (showProgressDialog) {\r\n              GlobalMessage.hideFileUploadProgress();\r\n            }\r\n            deferred.resolve(results);\r\n            // Wait for animation to complete before showing success message\r\n            setTimeout(function () {\r\n              self.showSuccess(results);\r\n            }, 500);\r\n          })\r\n          .fail(function (errors) {\r\n            if (!showProgressDialog) {\r\n              self.showError(errors);\r\n            }\r\n            return deferred.reject(errors);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return DeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/download',[\"module\", \"csui/lib/underscore\", \"csui/lib/jquery\", \"csui/utils/base\",\r\n  \"i18n!csui/utils/commands/nls/localized.strings\", \"csui/utils/log\", \"csui/utils/command.error\",\r\n  \"csui/utils/url\", \"csui/utils/commandhelper\", \"csui/utils/connector\", \"csui/models/command\"\r\n], function (module, _, $, base, lang, log, CommandError, Url, CommandHelper, Connector,\r\n    CommandModel) {\r\n  'use strict';\r\n\r\n  var DownloadCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"Download\",\r\n      command_key: ['download', 'Download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Apply the open commands always to the shortcut or generation\r\n      // target; the original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        var type = node.get('type');\r\n        if (type === 1) {\r\n          node = node.original;\r\n        } else if (type === 2) {\r\n          // Don't switch to original for generations. This is handled\r\n          // internally by the content rest call. Make the generation\r\n          // node carry all properties, which the document would have\r\n          // and which the content-opening functionality checks.\r\n          node.set({mime_type: node.original.get('mime_type')}, {silent: true});\r\n        }\r\n      }\r\n      if (base.isAppleMobile()) {\r\n        // in case of iOS open the document in a new tab\r\n        return this._openContent(node, options);\r\n      } else {\r\n        return this._downloadContent(node, options);\r\n      }\r\n    },\r\n\r\n    _downloadContent: function (node, options, action) {\r\n      return this._executeContentCommand(node, options)\r\n          .then(_.bind(function (token) {\r\n            var url = this._getContentUrl(node, options, action || \"download\", token);\r\n            return this._performDownload(url);\r\n          }, this));\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      var self = this;\r\n      var content = window.open(\"\");\r\n      return this._executeContentCommand(node, options)\r\n          .then(function (token) {\r\n            content.location.href = self._getContentUrl(node, options, \"download\", token);\r\n            content.focus();\r\n            return $.Deferred().resolve();\r\n          }, function () {\r\n            content.close();\r\n            return $.Deferred().reject();\r\n          });\r\n    },\r\n\r\n    _executeContentCommand: function (node, options) {\r\n      var promise = $.Deferred();\r\n      node.connector.requestContentAuthToken(node)\r\n          .done(function (data) {\r\n\r\n            promise.resolve(data.token);\r\n          })\r\n          .fail(function (error) {\r\n            promise.reject(new CommandError(error));\r\n          });\r\n      return promise.promise();\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = \"\";\r\n      if (node.get('version_number')) {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      } else {\r\n        url = Url.combine(node.connector.connection.url, \"nodes\",\r\n            node.get('id'), \"content\");\r\n      }\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    },\r\n\r\n    _performDownload: function (url) {\r\n      // Creating an iframe with non-displayable document forces the download\r\n      // action in the browser and the page stays undisturbed.\r\n      var iframe = $(\"<iframe></iframe>\")\r\n          .hide()\r\n          .attr(\"src\", url)\r\n          .appendTo($(document.body));\r\n      var delay = Math.min(Connector.prototype.connectionTimeout || 60 * 1000, 60 * 1000);\r\n      setTimeout(function () {\r\n        iframe.remove();\r\n      }, delay);\r\n      return $.Deferred().resolve();\r\n    }\r\n\r\n  });\r\n\r\n  return DownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.classic.page',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, Url, CommandHelper, CommandModel, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var OpenClassicPageCommand = CommandModel.extend({\r\n\r\n    execute: function (status, options) {\r\n      // TODO: Remove this. Commands have to return false from enabled()\r\n      // in this case.\r\n      if (config.classicUnsupported) {\r\n        return this._classicUnsupported(status);\r\n      }\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Merge status and options on a higher level\r\n      return this._navigateTo(node, _.extend({}, status, options));\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var connector = node.connector || options.connector,\r\n          url = new Url(connector.connection.url).getCgiScript(),\r\n          urlQuery = this.getUrlQueryParameters(node, options);\r\n      if (urlQuery && !_.isString(urlQuery)) {\r\n        urlQuery = $.param(urlQuery);\r\n      }\r\n      if (urlQuery) {\r\n        url += '?' + urlQuery;\r\n      }\r\n      return url;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n    },\r\n\r\n    openInNewTab: function () {\r\n      return config.openInNewTab;\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: false,\r\n\r\n    _classicUnsupported: function (status) {\r\n      var deferred = $.Deferred();\r\n      status.suppressFailMessage = true;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n        ModalAlert.showInfo(lang.viewTypeUnsupported);\r\n      });\r\n      return deferred.reject();\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url, openInNewTab, shouldCloseTabAfterRedirect,\r\n          config, closeUrl, connection;\r\n\r\n      // If no URL is available, the terminal command can formulate\r\n      // a meaningful message\r\n      try {\r\n        url = this.getUrl(node, options);\r\n      } catch (error) {\r\n        return $\r\n            .Deferred()\r\n            .reject(error)\r\n            .promise();\r\n      }\r\n\r\n      openInNewTab = this.openInNewTab;\r\n      if (_.isFunction(openInNewTab)) {\r\n        openInNewTab = openInNewTab.call(this);\r\n      }\r\n\r\n      shouldCloseTabAfterRedirect = this.shouldCloseTabAfterRedirect;\r\n      if (_.isFunction(shouldCloseTabAfterRedirect)) {\r\n        shouldCloseTabAfterRedirect = shouldCloseTabAfterRedirect.call(this);\r\n      }\r\n\r\n      // Append nextURL parameter pointing to the current or to a\r\n      // self-closing page, when the classic page has been submitted\r\n      if (shouldCloseTabAfterRedirect) {\r\n        // Use the self-closing page, only if a new window is opened;\r\n        // otherwise go back to the current page\r\n        if (openInNewTab) {\r\n          connection = (node.connector || options.connector).connection;\r\n          // Ask for the configuration first here; it can be set later\r\n          // during requiring of other modules\r\n          closeUrl = module.config().closeUrl ||\r\n                     Url.combine(connection.supportPath,\r\n                         'csui/pages/close.html');\r\n          if (!new Url(closeUrl).isAbsolute()) {\r\n            if (closeUrl[0] !== '/') {\r\n              closeUrl = Url.appendQuery(\r\n                  new Url(connection.url).getCgiScript(), closeUrl);\r\n            } else {\r\n              closeUrl = Url.combine(\r\n                  new Url(connection.url).getOrigin(), closeUrl);\r\n            }\r\n          }\r\n        } else {\r\n          closeUrl = location.href;\r\n        }\r\n        url = Url.appendQuery(url, Url.combineQueryString({\r\n          nextURL: closeUrl\r\n        }));\r\n      }\r\n\r\n      if (openInNewTab) {\r\n        window\r\n            .open(url, '_blank')\r\n            .focus();\r\n      } else {\r\n        location.href = url;\r\n      }\r\n\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  }, {\r\n    openInNewTab: config.openInNewTab\r\n  });\r\n\r\n  return OpenClassicPageCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'Edit',\r\n      command_key: 'edit',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editactivex',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditActiveX = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditActiveX',\r\n      command_key: 'editactivex',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditActiveX;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/editofficeonline',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditOfficeOnline = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditOfficeOnline',\r\n      command_key: 'editofficeonline',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditOfficeOnline;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/edit.perspective',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/url',\r\n  'csui/models/perspective/perspective.model',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    Url, PerspectiveModel, lang) {\r\n  'use strict';\r\n  var config = window.csui.requirejs.s.contexts._.config\r\n                   .config['csui/utils/contexts/perspective'] || {};\r\n  config = _.extend({\r\n    enableInlinePerspectiveEditing: false\r\n  }, config, module.config());\r\n\r\n  var ConnectorFactory;\r\n\r\n  var EditPerspectiveCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditPerspective',\r\n      name: lang.EditPerspective\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var context    = status.context || options && options.context,\r\n          attributes = context.perspective.attributes;\r\n      if (attributes.id) {\r\n        return attributes.canEditPerspective;\r\n      }\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var context         = status.context || options && options.context,\r\n          isInlineEditing = (options && options.inlinePerspectiveEditing) ||\r\n                            config.enableInlinePerspectiveEditing;\r\n      if (isInlineEditing) {\r\n        // Edit perspective of page inline in SmartUI\r\n        return this._editInline(status, options, context);\r\n      } else {\r\n        // Navigate to class Perspective Management console\r\n        return this._editInClassicPMan(status, options, context);\r\n      }\r\n    },\r\n\r\n    _editInline: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/perspective.manage/pman.view', 'csui/utils/contexts/factories/connector'],\r\n          function (PManView, ConnectorFactory) {\r\n            var perspectiveId = context.perspective.get('id');\r\n            var perspectiveConfig = _.pick(context.perspective.attributes, 'type', 'options');\r\n            var perspective = new PerspectiveModel(\r\n                {id: perspectiveId, perspective: perspectiveConfig},\r\n                {connector: context.getObject(ConnectorFactory)});\r\n            var pmanView = new PManView({\r\n              context: context,\r\n              perspective: perspective\r\n            });\r\n            pmanView.show();\r\n            deferred.resolve();\r\n          }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _editInClassicPMan: function (status, options, context) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      require(['csui/utils/contexts/factories/connector'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        var f = self._getForm(context, status);\r\n        f.submit();\r\n        f.remove();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getForm: function (context, status) {\r\n      var f = $(\"<form target='_blank' method='POST' style='display:none;'></form>\").attr({\r\n        action: this._getUrl(context, status)\r\n      }).appendTo(document.body);\r\n\r\n      var params = this._getUrlQueryParameters(context);\r\n\r\n      for (var i in params) {\r\n        if (params.hasOwnProperty(i)) {\r\n          $('<input type=\"hidden\" />').attr({\r\n            name: i,\r\n            value: params[i]\r\n          }).appendTo(f);\r\n        }\r\n      }\r\n\r\n      return f;\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector      = context.getObject(ConnectorFactory),\r\n          cgiUrl         = new Url(connector.connection.url).getCgiScript(),\r\n          perspectiveUrl = cgiUrl.toString() + \"/perspectivemgr\";\r\n      return perspectiveUrl;\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context) {\r\n      var perspective_id = context.perspective.attributes.id,\r\n          parameters;\r\n      if (perspective_id !== undefined && perspective_id > 0) {\r\n        parameters = {\r\n          perspective_id: perspective_id\r\n        };\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return EditPerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/editwebdav',['csui/lib/jquery.parse.param', 'csui/utils/commandhelper',\r\n  'csui/utils/url', 'csui/utils/commands/open.classic.page'\r\n], function (parseParam, CommandHelper, Url, OpenClassicPageCommand, lang) {\r\n  'use strict';\r\n\r\n  var EditWebDAV = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'EditWebDAV',\r\n      command_key: 'editwebdav',\r\n      scope: 'single'\r\n    },\r\n\r\n    shouldCloseTabAfterRedirect: true,\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n\t      signature = this.get('command_key'),\r\n          action = this._getNodeActionForSignature(node, signature);\r\n      // Set the value of name and promoted from the /nodes/actions response\r\n      if (action) {\r\n        var toolItem = status.toolItem || options && options.toolItem;\r\n        if (toolItem) {\r\n          var name = action.get('name');\r\n          if (name) {\r\n            toolItem.set('name', name);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var signature = this.get(\"command_key\"),\r\n          action = this._getNodeActionForSignature(node, signature),\r\n          url, connection;\r\n      if (action) {\r\n        url = action.get('href');\r\n        if (url) {\r\n          if (!new Url(url).isAbsolute()) {\r\n            connection = (node.connector || options.connector).connection;\r\n            if (url[0] !== '/') {\r\n              url = Url.appendQuery(new Url(connection.url).getCgiScript(), url);\r\n            } else {\r\n              url = Url.combine(new Url(connection.url).getOrigin(), url);\r\n            }\r\n          }\r\n          return url;\r\n        }\r\n      }\r\n      throw new Error(lang.NoEditUrl);\r\n    }\r\n\r\n  });\r\n\r\n  return EditWebDAV;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/utils/commands/nls/root/lang',{\r\n\r\n  // Share\r\n  EmailLinkSubject: 'I want to share the following links with you',\r\n  EmailLinkDesktop: \"Link for Desktop and Android\",\r\n  EmailAppleLinkFormat: \"Link for iOS Mobile\",\r\n\r\n  // Reserve\r\n  CommandNameReserve: \"Reserve\",\r\n  CommandVerbReserve: \"reserve\",\r\n  ReservePageLeavingWarning: \"If you leave the page now, pending items will not be reserved.\",\r\n  ReserveItemsNoneMessage: \"No items reserved.\",\r\n  ReserveOneItemSuccessMessage: \"1 item successfully reserved.\",\r\n  ReserveSomeItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveManyItemsSuccessMessage: \"{0} items successfully reserved.\",\r\n  ReserveOneItemFailMessage: \"1 item failed to reserve.\",\r\n  ReserveSomeItemsFailMessage: \"{0} items failed to reserve.\",\r\n  ReserveManyItemsFailMessage: \"{0} items failed to reserve.\",\r\n\r\n  // Unreserve\r\n  CommandNameUnreserve: \"Unreserve\",\r\n  CommandVerbUnreserve: \"unreserve\",\r\n  UnreservePageLeavingWarning: \"If you leave the page now, pending items will not be unreserved.\",\r\n  UnreserveItemsNoneMessage: \"No items unreserved.\",\r\n  UnreserveOneItemSuccessMessage: \"1 item successfully unreserved.\",\r\n  UnreserveSomeItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveManyItemsSuccessMessage: \"{0} items successfully unreserved.\",\r\n  UnreserveOneItemFailMessage: \"1 item failed to unreserve.\",\r\n  UnreserveSomeItemsFailMessage: \"{0} items failed to unreserve.\",\r\n  UnreserveManyItemsFailMessage: \"{0} items failed to unreserve.\",\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/email.link',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/command.error',\r\n  'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/node.links/node.links',\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/lib/underscore.string'\r\n], function (module, _, $, Url, CommandError, CommandModel,\r\n    CommandHelper, nodeLinks, publicLang, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    rewriteApplicationURL: false,\r\n    enableAppleSupport: false,\r\n    appleNodeLinkBase: 'x-otm-as-cs16://?launchUrl=nodes/'\r\n  }, module.config());\r\n\r\n  var EmailLinkCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EmailLink',\r\n      name: lang.CommandNameEmailLink,\r\n      verb: lang.CommandVerbEmailLink\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var nodes = CommandHelper.getAtLeastOneNode(status);\r\n      return nodes && nodes.length;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      // TODO: Share the node e-mail link gathering code and the e-mail\r\n      // formatting code by creating a new module for it\r\n      var nodes = CommandHelper.getAtLeastOneNode(status),\r\n          context = status.context || (options && options.context),\r\n          applicationUrl = this._getApplicationUrl(nodes, context),\r\n          body = this._getNodesLinks(nodes, applicationUrl),\r\n          newHref = 'mailto:?subject=' + encodeURIComponent(publicLang.EmailLinkSubject) +\r\n                    '&body=' + encodeURIComponent(body),\r\n          error = this._openNewHref(newHref);\r\n      if (error) {\r\n        deferred.reject(error);\r\n      } else {\r\n        deferred.resolve();\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getApplicationUrl: function (nodes) {\r\n      var connector = nodes.first().connector;\r\n      return Url.combine(new Url(connector.connection.url).getCgiScript(), '/app');\r\n    },\r\n\r\n    _openNewHref: function (newHref) {\r\n      if (newHref.length > 2048) {\r\n        return new CommandError(lang.EmailLinkCommandFailedWithTooMuchItemsErrorMessage);\r\n      } else {\r\n        window.location.href = newHref;\r\n      }\r\n    },\r\n\r\n    _getNodesLinks: function(nodes, applicationUrl) {\r\n      var iOSEnabled = config.enableAppleSupport,\r\n          iOSText = lang.EmailAppleLinkFormat,\r\n          androidText = publicLang.EmailLinkDesktop + '\\n',\r\n          desktopText = nodes.map(function (node) {\r\n            var actionUrl = nodeLinks.getUrl(node),\r\n                name = node.get('name') + \":\";\r\n\r\n            if (config.rewriteApplicationURL) {\r\n            // This disallows using the hash part, when the slash-based routing is enabled.\r\n            // But it should be no problem, because it is temporary for the mobile\r\n            // application only. and it didn't offer such contract for the old scenarios.\r\n            var hash = actionUrl.lastIndexOf('#');\r\n            if (hash >= 0) {\r\n              actionUrl = applicationUrl + '/' + actionUrl.substr(hash + 1);\r\n            }\r\n          }\r\n\r\n          if (iOSEnabled) {\r\n              // This is not the node ID returned by nodeLinks.getUrl.\r\n              // There is no extensibility applied, which can happen there.\r\n              // I am not sure, if it is worth to fix it.\r\n              var nodeId = (node.get('type') === 1)?node.original.get('id'):node.get('id');\r\n              iOSText += '\\n' + name + '\\n' + config.appleNodeLinkBase + nodeId;\r\n          }\r\n\r\n          return name + '\\n' + actionUrl;\r\n        }).join('\\n');\r\n\r\n      return iOSEnabled ? androidText + desktopText + \"\\n\\n\" + iOSText : desktopText;\r\n\r\n    }\r\n  });\r\n\r\n  return EmailLinkCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/execute.saved.query',[\r\n  'require', 'csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/models/command',\r\n], function (require, $, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExecuteSavedQueryCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ExecuteSavedQuery',\r\n      // FIXME: handle the search command using the server-permitted\r\n      // actions once the server returns the default action key\r\n      //command_key: ['<command key>'],\r\n      scope: 'single'\r\n    },\r\n\r\n    // FIXME: remove this once the server returns the default action key\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 258;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/search.query.factory'\r\n      ], function (SearchQueryModelFactory) {\r\n        var node = CommandHelper.getJustOneNode(status),\r\n            context = status.context || options && options.context,\r\n            searchQuery = context.getModel(SearchQueryModelFactory);\r\n        // TODO: Let the saved query open in its perspective instead.\r\n        searchQuery.clear({silent: true});\r\n        searchQuery.set('query_id', node.get('id'));\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ExecuteSavedQueryCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.add',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var FavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"Favorite\",\r\n      command_key: ['favorite', 'favorite'],\r\n      scope: \"single\",\r\n      name: lang.CommandNameFavorite,\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandDoneVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && !status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && !nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.addToFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', true);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n            .fail(function (err) {\r\n              deferred.reject(new CommandError(err));\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return FavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/favorite.remove',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var NonFavoriteCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"NonFavorite\",\r\n      command_key: ['nonfavorite', 'NonFavorite'],\r\n      scope: \"single\",\r\n      verb: lang.CommandVerbFavorite,\r\n      doneVerb: lang.CommandRemovedVerbFavorite\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (options && options.data && options.data.useContainer) {\r\n        return status.container && status.container.get('favorite');\r\n      } else {\r\n        var nodes = CommandHelper.getAtLeastOneNode(status);\r\n        return nodes && (nodes.length === 1) && nodes.models[0].get('favorite');\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      var originatingView = status.originatingView;\r\n\r\n      require([\r\n        'csui/models/favorite.model',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (FavoriteModel, ModalAlert) {\r\n        var model;\r\n        if (status.data && status.data.useContainer) {\r\n          model = status.container;\r\n        } else {\r\n          model = status.nodes.models[0];\r\n        }\r\n        var modelId = model.get('id');\r\n        var favModel = new FavoriteModel({\r\n              node: model,\r\n              id: modelId,\r\n              selected: false\r\n            },\r\n            {connector: model.connector}\r\n        );\r\n        favModel.removeFromFavorites()\r\n            .done(function (results) {\r\n              model.set('favorite', false);\r\n              originatingView.trigger('fav:change');\r\n              deferred.resolve(results);\r\n            })\r\n          .fail(function (err) {\r\n            deferred.reject(new CommandError(err));\r\n          });\r\n\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return NonFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/inlineedit',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var InlineEditCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"InlineEdit\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/inlineform.factory'\r\n      ], function (inlineFormViewFactory) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n        var inlineFormView = inlineFormViewFactory.getInlineFormView(node.get('type'));\r\n        if (!inlineFormView) {\r\n          // fallback to generic for rename action\r\n          inlineFormView = inlineFormViewFactory.getInlineFormView(-1);\r\n        }\r\n        if (inlineFormView) {\r\n          node.inlineFormView = inlineFormView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n        }\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(InlineEditCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return InlineEditCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/move',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/utils/url', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/multiple.items',\r\n  'csui/utils/node.links/node.links'\r\n], function (module, require, _, $, lang, log, Url, CommandModel,\r\n    CommandHelper, CommandError, MultipleItemsCommand, nodeLinks) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ConflictResolver, TaskQueue,\r\n      ApplyPropertiesSelectorView, UploadFileCollection, PageLeavingBlocker,\r\n      NextNodeModelFactory;\r\n\r\n  // create a helper parent where we can derive from and do additional function modifications\r\n  var MoveCommandParent = CommandModel.extend({});\r\n  _.extend(MoveCommandParent.prototype, MultipleItemsCommand);     // apply needed mixin\r\n\r\n  var MoveCommand = MoveCommandParent.extend({\r\n    defaults: {\r\n      signature: \"Move\",\r\n      command_key: ['move', 'Move'],\r\n      name: lang.CommandNameMove,\r\n      verb: lang.CommandNameVerbMove,\r\n      pageLeavingWarning: lang.MovePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemSuccessMessage,\r\n        formatForTwo: lang.MoveSomeItemsSuccessMessage,\r\n        formatForFive: lang.MoveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: lang.MoveItemsNoneMessage,\r\n        formatForOne: lang.MoveOneItemFailMessage,\r\n        formatForTwo: lang.MoveSomeItemsFailMessage,\r\n        formatForFive: lang.MoveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    execute: function (status, options) {\r\n      var self             = this,\r\n          deferred         = $.Deferred(),\r\n          context          = status.context || options && options.context,\r\n          uploadFileModels = [];\r\n\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require(['csui/controls/globalmessage/globalmessage',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue',\r\n        'csui/dialogs/node.picker/impl/header/apply.properties.selector/apply.properties.selector.view',\r\n        'csui/models/fileuploads', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ConflictResolver = arguments[1];\r\n        TaskQueue = arguments[2];\r\n        ApplyPropertiesSelectorView = arguments[3];\r\n        UploadFileCollection = arguments[4];\r\n        PageLeavingBlocker = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n\r\n        self._selectMoveOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes;\r\n              var targetFolder = selectedOptions.nodes[0];\r\n              var applyProperties = selectedOptions.applyProperties;\r\n\r\n              self._announceOperationStart(status);\r\n\r\n              var namesToResolve = selectedNodes.map(function (node) {\r\n                var returnObj = {\r\n                  id: node.get('id'),\r\n                  name: node.get('name'),\r\n                  container: node.get('container'),\r\n                  mime_type: node.get('mime_type'),\r\n                  original_id: node.get('original_id'),\r\n                  original: node.original,\r\n                  type: node.get('type'),\r\n                  size: node.get('size'),\r\n                  type_name: node.get('type_name'),\r\n                  state: 'pending',\r\n                  count: 0,\r\n                  total: 1,\r\n                  enableCancel: false\r\n                };\r\n                var type = node.get('type');\r\n                if (type === 144 || type === 749 || type === 736 || type === 30309) {\r\n                  returnObj.size_formatted = node.get('size_formatted');\r\n                } else if (type === 140) {\r\n                  returnObj.url = node.get('url');\r\n                }\r\n                returnObj.actions = node.actions;\r\n                return returnObj;\r\n              });\r\n              var moveNamesToResolve = _.map(namesToResolve, function (name) {\r\n                return _.clone(name);\r\n              });\r\n              self._resolveNamingConflicts(targetFolder, moveNamesToResolve)\r\n                  .done(function (moveInstructions) {\r\n\r\n                    _.each(moveInstructions, function (instruction) {\r\n                      if (instruction.id === undefined) {\r\n                        instruction.id = _.findWhere(namesToResolve,\r\n                            {name: instruction.name}).id;\r\n                      }\r\n                    });\r\n\r\n                    self._metadataHandling(moveInstructions,\r\n                        _.extend(selectedOptions, {context: context, targetFolder: targetFolder}))\r\n                        .done(function () {\r\n                          // TODO: Make the progressbar a reusable component; do not\r\n                          // misuse the file-upload-progressbar for other scenarios.\r\n                          // TODO: Handle this in the multi-item command to be consistent\r\n                          // with other commands; do not override the delete command only.\r\n                          var uploadCollection = new UploadFileCollection(moveInstructions);\r\n                          // Replace the new node in the file upload model with the existing\r\n                          // one to be able to destroy it; sync and destroy events will be\r\n                          // triggered on it and the parent collection and view will see them.\r\n                          uploadCollection.each(function (model) {\r\n                            model.node = selectedNodes.findWhere({\r\n                              id: model.get('id')\r\n                            });\r\n                          });\r\n\r\n                          // note: in some scenarios such as expanded tile, the status.container is undefined\r\n                          var connector = status.container && status.container.connector;\r\n                          if (connector === undefined) {\r\n                            var aNode = CommandHelper.getAtLeastOneNode(status).first();\r\n                            aNode && (connector = aNode.connector);\r\n                          }\r\n                          self._moveSelectedNodes(uploadCollection, connector,\r\n                              targetFolder, applyProperties)\r\n                              .done(function (promises) {\r\n                                if (promises.length) {\r\n                                  GlobalMessage.hideFileUploadProgress();\r\n                                  var msgOptions = {\r\n                                    context: context,\r\n                                    nextNodeModelFactory: NextNodeModelFactory,\r\n                                    link_url: nodeLinks.getUrl(targetFolder),\r\n                                    targetFolder: targetFolder\r\n                                  };\r\n                                  self.showSuccessWithLink(promises, msgOptions);\r\n                                }\r\n                                //Remove uploadable nodes, not selected items\r\n                                uploadCollection.models && uploadCollection.models.length > 0 &&\r\n                                _.each(uploadCollection.models, function (filemodel) {\r\n                                  uploadFileModels.push(filemodel.node);\r\n                                });\r\n                                // status.collection can be undefined; for example: go to Properties\r\n                                // dropdown menu of the current folder in table header, then use the\r\n                                // Move command from the item's dropdown menu in Properties view.\r\n                                status.collection && status.collection.remove(uploadFileModels);     // remove only processed nodes and not all selected\r\n                                //to refetch collection in table View\r\n                                self.allowCollectionRefetch = true;\r\n                                deferred.resolve(uploadFileModels);\r\n                              })\r\n                              .always(function () {\r\n                                self._announceOperationEnd(status);\r\n                                context.trigger('current:folder:changed');\r\n                              })\r\n                              .fail(function () {\r\n                                // Returning nothing prevents the common error message\r\n                                // from being shown.\r\n                                deferred.reject();\r\n                              });\r\n\r\n                        })\r\n                        .fail(function () {\r\n                          self._announceOperationEnd(status);\r\n                          deferred.reject();\r\n                        });\r\n\r\n                  })\r\n                  .fail(function (error) {   // resolve namingConflicts\r\n                    if (error && error.userAction && error.userAction ===\r\n                        \"cancelResolveNamingConflicts\") {\r\n                      self.trigger(\"resolve:naming:conflicts:cancelled\");\r\n                    }\r\n                    else if (error && !error.cancelled) {  // if not undefined (cancel) then display error\r\n                      self.showError(error);\r\n                    }\r\n                    self._announceOperationEnd(status);\r\n                    deferred.reject();                  // empty promise\r\n                  });\r\n            })\r\n            .fail(function (error) {\r\n              if (error && !error.cancelled) {                           // if not undefined (cancel) then display error\r\n                self.showError(error);\r\n              }\r\n              deferred.reject();\r\n            });\r\n\r\n      }, deferred.reject);              // require\r\n\r\n      return deferred.promise();        // return empty promise!\r\n    },\r\n\r\n    _announceOperationStart: function (status) {\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.blockActions) {\r\n        originatingView.blockActions();\r\n      }\r\n      PageLeavingBlocker.enable(this.get('pageLeavingWarning'));\r\n    },\r\n\r\n    _announceOperationEnd: function (status) {\r\n      PageLeavingBlocker.disable();\r\n      var originatingView = status.originatingView;\r\n      if (originatingView.unblockActions) {\r\n        originatingView.unblockActions();\r\n      }\r\n    },\r\n\r\n    _selectMoveOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodeDestinationPicker) {\r\n            // note: in some scenarios such as expanded tile, the status.container is undefined\r\n            var contextMenuCopy = status.container ? (status.container.get('id') ===\r\n                                                      status.nodes.models[0].get('id')) : false;\r\n            var numNodes = status.nodes.length;\r\n            var dialogTitle = _.str.sformat(\r\n                numNodes > 1 ? lang.DialogTitleMove : lang.DialogTitleSingleMove, numNodes);\r\n            var pickerOptions = _.extend({\r\n              command: 'move',\r\n              selectableTypes: [-1],\r\n              unselectableTypes: [899],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: dialogTitle,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: contextMenuCopy ? 'recent.containers' : '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodeDestinationPicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function () {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _resolveNamingConflicts: function (targetFolder, nodeNames) {\r\n      var h1 = nodeNames.length === 1 ? lang.MovingNode :\r\n               _.str.sformat(lang.MovingNodes, nodeNames.length);\r\n      var conflictResolver = new ConflictResolver({\r\n        h1Label: h1,\r\n        actionBtnLabel: lang.CommandNameMove,\r\n        excludeAddVersion: true,\r\n        container: targetFolder,\r\n        files: nodeNames\r\n      });\r\n      return conflictResolver.run();\r\n    },\r\n\r\n    _metadataHandling: function (items, options) {\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/widgets/metadata/metadata.copy.move.items.controller'\r\n      ], function (MetadataCopyMoveItemsController) {\r\n        var openMetadata = options.openSelectedProperties;\r\n        var applyProperties = options.applyProperties;\r\n        var metadataController = new MetadataCopyMoveItemsController();\r\n        var controllerFunction;\r\n\r\n        // open the metadata view\r\n        if (openMetadata) {\r\n          controllerFunction = metadataController.CopyMoveItemsWithMetadata;\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES ||\r\n                   applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          // check for required metadata\r\n          controllerFunction = metadataController.CopyMoveItemsRequiredMetadata;\r\n        } else {\r\n          return deferred.resolve();\r\n        }\r\n\r\n        if (applyProperties === ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES) {\r\n          options.inheritance = 'original';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES) {\r\n          options.inheritance = 'destination';\r\n        } else if (applyProperties === ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES) {\r\n          options.inheritance = 'merged';\r\n        }\r\n\r\n        options.action = 'move';\r\n        controllerFunction.call(metadataController, items, options)\r\n            .done(function () {\r\n              deferred.resolve();\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n\r\n      }, function (error) {\r\n        log.warn('Failed to load MetadataCopyMoveItemsController. {0}', error)\r\n        && console.warn(log.last);\r\n        deferred.reject(error);\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _moveSelectedNodes: function (uploadCollection, connector, targetFolder, applyProperties) {\r\n      var self     = this,\r\n          queue    = new TaskQueue({\r\n            parallelism: config.parallelism\r\n          }),\r\n          promises = _.map(uploadCollection.models, function (model) {\r\n            var deferred = $.Deferred();\r\n            queue.pending.add({\r\n              worker: function () {\r\n                var promise,\r\n                    attributes = model.attributes;\r\n                if (attributes.extended_data && attributes.extended_data.roles) {\r\n                  // metadata was already set interactively by the user via MetadataView\r\n                  promise = self._moveNodeWithMetadata(attributes, connector,\r\n                      targetFolder.get('id'), applyProperties);\r\n                } else {\r\n                  promise = self._moveNode(attributes, connector, targetFolder.get('id'),\r\n                      applyProperties);\r\n                }\r\n                promise\r\n                    .done(function () {\r\n                      model.set('count', 1);\r\n                      model.deferred.resolve(model);\r\n                      deferred.resolve(model);\r\n                    })\r\n                    .fail(function (cause) {\r\n                      var errObj = new CommandError(cause);\r\n                      model.deferred.reject(model, errObj);\r\n                      deferred.reject(errObj);\r\n                    });\r\n                return deferred.promise();\r\n              }\r\n            });\r\n            return deferred.promise(promises);      // return promises\r\n          });\r\n\r\n      GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n        oneFileTitle: lang.MovingOneItem,\r\n        oneFileSuccess: lang.MoveOneItemSuccessMessage,\r\n        multiFileSuccess: lang.MoveManyItemsSuccessMessage,\r\n        oneFilePending: lang.MovingOneItem,\r\n        multiFilePending: lang.MovingItems,\r\n        oneFileFailure: lang.MoveOneItemFailMessage,\r\n        multiFileFailure: lang.MoveManyItemsFailMessage2,\r\n        someFileSuccess: lang.MoveSomeItemsSuccessMessage,\r\n        someFilePending: lang.MovingSomeItems,\r\n        someFileFailure: lang.MoveSomeItemsFailMessage2,\r\n        enableCancel: false\r\n      });\r\n      return $.whenAll.apply($, promises);\r\n    },\r\n\r\n    _moveNodeWithMetadata: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n      var bodyParam;\r\n      var moveOptions;\r\n\r\n      bodyParam = {\r\n        \"parent_id\": targetFolderID,\r\n        \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n        \"roles\": instruction.extended_data.roles\r\n      };\r\n      moveOptions = connector.extendAjaxOptions({\r\n        url: Url.combine(connector.connection.url.replace('/v1', '/v2'), '/nodes/', instruction.id),\r\n        method: 'PUT',\r\n        data: connector.formatAjaxData(bodyParam),\r\n        contentType: connector.getAjaxContentType()\r\n      });\r\n\r\n      return $.ajax(moveOptions);\r\n    },\r\n\r\n    _moveNode: function (instruction, connector, targetFolderID, applyProperties) {\r\n      var self = this;\r\n\r\n      return this._getCategories(connector, instruction.id, targetFolderID)\r\n          .then(function (categories) {\r\n            var categoryGroupMapping;\r\n            var bodyParam;\r\n            var moveOptions;\r\n\r\n            categoryGroupMapping = {};\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.KEEP_ORIGINAL_PROPERTIES] = 'original';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.APPLY_DESTINATION_PROPERTIES] = 'destination';\r\n            categoryGroupMapping[ApplyPropertiesSelectorView.COMBINE_ALL_PROPERTIES] = 'merged';\r\n\r\n            bodyParam = {\r\n              \"parent_id\": targetFolderID,\r\n              \"name\": instruction.newName ? instruction.newName : instruction.name,\r\n              \"roles\": {\r\n                \"categories\": categories[categoryGroupMapping[applyProperties]]\r\n              }\r\n            };\r\n            moveOptions = connector.extendAjaxOptions({\r\n              url: Url.combine(connector.connection.url.replace('/v1', '/v2'), '/nodes/',\r\n                  instruction.id),\r\n              method: 'PUT',\r\n              data: connector.formatAjaxData(bodyParam),\r\n              contentType: connector.getAjaxContentType()\r\n            });\r\n\r\n            return $.ajax(moveOptions);\r\n          });\r\n    },\r\n\r\n    _getCategories: function (connector, nodeID, targetFolderID) {\r\n      var getCategoriesOptions = connector.extendAjaxOptions({\r\n        url: connector.connection.url + '/forms/nodes/move?' +\r\n             $.param({\r\n               id: nodeID,\r\n               parent_id: targetFolderID\r\n             })\r\n      });\r\n\r\n      return $.ajax(getCategoriesOptions)\r\n          .then(function (response, statusText, jqxhr) {\r\n            var form = response.forms[1];\r\n            return form && form.data || {};\r\n          });\r\n    }\r\n  });\r\n\r\n  return MoveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/navigate',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command',\r\n  'csui/models/node/node.model'\r\n], function (module, _, $, log, base, CommandHelper, CommandModel, NodeModel) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    openInNewTab: true\r\n  }, module.config());\r\n\r\n  var NavigateCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Navigate'\r\n    },\r\n\r\n    // As long as you can see the URL object, you can navigate to the target\r\n    // URL stored on it.\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 140;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return this._navigateTo(node, options);\r\n    },\r\n\r\n    _navigateTo: function (node, options) {\r\n      var url         = node.get('url'),\r\n          absoluteUrl = node.get('absoluteUrl'),\r\n          promise     = $.Deferred(),\r\n          content;\r\n\r\n      function finish() {\r\n        content || (content = window);\r\n        if (!!absoluteUrl) {\r\n          content.location.href = absoluteUrl;\r\n        } else {\r\n          // Add default protocol 'http://' if the url does not contain any.\r\n          content.location.href = url.match(/^[a-zA-Z]+:\\/\\//) ?\r\n                                  url : 'http://' + url;\r\n        }\r\n        content.focus();\r\n        promise.resolve();\r\n      }\r\n\r\n      if (config.openInNewTab) {\r\n        content = window.open('', '_blank');\r\n      }\r\n      if (url) {\r\n        finish();\r\n      } else {\r\n        // The node model does not contain the URL information; not every\r\n        // REST API call may return it, unfortunately.\r\n        node = new NodeModel({id: node.get('id')},\r\n            {connector: node.connector});\r\n        node.fetch()\r\n            .done(function () {\r\n              url = node.get('url');\r\n              finish();\r\n            })\r\n            .fail(function (request) {\r\n              if (content) {\r\n                content.close();\r\n              }\r\n              promise.reject(new base.Error(request));\r\n            });\r\n      }\r\n      return promise.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return NavigateCommand;\r\n});\r\n\n","\n","csui.define('csui/utils/commands/open.plugins/open.plugins',[\r\n  'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/models/mixins/rules.matching/rules.matching.mixin',\r\n  // Load and register external document opening plugin rules\r\n  'csui-ext!csui/utils/commands/open.plugins/open.plugins'\r\n], function (_, Backbone, RulesMatchingMixin, rules) {\r\n  'use strict';\r\n\r\n  var OpenPluginModel = Backbone.Model.extend({\r\n    defaults: {\r\n      sequence: 100,\r\n      plugin: null\r\n    },\r\n\r\n    constructor: function OpenPluginModel(attributes, options) {\r\n      Backbone.Model.prototype.constructor.apply(this, arguments);\r\n      this.makeRulesMatching(options);\r\n    }\r\n  });\r\n\r\n  RulesMatchingMixin.mixin(OpenPluginModel.prototype);\r\n\r\n  var OpenPluginCollection = Backbone.Collection.extend({\r\n    model: OpenPluginModel,\r\n    comparator: 'sequence',\r\n\r\n    constructor: function OpenPluginCollection(models, options) {\r\n      Backbone.Collection.prototype.constructor.call(this, models, options);\r\n    },\r\n\r\n    findByNode: function (node, options) {\r\n      var openInNewTab, widgetOnly;\r\n      if (options) {\r\n        openInNewTab = options.openInNewTab;\r\n        widgetOnly = options.widgetOnly;\r\n      }\r\n      var rule = this.find(function (item) {\r\n        var plugin = item.get('plugin');\r\n        // Plugins opening a full page can be used in both\r\n        // the current and a new windows, unless a widget\r\n        // was requested.\r\n        return (widgetOnly !== true &&\r\n                (plugin.openWindow || plugin.getUrl ||\r\n                plugin.getUrlQuery) ||\r\n                // Plugins supporting only a widget mode can be\r\n                // opened in the current window only (for now).\r\n                widgetOnly !== false && openInNewTab !== true &&\r\n                (plugin.openWidget || plugin.createWidget)\r\n               ) && item.matchRules(node, item.attributes);\r\n      });\r\n      return rule && rule.get('plugin');\r\n    }\r\n  });\r\n\r\n  var openPlugins = new OpenPluginCollection();\r\n\r\n  if (rules) {\r\n    openPlugins.add(_.chain(rules)\r\n                     .flatten(true)\r\n                     .map(function (rule) {\r\n                       return _.defaults({\r\n                         plugin: new rule.plugin()\r\n                       }, rule);\r\n                     })\r\n                     .value());\r\n  }\r\n\r\n  return openPlugins;\r\n});\r\n\n","csui.define('csui/utils/commands/open',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/utils/url', 'csui/utils/commandhelper', 'csui/utils/commands/download',\r\n  'csui/utils/commands/open.plugins/open.plugins'\r\n], function (module, require, _, $, Url, CommandHelper, DownloadCommand, openPlugins) {\r\n  'use strict';\r\n\r\n  var config = _.extend({\r\n    // If overridden, true will always open a new window,\r\n    // false will always use the current window.\r\n    openInNewTab: null,\r\n\r\n    // If overridden, true will always download the document;\r\n    // opening it in the viewer or natively will not be offered.\r\n    forceDownload: false\r\n  }, module.config());\r\n\r\n  var openAuthenticatedPage;\r\n\r\n  var OpenCommand = DownloadCommand.extend({\r\n    defaults: {\r\n      signature: 'Open',\r\n      // Open has a different UI behaviour than download, but both are about\r\n      // the content access, which decide the permission.  There is no\r\n      // 'open-document' action anyway in the current REST API response.\r\n      // FIXME: As soon as the server returns permitted actions consistently\r\n      // from all calls, delete the enabled() method here and the two\r\n      // command keys 'default', 'open'.  Use the 'download', 'Download'.\r\n      command_key: ['default', 'open', 'download', 'Download'],\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!DownloadCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      // FIXME: If you find this too limiting and not extensible, fix the\r\n      // FIXME above.  Do not introduce an extension point for this.\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // TODO: Move E-mail and Drawing to their modules\r\n      return _.contains([144, 749, 736], node.get('type'));\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      // Apply the open commands always to the shortcut or generation\r\n      // target; the original node reference must be expanded.\r\n      if (node.original && node.original.get('id') > 0) {\r\n        var type = node.get('type');\r\n        if (type === 1) {\r\n          node = node.original;\r\n        } else if (type === 2) {\r\n          // Do not switch to original for generations. The /content REST\r\n          // call supports the generation node_id. Just make the generation\r\n          // node carry all properties, which the document command needs\r\n          // to the generation look like a real document node.\r\n          node.set({mime_type: node.original.get('mime_type')}, {silent: true});\r\n        }\r\n      }\r\n      return this._openContent(node, options);\r\n    },\r\n\r\n    _openContent: function (node, options) {\r\n      if (config.forceDownload) {\r\n        return this._downloadContent(node, options, 'download');\r\n      }\r\n      var plugin = openPlugins.findByNode(node, {\r\n            openInNewTab: config.openInNewTab\r\n          });\r\n      if (plugin) {\r\n        if (config.openInNewTab) {\r\n          return this._openWindow(plugin, node, window.open(''), options);\r\n        }\r\n        if (plugin.widgetView) {\r\n          return this._openWidget(plugin.widgetView, node, options);\r\n        }\r\n        var content = config.openInNewTab === false ?\r\n                      window : window.open('');\r\n        return this._openWindow(plugin, node, content, options);\r\n      }\r\n      return this._downloadContent(node, options, 'download');\r\n    },\r\n\r\n    _openWidget: function (view, node, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/utils/commands/impl/full.page.modal/full.page.modal.view',\r\n        view\r\n      ], function (FullPageModal, ViewerView) {\r\n        var viewerView = new ViewerView({\r\n              context: options.context,\r\n              model: node\r\n            }),\r\n            fullPageModal = new FullPageModal({\r\n              view: viewerView\r\n            });\r\n        fullPageModal.on('destroy', function () {\r\n                       deferred.resolve();\r\n                     })\r\n                     .show();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openWindow: function (plugin, node, content, options) {\r\n      var deferred = $.Deferred();\r\n      var self = this;\r\n      require([\r\n        'csui/utils/open.authenticated.page'\r\n      ], function () {\r\n        openAuthenticatedPage = arguments[0];\r\n        // Prefer the full-URL-retrieving method, then try\r\n        // the URL-query-only-retrieving method\r\n        var promise = plugin.getUrl && plugin.getUrl(node) ||\r\n                      plugin.getUrlQuery(node);\r\n        promise.then(function (url) {\r\n          return self._openURL(plugin, node, content, url, options);\r\n        }, function (error) {\r\n          if (content !== window) {\r\n            content.close();\r\n          }\r\n          deferred.reject(error);\r\n          return $.Deferred().reject();\r\n        })\r\n        .then(function () {\r\n          content.focus();\r\n          deferred.resolve();\r\n        });\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _openURL: function (plugin, node, content, url, options) {\r\n      var connector = node.connector || options.connector;\r\n      // If the URL-query-only-retrieving method was used,\r\n      // prepend the CGI URL base to complete the URL\r\n      if (!plugin.getUrl) {\r\n        url = Url.appendQuery(\r\n            new Url(connector.connection.url).getCgiScript(),\r\n            Url.combineQueryString(url));\r\n      }\r\n      if (plugin.needsAuthentication && plugin.needsAuthentication(node)) {\r\n        return openAuthenticatedPage(connector, url, {\r\n          window: content,\r\n          openInNewTab: config.openInNewTab\r\n        });\r\n      }\r\n      content.location.href = url;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n  });\r\n\r\n  return OpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.discussion',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenDiscussionCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenDiscussion'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 215;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenDiscussionCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.form',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenFormCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForm'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 223;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'EditForm',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFormCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.milestone',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenMilestoneCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMilestone'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 212;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseMilestone',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenMilestoneCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.channel',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenChannelCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenChannel'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 207;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewChannel',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenChannelCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.news',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenNewsCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenNews'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 208;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ViewNews',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenNewsCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/open.poll',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenPollCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenPoll'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 218;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'OpenPoll',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenPollCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.prospector',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenProspectorCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenProspector'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 384;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'ProspectorBrowse',\r\n        objId: node.get('id'),\r\n        order: '-SCORE',\r\n        summaries: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenProspectorCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.classic.page',[\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/classic.nodes/classic.nodes'\r\n], function (OpenClassicPageCommand, CommandHelper, classicNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificClassicPageCommand = OpenClassicPageCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificClassicPage'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      if (node) {\r\n        return classicNodes.isSupported(node);\r\n      }\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      return classicNodes.getUrl(node);\r\n    }\r\n  });\r\n\r\n  return OpenSpecificClassicPageCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.specific.node.perspective',[\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/smart.nodes/smart.nodes'\r\n], function (OpenNodePerspectiveCommand, CommandHelper, smartNodes) {\r\n  'use strict';\r\n\r\n  var OpenSpecificNodePerspectiveCommand = OpenNodePerspectiveCommand.extend({\r\n    defaults: {\r\n      signature: 'OpenSpecificNodePerspective'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      if (node) {\r\n        return smartNodes.isSupported(node);\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenSpecificNodePerspectiveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/open.task',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTask'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 206;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTask',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.taskgroup',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskGroupCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskGroup'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 205;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskGroup',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskGroupCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.tasklist',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTaskListCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTaskList'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 204;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'BrowseTaskList',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTaskListCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/open.topic',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var OpenTopicCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenTopic'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 130 || type === 134;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'view',\r\n        objId: node.get('id'),\r\n        show: 1,\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenTopicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PermissionsCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'permissions',\r\n      command_key: ['permissions', 'Permissions'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self               = this,\r\n          deferred           = $.Deferred(),\r\n          selected           = status.nodes,\r\n          container          = status.container,\r\n          navigationView     = true, nodes,\r\n          metadatanavigation = !!status.originatingView ? status.originatingView.$el.closest(\r\n              '.cs-metadata-navigation-wrapper') : [];\r\n\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n        selected = selected.first();\r\n      }\r\n      if (metadatanavigation.length > 0) {\r\n        metadatanavigation.addClass(\"cs-metadata-no-bg-color\");\r\n      }\r\n      var context = status.context || options && options.context;\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/widgets/permissions/permissions.view', this.get('commands')\r\n      ], function (PermissioNavigationWidget, MetadataView, DialogView, PermissionsView, commands) {\r\n\r\n        var permissionsView, nodeId = selected.get('id'),\r\n            showInDialogView = status.data && !!status.data.dialogView;\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          // bring back shortcut Node and maintain in slected node  if at all node has any..\r\n          !!status.originatingView.mdv && status.originatingView.mdv.model.get('shortcutNode') ?\r\n          selected.attributes.shortcutNode = status.originatingView.mdv.model.get('shortcutNode') :\r\n          selected;\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            containerCollection: status.collection,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? false : true,\r\n            activeTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                       status.originatingView.mdv.metadataTabView.options.activeTab,\r\n            selectedTab: status.originatingView.mdv && status.originatingView.mdv.metadataTabView &&\r\n                         status.originatingView.mdv.metadataTabView.tabLinks.selected,\r\n            showPermissionView: true\r\n          });\r\n        }\r\n        else if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            permissionsView = new PermissioNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              isExpandedView: status.originatingView && !!status.originatingView.options.isExpandedView,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n          } else {\r\n            if (status.originatingView &&\r\n                status.originatingView.supportOriginatingView === undefined) {\r\n              status.originatingView.supportOriginatingView = true;\r\n            }\r\n            permissionsView = new MetadataView({\r\n              model: selected,\r\n              originatingView: status.originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: status.originatingView ? false : true,\r\n              showBackIcon: status.originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              showPermissionView: true\r\n            });\r\n          }\r\n        } else {\r\n          if (status.originatingView &&\r\n              status.originatingView.supportOriginatingView === undefined) {\r\n            status.originatingView.supportOriginatingView = true;\r\n          }\r\n          permissionsView = new MetadataView({\r\n            model: selected,\r\n            originatingView: status.originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: status.originatingView ? false : true,\r\n            showBackIcon: status.originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            showPermissionView: true\r\n          });\r\n        }\r\n        //Replace metadata content view with permissions widget\r\n        if (status.originatingView instanceof PermissioNavigationWidget) {\r\n          if (status.originatingView.mdv && status.originatingView.mdv.metadataTabView) {\r\n            status.originatingView.mdv.destroy();\r\n            status.originatingView.showPermissionView = true;\r\n            permissionsView.render();\r\n            Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n            status.originatingView.$el.find(\".metadata-content\").append(permissionsView.el);\r\n          }\r\n        }// replace the originatingView with sliding left/right animation\r\n        else if (status.originatingView && !showInDialogView) {\r\n\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = status.originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-permissions-wrapper'></div>\");\r\n          $csProperties = $($originatingView.parent().find('.cs-permissions-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          permissionsView.render();\r\n          //permissionsView.blockActions();\r\n          Marionette.triggerMethodOn(permissionsView, 'before:show');\r\n          $csProperties.append(permissionsView.el);\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      Marionette.triggerMethodOn(permissionsView, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            status.originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            if (metadatanavigation.length > 0) {\r\n              metadatanavigation.removeClass(\"cs-metadata-no-bg-color\");\r\n            }\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                $originatingView.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        status.originatingView.triggerMethod('dom:refresh');\r\n                        status.originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                      }\r\n                    },\r\n                    100);\r\n                permissionsView.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(permissionsView, 'metadata:close',\r\n              _.bind(_showOriginatingView, self));\r\n          self.listenTo(permissionsView, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    status.originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            permissionsView.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show permissionsView View in a modal dialog\r\n          if (permissionsView.metadataTabView) {\r\n            // edit permission popover should be in dialog element\r\n            // not on body , else we loose focus on first element of popover\r\n            permissionsView.metadataTabView.options.isExpandedView = true;\r\n          }\r\n          self.dialog = new DialogView({\r\n            className: 'cs-permissions',\r\n            largeSize: true,\r\n            view: permissionsView\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(permissionsView, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n          self.dialog.listenTo(permissionsView, 'metadata:close:without:animation',\r\n              function () {\r\n                self.dialog.destroy();\r\n                deferred.resolve();\r\n              });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n    }\r\n  });\r\n  return PermissionsCommand;\r\n});\n","csui.define('csui/utils/commands/properties',['module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/command.error', 'csui/utils/commandhelper',\r\n  'csui/models/command', 'csui/models/nodes'\r\n], function (module, require, _, $, Backbone, Marionette,\r\n    CommandError, CommandHelper, CommandModel, NodeCollection) {\r\n  'use strict';\r\n\r\n  var PropertiesCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Properties',\r\n      command_key: ['properties', 'Properties'],\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands'\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var selected = status.nodes;\r\n      var container = status.container;\r\n      var navigationView = true;\r\n      var nodes;\r\n      if (selected && selected.first() === container) {\r\n        // The container properties were requested for the container\r\n        selected = container;\r\n        navigationView = false;\r\n      } else {\r\n        nodes = this._getAtLeastOneNode(status);\r\n      }\r\n      var context = status.context || (options && options.context);\r\n      var originatingView = status.originatingView || (options && options.originatingView);\r\n\r\n      require(['csui/widgets/metadata/impl/metadatanavigation/metadatanavigation.view',\r\n        'csui/widgets/metadata/metadata.view', 'csui/controls/dialog/dialog.view',\r\n        'csui/models/nodeversions', this.get('commands')\r\n      ], function (MetadataNavigationWidget, MetadataView, DialogView,\r\n          NodeVersionCollection, commands) {\r\n\r\n        var metadata, showInDialogView = status.data && !!status.data.dialogView;\r\n        if (navigationView) {\r\n          if (status.collection && status.collection.models &&\r\n              status.collection.models.length > 0) {\r\n            metadata = new MetadataNavigationWidget({\r\n              container: container,\r\n              containerCollection: status.collection,  // this is the full collection\r\n              collection: nodes,  // as UX design, this collection can be a subset\r\n              selected: selected,\r\n              originatingView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              nameAttribute: options ? options.nameAttribute : undefined,\r\n              showCloseIcon: originatingView ? false : true,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty,\r\n              showThumbnails: status.showThumbnails\r\n            });\r\n          } else {\r\n            if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n              originatingView.supportOriginatingView = true;\r\n            }\r\n            metadata = new MetadataView({\r\n              model: selected.get(\"id\") ? selected : selected.models[0],\r\n              originatingView: originatingView,\r\n              context: context,\r\n              commands: commands,\r\n              showCloseIcon: originatingView ? false : true,\r\n              showBackIcon: originatingView ? true : false,\r\n              selectedTab: status.selectedTab,\r\n              selectedProperty: status.selectedProperty\r\n            });\r\n          }\r\n        } else {\r\n          if (originatingView && originatingView.supportOriginatingView === undefined) {\r\n            originatingView.supportOriginatingView = true;\r\n          }\r\n          metadata = new MetadataView({\r\n            model: selected,\r\n            originatingView: originatingView,\r\n            context: context,\r\n            commands: commands,\r\n            showCloseIcon: originatingView ? false : true,\r\n            showBackIcon: originatingView ? true : false,\r\n            selectedTab: status.selectedTab,\r\n            selectedProperty: status.selectedProperty\r\n          });\r\n        }\r\n\r\n        if (originatingView instanceof MetadataNavigationWidget &&\r\n            !(status.collection instanceof NodeVersionCollection)) {\r\n          if (originatingView.mdv && originatingView.mdv.metadataTabView) {\r\n            metadata = null;\r\n            originatingView.showPermissionView = false;\r\n            originatingView._showNode(selected.get(\"id\") ? selected : selected.models[0]);\r\n          }\r\n        } // replace the originatingView with sliding left/right animation\r\n        else if (originatingView && !showInDialogView) {\r\n          originatingView.triggerMethod('metadata:created', metadata);\r\n          var _showOriginatingView, $csProperties;\r\n          var $originatingView = originatingView.$el;\r\n          var ntWidthVal = $originatingView.width();\r\n          var ntWidth = ntWidthVal + 'px';\r\n\r\n          $originatingView.parent().append(\"<div class='cs-properties-wrapper'></div>\");\r\n          $originatingView.parent().addClass('csui-node-properties-wrapper');\r\n          $csProperties = $($originatingView.parent().find('.cs-properties-wrapper')[0]);\r\n          $csProperties.hide();\r\n\r\n          metadata.render();\r\n          Marionette.triggerMethodOn(metadata, 'before:show');\r\n          $csProperties.append(metadata.el);\r\n\r\n          $originatingView.hide('blind', {\r\n            direction: 'left',\r\n            complete: function () {\r\n              $csProperties.show('blind',\r\n                  {\r\n                    direction: 'right',\r\n                    complete: function () {\r\n                      Marionette.triggerMethodOn(metadata, 'show');\r\n                    }\r\n                  },\r\n                  100);\r\n            }\r\n          }, 100);\r\n\r\n          $originatingView.promise().done(function () {\r\n            originatingView.isDisplayed = false;\r\n          });\r\n\r\n          _showOriginatingView = function () {\r\n            $csProperties.hide('blind', {\r\n              direction: 'right',\r\n              complete: function () {\r\n                $originatingView.show('blind',\r\n                    {\r\n                      direction: 'left',\r\n                      complete: function () {\r\n                        originatingView.triggerMethod('dom:refresh');\r\n                        originatingView.isDisplayed = true;\r\n                        //reset required switch to default.\r\n                        !!status.collection && (status.collection.requireSwitched = false);\r\n                        // Trigger an event to let originating view aware of closing properties view and going back to it.\r\n                        // Hence originatingView can handle it and do necessary actions (if any).\r\n                        // For ex: Coming to properties page from Wiki, delete latest version, and going back,\r\n                        // should fetch & update WIKI page with latest available version.\r\n                        originatingView.trigger('properties:view:destroyed');\r\n                      }\r\n                    },\r\n                    100);\r\n                $originatingView.parent().removeClass('csui-node-properties-wrapper');\r\n                metadata.destroy();\r\n                $csProperties.remove();\r\n                deferred.resolve();\r\n              }\r\n            }, 100);\r\n          };\r\n\r\n          self.listenTo(metadata, 'metadata:close', _.bind(_showOriginatingView, self));\r\n          self.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            $originatingView.show('blind',\r\n                {\r\n                  direction: 'left',\r\n                  complete: function () {\r\n                    originatingView.triggerMethod('dom:refresh');\r\n\r\n                    //reset required switch to default.\r\n                    !!status.collection && (status.collection.requireSwitched = false);\r\n                  }\r\n                },\r\n                100);\r\n            metadata.destroy();\r\n            $csProperties.remove();\r\n            deferred.resolve();\r\n          });\r\n\r\n        } else {  // show Metadata View in a modal dialog\r\n\r\n          self.dialog = new DialogView({\r\n            className: 'cs-properties',\r\n            largeSize: true,\r\n            view: metadata\r\n          });\r\n\r\n          self.dialog.show();\r\n\r\n          // UX specs does not have header bar\r\n          self.dialog.ui.header.hide();\r\n          self.dialog.listenTo(metadata, 'metadata:close', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n\r\n          self.dialog.listenTo(metadata, 'metadata:close:without:animation', function () {\r\n            self.dialog.destroy();\r\n            deferred.resolve();\r\n          });\r\n\r\n        }\r\n\r\n      }, function (error) {\r\n        deferred.reject(new CommandError(error));\r\n      });\r\n\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getAtLeastOneNode: function (status) {\r\n      if (!status.nodes) {\r\n        return new NodeCollection();\r\n      }\r\n\r\n      if (status.nodes.length === 1 && status.collection) {\r\n        return status.collection;\r\n      } else {\r\n        return status.nodes;\r\n      }\r\n\r\n    }\r\n\r\n  });\r\n\r\n  return PropertiesCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename',['csui/models/command', 'csui/utils/commandhelper'\r\n], function (CommandModel, CommandHelper) {\r\n\r\n  var RenameCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'Rename',\r\n      command_key: ['rename', 'Rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    // returns promise of node.sync\r\n    rename: function (node, name) {\r\n      return node\r\n          .save({name: name}, {\r\n            wait: true,\r\n            patch: true\r\n          });\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      throw new Error('The \\'Rename\\' action must be handled by the caller.');\r\n    }\r\n\r\n  });\r\n\r\n  return RenameCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/rename.favorite',[\"require\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  \"csui/models/command\", \"csui/utils/commandhelper\"\r\n], function (require, _, $, CommandModel, CommandHelper) {\r\n  'use strict';\r\n\r\n  var RenameFavoriteCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"FavoriteRename\",\r\n      // Inline editing may need more permissions than just for renaming;\r\n      // if it was a problem the login would have to be extended.\r\n      command_key: ['favorite_rename'],\r\n      scope: \"single\"\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require(['csui/controls/table/inlineforms/favorite/favorite.view'\r\n      ], function (inlineFormFavoriteView) {\r\n        var node = status.nodes && status.nodes.length === 1 && status.nodes.at(0);\r\n\r\n          node.inlineFormView = inlineFormFavoriteView;\r\n          node.set('csuiInlineFormErrorMessage', 'dummy', {silent: true});\r\n          node.unset('csuiInlineFormErrorMessage');\r\n\r\n        deferred.resolve();\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(RenameFavoriteCommand, {\r\n\r\n    version: \"1.0\"\r\n\r\n  });\r\n\r\n  return RenameFavoriteCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/reserve',[\r\n  \"require\", \"module\", \"csui/lib/underscore\", \"csui/lib/jquery\",\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\"\r\n], function (require, module, _, $,  publicLang, lang, CommandHelper, NodeCommand) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 2\r\n  });\r\n\r\n  var ReserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: \"ReserveDoc\",\r\n      command_key: ['reserve', 'ReserveDoc'],\r\n      name: publicLang.CommandNameReserve,\r\n      verb: lang.CommandVerbReserve,\r\n      pageLeavingWarning: lang.ReservePageLeavingWarning,\r\n      scope: \"multiple\",\r\n      successMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.ReserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.ReserveItemsNoneMessage,\r\n        formatForOne: publicLang.ReserveOneItemFailMessage,\r\n        formatForTwo: publicLang.ReserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.ReserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      var deferred = $.Deferred();\r\n      node.isReservedClicked = true;\r\n      require([\r\n        'csui/utils/contexts/factories/user'\r\n      ], function (UserModelFactory) {\r\n        var user = options.context.getModel(UserModelFactory);\r\n        user.ensureFetched()\r\n            .then(function () {\r\n              return CommandHelper.updateNode(node, {\r\n                reserved_user_id: user.get('id')\r\n              });\r\n            })\r\n            .then(deferred.resolve, deferred.reject);\r\n        }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ReserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/run.livereport',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n\r\n  var RunLiveReportCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'RunLiveReport'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && node.get('type') === 299;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      return {\r\n        func: 'll',\r\n        objAction: 'RunReport',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return RunLiveReportCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/sign.out',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel, CommandHelper, Url, lang) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, PerspectiveRouter;\r\n\r\n  var config = _.extend({\r\n    signInPageUrl: 'signin.html'\r\n  }, module.config());\r\n\r\n  var SignOutCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SignOut',\r\n      name: lang.SignOutCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          self = this;\r\n      require([\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/pages/start/impl/perspective.router'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        PerspectiveRouter = arguments[1];\r\n        self._signOut(context)\r\n            .done(deferred.resolve)\r\n            .fail(deferred.reject);\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _signOut: function (context) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript();\r\n      // Development HTML pages do not use the OTDS login page\r\n      if (PerspectiveRouter.routesWithSlashes()) {\r\n        // Invalidate the authenticated session, get the secure request token\r\n        // for the classic logout page and perform the logout by navigating there\r\n        return $.ajax(connector.extendAjaxOptions({\r\n                  url: Url.combine(cgiUrl, 'api/v1/auth/logouttoken')\r\n                }))\r\n                .then(function (response) {\r\n                  connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n                  location.href = cgiUrl + '?func=csui.dologout&secureRequestToken=' +\r\n                                  encodeURIComponent(response.token);\r\n                });\r\n      }\r\n\r\n      // Invalidate the authenticated session and navigate to the login\r\n      // page; this is used on the development pages\r\n      connector.authenticator.unauthenticate({reason: 'logged-out'});\r\n      var signInPageUrl = config.signInPageUrl,\r\n          query = location.search;\r\n      query += query ? '&' : '?';\r\n      query += 'nextUrl=' + encodeURIComponent(location.pathname);\r\n      location.href = signInPageUrl + query + location.hash;\r\n      return $.Deferred().resolve().promise();\r\n    }\r\n\r\n  });\r\n\r\n  return SignOutCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/switch.to.classic',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (module, require, _, $, CommandModel, CommandHelper,\r\n    Url, lang, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var ConnectorFactory, NodeModelFactory;\r\n\r\n  var config = _.extend({\r\n    enabled: true,\r\n    // Allow defining a value specific for this command\r\n    openInNewTab: null\r\n  }, module.config());\r\n  // If no specific value was set, use the value for all Classic UI pages\r\n  if (config.openInNewTab == null) {\r\n    config.openInNewTab = OpenClassicPageCommand.openInNewTab;\r\n  }\r\n\r\n  var SwitchToClassicCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'SwitchToClassic',\r\n      name: lang.SwitchToClassicCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!config.enabled) {\r\n        return false;\r\n      }\r\n      var context = status.context || options && options.context,\r\n          applicationScope = context.getModel('applicationScope');\r\n      applicationScope = applicationScope && applicationScope.get('id');\r\n      return applicationScope === '' || applicationScope === 'node';\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context,\r\n          target = config.openInNewTab && window.open('', '_blank') || window,\r\n          self = this;\r\n      target.focus();\r\n      require(['csui/utils/contexts/factories/connector',\r\n               'csui/utils/contexts/factories/node'\r\n      ], function () {\r\n        ConnectorFactory = arguments[0];\r\n        NodeModelFactory = arguments[1];\r\n        target.location.href = self._getUrl(context, status);\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getUrl: function (context, status) {\r\n      var connector = context.getObject(ConnectorFactory),\r\n          cgiUrl = new Url(connector.connection.url).getCgiScript(),\r\n          urlQueryParameters = this._getUrlQueryParameters(context, status),\r\n          urlQuery = Url.combineQueryString(urlQueryParameters);\r\n      return Url.appendQuery(cgiUrl, urlQuery);\r\n    },\r\n\r\n    _getUrlQueryParameters: function (context, status) {\r\n      var node = CommandHelper.getJustOneNode(status) ||\r\n                 context.getModel(NodeModelFactory),\r\n          parameters;\r\n      if (node !== undefined && node.get('id') > 0) {\r\n        parameters = {\r\n          func: 'll',\r\n          objId: node.get('id')\r\n        };\r\n        if (node.get('container')) {\r\n          parameters.objAction = 'browse';\r\n          parameters.viewType = 1;\r\n        } else {\r\n          parameters.objAction = 'properties';\r\n        }\r\n      } else {\r\n        parameters = {};\r\n      }\r\n      return parameters;\r\n    }\r\n\r\n  });\r\n\r\n  return SwitchToClassicCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/unreserve',[\r\n  'i18n!csui/utils/commands/nls/lang',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/node'\r\n], function (publicLang, lang, CommandHelper, NodeCommand) {\r\n  'use strict';\r\n\r\n  var UnreserveCommand = NodeCommand.extend({\r\n    defaults: {\r\n      signature: 'UnreserveDoc',\r\n      command_key: ['unreserve', 'UnreserveDoc'],\r\n      name: publicLang.CommandNameUnreserve,\r\n      verb: lang.CommandVerbUnreserve,\r\n      pageLeavingWarning: lang.UnreservePageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemSuccessMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsSuccessMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: publicLang.UnreserveItemsNoneMessage,\r\n        formatForOne: publicLang.UnreserveOneItemFailMessage,\r\n        formatForTwo: publicLang.UnreserveSomeItemsFailMessage,\r\n        formatForFive: publicLang.UnreserveManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    _performAction: function (node, options) {\r\n      node.isUnreservedClicked = true;\r\n      return CommandHelper.updateNode(node, {\r\n        reserved_user_id: null\r\n      });\r\n    }\r\n  });\r\n\r\n  return UnreserveCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/user.profile',[\r\n  'require', 'csui/lib/jquery', 'csui/models/command', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (require, $, CommandModel, base, lang) {\r\n  'use strict';\r\n\r\n  var UserProfileCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'UserProfile',\r\n      name: lang.UserProfileCommandName\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var toolItem = status.toolItem || options && options.toolItem;\r\n      if (toolItem) {\r\n        var context = status.context || options && options.context,\r\n            user = context.getModel('user'),\r\n            name = base.formatMemberName(user);\r\n        toolItem.set('name', name);\r\n      }\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          context = status.context || options && options.context;\r\n      require([\r\n        'csui/utils/contexts/factories/user',\r\n        'esoc/controls/userwidget/userwidget.view'\r\n      ], function (UserModelFactory, UserWidgetView) {\r\n        var user = context.getModel(UserModelFactory),\r\n            userId = user.get('id'),\r\n            userWidgetView = new UserWidgetView({\r\n              model: user,\r\n              connector: user.connector,\r\n              userid: userId,\r\n              context: context,\r\n              baseElement: undefined,\r\n              showUserProfileLink: true,\r\n              showMiniProfile: false,\r\n              loggedUserId: userId\r\n            });\r\n        userWidgetView.showUserProfileDialog();\r\n        deferred.resolve();\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n\r\n  });\r\n\r\n  return UserProfileCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/delete',[\r\n  'require', 'module', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/versions/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/delete',\r\n], function (require, module, _, $, versionLang, CommandHelper, DeleteCommand) {\r\n  'use strict';\r\n\r\n  var VersionDeleteCommand = DeleteCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionDelete',\r\n      command_key: ['versions_delete'],\r\n      name: versionLang.CommandNameVersionDelete,\r\n      verb: versionLang.CommandVerbVersionDelete,\r\n      pageLeavingWarning: versionLang.DeleteVersionPageLeavingWarning,\r\n      scope: 'multiple',\r\n      successMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemSuccessMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsSuccessMessage\r\n      },\r\n      errorMessages: {\r\n        formatForNone: versionLang.DeleteVersionItemsNoneMessage,\r\n        formatForOne: versionLang.DeleteVersionOneItemFailMessage,\r\n        formatForTwo: versionLang.DeleteVersionSomeItemsFailMessage,\r\n        formatForFive: versionLang.DeleteVersionManyItemsFailMessage\r\n      }\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      if (!VersionDeleteCommand.__super__.enabled.apply(this, arguments)) {\r\n        return false;\r\n      }\r\n      var selectedVersions = CommandHelper.getAtLeastOneNode(status);\r\n      return selectedVersions.length > 0 &&\r\n             status.container && status.container.versions && status.container.versions.allModels &&\r\n             selectedVersions.length < status.container.versions.allModels.length;\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var versions = CommandHelper.getAtLeastOneNode(status);\r\n      status.originatingView.blockActions = false;\r\n      return {\r\n        title: versionLang.DeleteCommandConfirmDialogTitle,\r\n        message: versions.length === 1 ?\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogSingleMessage,\r\n                     versions.at(0).get('version_number_name'),\r\n                     status.container.get('name')) :\r\n                 _.str.sformat(versionLang.VersionDeleteCommandConfirmDialogMultipleMessage,\r\n                     versions.length)\r\n      };\r\n    },\r\n\r\n    startGlobalMessage: function (uploadCollection) {\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        GlobalMessage.showFileUploadProgress(uploadCollection, {\r\n          oneFileTitle: versionLang.DeletingOneVersion,\r\n          oneFileSuccess: versionLang.DeleteVersionOneItemSuccessMessage,\r\n          multiFileSuccess: versionLang.DeleteVersionManyItemsSuccessMessage,\r\n          oneFilePending: versionLang.DeletingOneVersion,\r\n          multiFilePending: versionLang.DeleteVersions,\r\n          oneFileFailure: versionLang.DeleteVersionOneItemFailMessage,\r\n          multiFileFailure: versionLang.DeleteVersionManyItemsFailMessage2,\r\n          someFileSuccess: versionLang.DeleteVersionSomeItemsSuccessMessage,\r\n          someFilePending: versionLang.DeletingSomeVersions,\r\n          someFileFailure: versionLang.DeleteVersionSomeItemsFailMessage2,\r\n          enableCancel: false\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  return VersionDeleteCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/download',['csui/utils/commands/download', 'csui/utils/url',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (DownloadCommand, Url, lang) {\r\n  'use strict';\r\n\r\n  var VersionDownloadCommand = DownloadCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionDownload',\r\n      command_key: ['versions_download'],\r\n      name: lang.CommandNameDownload,\r\n      verb: lang.CommandVerbDownload,\r\n      doneVerb: lang.CommandDoneVerbDownload,\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n\r\n  });\r\n\r\n  return VersionDownloadCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/versions/open',['csui/utils/commands/open','csui/utils/url'], function (OpenCommand, Url) {\r\n  'use strict';\r\n\r\n  // Support for both node and version models is provided\r\n  // by the open command plugins themselves\r\n  var VersionOpenCommand = OpenCommand.extend({\r\n    defaults: {\r\n      signature: 'VersionOpen',\r\n      command_key: ['versions_open'],\r\n      scope: 'single'\r\n    },\r\n\r\n    _getContentUrl: function (node, options, action, token) {\r\n      var url = Url.combine(node.connector.connection.url, \"nodes\",\r\n          node.get('id'), \"versions\", node.get('version_number'), \"content\");\r\n      return url + \"?action=\" + action + \"&token=\" + encodeURIComponent(token);\r\n    }\r\n  });\r\n\r\n  return VersionOpenCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/versions/properties',['csui/utils/commands/properties', 'csui/models/version'\r\n], function (PropertiesCommand, VersionModel) {\r\n  'use strict';\r\n\r\n  var VersionPropertiesCommand = PropertiesCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'VersionProperties',\r\n      command_key: 'versions_properties',\r\n      scope: 'multiple',\r\n      commands: 'csui/utils/commands/versions'\r\n    },\r\n    \r\n    _getAtLeastOneNode: function (status) {\r\n      // for metadata version, use the collection passed in\r\n      if (status.collection && status.nodes.length === 1) {\r\n        return status.collection;\r\n      }\r\n      return status.nodes;\r\n    }\r\n\r\n  });\r\n\r\n  return VersionPropertiesCommand;\r\n\r\n});\r\n\n","\n","csui.define('csui/utils/commands/versions',['csui/lib/underscore', 'csui/models/commands',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  // Load extra commands to be added to the common collection\r\n  'csui-ext!csui/utils/commands/versions'\r\n], function (_, CommandCollection,\r\n    VersionDeleteCommand,\r\n    VersionDownloadCommand,\r\n    VersionOpenCommand,\r\n    VersionPropertiesCommand,\r\n    extraCommands) {\r\n  'use strict';\r\n  \r\n  var commands = new CommandCollection([\r\n    new VersionDeleteCommand(),\r\n    new VersionDownloadCommand(),\r\n    new VersionOpenCommand(),\r\n    new VersionPropertiesCommand()\r\n  ]);\r\n  \r\n  if (extraCommands) {\r\n    commands.add(\r\n        _.chain(extraCommands)\r\n            .flatten(true)\r\n            .map(function (Command) {\r\n              return new Command();\r\n            })\r\n            .value()\r\n    );\r\n  }\r\n\r\n  return commands;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/filter',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/log',\r\n  'csui/utils/base', 'csui/utils/commandhelper', 'csui/models/command'\r\n], function (module, _, $, log, base, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var FilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'Filter'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var config = module.config();\r\n      if (config.enabled === false) {\r\n        return false;\r\n      }\r\n      // Fix me: obtain these details from REST API, results.data.columns\r\n      var isContainer = status.container && !!status.container.get('container');\r\n      return !!isContainer && this._isSupported(status.container);\r\n    },\r\n\r\n    _isSupported: function (container) {\r\n      // TODO: Make this extensible. not supported for Compound Document and Collection.\r\n      var notSupportedObjects = [136, 298],\r\n          support             = $.inArray(container.get('type'), notSupportedObjects) === -1;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      throw new Error('The \\'Filter\\' action must be handled by the caller.');\r\n    }\r\n  });\r\n\r\n  return FilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/description.toggle',[\"require\", 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  \"i18n!csui/utils/commands/nls/localized.strings\",\r\n  \"csui/utils/commandhelper\", \"csui/utils/commands/node\",\r\n  'csui/utils/command.error'\r\n], function (require, $, base, _, lang, CommandHelper, NodeCommand, CommandError) {\r\n  'use strict';\r\n\r\n  var accessibleTable = /\\baccessibleTable\\b(?:=([^&]*)?)?/i.exec(location.search);\r\n  accessibleTable = accessibleTable && accessibleTable[1] !== 'false';\r\n\r\n  var DescriptionToggleCommand = NodeCommand.extend({\r\n\r\n    defaults: {\r\n      signature: \"ToggleDescription\",\r\n      command_key: ['description', 'description'],\r\n      scope: \"single\",\r\n      name: lang.CommandDescriptionToggle\r\n    },\r\n\r\n    //only one node allowed at a time\r\n    enabled: function (status, options) {\r\n      if (!accessibleTable && status.collection && !status.thumbnailViewState) {\r\n        if (status.originatingView && status.originatingView.options.showDescriptions) {\r\n          status.toolItem.attributes.icon = \"icon icon-description-toggle icon-description-shown\";\r\n          status.toolItem.attributes.name = lang.CommandHideDescription;\r\n        }\r\n        var nodeWithDescription = status.collection.find(function (node) {\r\n          var descr = node.get('description');\r\n          return !!descr;\r\n        });\r\n        return nodeWithDescription !== undefined;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var originatingView = status.originatingView;\r\n      var langStr;\r\n      var menuSelector = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"toggledescription\"] a';\r\n      if (originatingView.options.showDescriptions) {\r\n        originatingView.options.showDescriptions = false;\r\n        langStr = lang.CommandShowDescription;\r\n        originatingView.$el.find('.icon-description-toggle').addClass('icon-description-hidden')\r\n            .removeClass('icon-description-shown')\r\n            .parent().attr('title', langStr).attr('aria-label', langStr);\r\n      } else {\r\n        originatingView.options.showDescriptions = true;\r\n        langStr = lang.CommandHideDescription;\r\n        originatingView.$el.find('.icon-description-toggle').removeClass('icon-description-hidden')\r\n            .addClass('icon-description-shown')\r\n            .parent().attr('title', langStr).attr('aria-label', langStr);\r\n      }\r\n      originatingView.$el.find(menuSelector).attr('title', langStr)\r\n          .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n      originatingView.trigger('csui.description.toggled',\r\n          {showDescriptions: originatingView.options.showDescriptions});\r\n    }\r\n  });\r\n\r\n  return DescriptionToggleCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/thumbnail.toggle',[\"module\", \"require\", 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/lib/underscore',\r\n  'csui/models/command',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, backbone, Marionette, _, CommandModel, lang) {\r\n  'use strict';\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    enableGridView: false\r\n  });\r\n  var TaskQueue, Thumbnail,\r\n      ThumbnailCommand = CommandModel.extend({\r\n\r\n        defaults: {\r\n          signature: \"Thumbnail\",\r\n          command_key: ['thumbnail', 'thumbnail'],\r\n          scope: \"single\",\r\n          name: 'Thumbnail'\r\n        },\r\n\r\n        //only one node allowed at a time\r\n        enabled: function (status, options) {\r\n          if (status.collection && config.enableGridView) {\r\n            if (status.thumbnailViewState) {\r\n              status.toolItem.attributes.icon = \"icon icon-switch_list\";\r\n              status.toolItem.attributes.name = lang.ListViewTitle;\r\n              status.toolItem.attributes.title = lang.ListViewTitle;\r\n            }\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n\r\n        execute: function (status, options) {\r\n          var originatingView = status.originatingView || (options && options.originatingView);\r\n          var langStr;\r\n          var menuSelector = '.csui-configuration-view .binf-dropdown-menu li[data-csui-command=\"thumbnail\"] a';\r\n          if (originatingView.thumbnailViewState) {\r\n            langStr = lang.ThumbnailTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-list').removeClass(\r\n                \"binf-glyphicon-th-list\").addClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-large')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          } else {\r\n            langStr = lang.ListViewTitle;\r\n            originatingView.$el.find('.binf-glyphicon-th-large').addClass(\r\n                \"binf-glyphicon-th-list\").removeClass(\"binf-glyphicon-th-large\");\r\n            originatingView.$el.find('.binf-glyphicon-th-list')\r\n                .parent().attr('title', langStr).attr('aria-label', langStr);\r\n          }\r\n          originatingView.$el.find(menuSelector).attr('title', langStr)\r\n              .contents().first().replaceWith(langStr);  // after the text, there can be right arrow\r\n        }\r\n      });\r\n\r\n  return ThumbnailCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/save.filter',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/utils/url', 'csui/models/command', 'csui/models/node/node.model',\r\n  'csui/utils/node.links/node.links'\r\n], function (module, require, _, $, lang, log, Url, CommandModel, NodeModel,\r\n    nodeLinks) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {\r\n    parallelism: 3\r\n  });\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert, ConflictResolver, TaskQueue,\r\n      PageLeavingBlocker, ConnectorFactory, NextNodeModelFactory;\r\n\r\n  var SaveFilterCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"SaveFilter\",\r\n      command_key: ['savefilter', 'SaveFilter'],\r\n      name: lang.CommandNameSaveFilter,\r\n      verb: lang.CommandVerbSaveFilter\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert',\r\n        'csui/controls/conflict.resolver/conflict.resolver',\r\n        'csui/utils/taskqueue', 'csui/utils/page.leaving.blocker',\r\n        'csui/utils/contexts/factories/connector',\r\n        'csui/utils/contexts/factories/next.node'\r\n      ], function () {\r\n        GlobalMessage = arguments[0];\r\n        ModalAlert = arguments[1];\r\n        ConflictResolver = arguments[2];\r\n        TaskQueue = arguments[3];\r\n        PageLeavingBlocker = arguments[4];\r\n        ConnectorFactory = arguments[5];\r\n        NextNodeModelFactory = arguments[6];\r\n\r\n        self._selectSaveFilterOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedNodes = status.nodes,\r\n                  facets        = status.facets,\r\n                  targetFolder  = selectedOptions.nodes[0],\r\n                  filterName    = selectedOptions.filterName;\r\n              var url = status.connector.connection.url.replace('/v1', '/v2');\r\n              var selectedFacets = [];\r\n              $.each(facets.filters, function (idx, facet) {\r\n                var facettypes = [], facetArrayType = [];\r\n                if (facet.values instanceof Array) {\r\n                  $.each(facet.values, function (index, facettype) {\r\n                    facettypes.push(facettype.id);\r\n                  });\r\n                  facetArrayType.push(facet.id);\r\n                  facetArrayType.push(facettypes);\r\n                  selectedFacets.push(facetArrayType);\r\n                }\r\n              });\r\n              var ajaxFormData = {\r\n                'type': 899,\r\n                'location_id': selectedNodes.models[0].get(\"id\"),\r\n                'name': filterName,\r\n                'parent_id': targetFolder.get(\"id\"),\r\n                'selected_facets': selectedFacets\r\n              };\r\n              var formData = new FormData();\r\n              //formData.append('body', JSON.stringify(ajaxFormData));\r\n              var saveFilterOptions = status.connector.extendAjaxOptions({\r\n                url: url + '/nodes',\r\n                type: 'POST',\r\n                data: 'body=' + encodeURIComponent(JSON.stringify(ajaxFormData)),\r\n                contentType: 'application/x-www-form-urlencoded'\r\n              });\r\n\r\n              $.ajax(saveFilterOptions)\r\n                  .done(function (resp) {\r\n                    deferred.resolve(resp.results);\r\n                    var virtualFolderId   = resp.results.data.properties.id,\r\n                        virtualFolderNode = new NodeModel({id: virtualFolderId},\r\n                            {connector: context.getObject(ConnectorFactory)}),\r\n                        name              = resp.results.data.properties.name,\r\n                        msg               = _.str.sformat(lang.SaveFilterCommandSuccessfully, name),\r\n                        options           = {\r\n                          context: context,\r\n                          nextNodeModelFactory: NextNodeModelFactory,\r\n                          link_url: nodeLinks.getUrl(virtualFolderNode),\r\n                          targetFolder: virtualFolderNode\r\n                        },\r\n                        dets; // leave details as undefined;\r\n                    GlobalMessage.showMessage('success_with_link', msg, dets, options);\r\n                  })\r\n                  .fail(function (error) {\r\n                    deferred.reject(error);\r\n                    if (error && error.responseText) {\r\n                      var errorObj = JSON.parse(error.responseText);\r\n                      GlobalMessage.showMessage('error', errorObj.error);\r\n                    }\r\n                  });\r\n\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectSaveFilterOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/node.picker/node.picker'],\r\n          function (NodePicker) {\r\n            var numNodes = status.nodes.length;\r\n            var pickerOptions = _.extend({\r\n              command: 'savefilter',\r\n              selectableTypes: [-1],\r\n              showAllTypes: true,\r\n              orderBy: 'type asc',\r\n              dialogTitle: lang.DialogTitleSaveFilter,\r\n              initialContainer: status.container || status.nodes.models[0].parent,\r\n              initialSelection: status.nodes,\r\n              startLocation: '',\r\n              includeCombineProperties: (numNodes === 1),\r\n              propertiesSeletor: false,\r\n              saveFilter: true,\r\n              globalSearch: true,\r\n              context: options ? options.context : status.context,\r\n              startLocations: ['enterprise.volume', 'current.location', 'personal.volume',\r\n                'favorites', 'recent.containers'],\r\n              resolveShortcuts: true,\r\n              resultOriginalNode: true\r\n            }, status);\r\n\r\n            self.nodePicker = new NodePicker(pickerOptions);\r\n\r\n            self.nodePicker\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                })\r\n                .fail(function (error) {\r\n                  deferred.reject.apply(deferred, arguments);\r\n                });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return SaveFilterCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/maximize.widget.view',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var ExpandNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"MaximizeWidgetView\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n      return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === false);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"maximize:widget\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return ExpandNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/restore.widget.size',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var NormalizeNodestableViewCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"RestoreWidgetViewSize\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n\r\n      var isMaximizeMode = this.checkMaximizeMode(status);\r\n\r\n      if (isMaximizeMode) {\r\n        return false; //When showWidgetInMaxMode then disable the RestoreWidgetView\r\n      } else {\r\n        var supportMaximizeWidget = $(\"body\").hasClass(\"csui-support-maximize-widget\");\r\n        return (supportMaximizeWidget && $(\"body\").hasClass(\"csui-maximized-widget-mode\") === true);\r\n      }\r\n\r\n    },\r\n\r\n    checkMaximizeMode: function (status) {\r\n      return status && status.context && status.context.perspective &&\r\n             status.context.perspective.get(\"showWidgetInMaxMode\");\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      status.context.trigger(\"restore:widget:size\", {widgetView: status.originatingView});\r\n    }\r\n  });\r\n\r\n  return NormalizeNodestableViewCommand;\r\n\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/apply.permission',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/models/command','csui/utils/commandhelper',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, $, CommandModel,\r\n    CommandHelper, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ApplyPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'ApplyPermission'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return false;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred();\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (GlobalMessage) {\r\n        if (true) {\r\n          deferred.resolve();\r\n          GlobalMessage.showMessage('success', \"Applied permissions to sub-items\");\r\n        } else {\r\n          deferred.reject();\r\n          GlobalMessage.showMessage('error', \"Failed to apply permissions to sub-items\");\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    }\r\n  });\r\n\r\n  return ApplyPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/edit.permission',[\r\n  'module', 'require', 'csui/lib/underscore', \"csui/lib/backbone\", 'csui/lib/jquery',\r\n  'csui/utils/base',\r\n  'csui/models/command', 'csui/utils/commandhelper', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, _, Backbone, $, base, CommandModel,\r\n    CommandHelper, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var EditPermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'EditPermission'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          right_id        = permissionModel && permissionModel.get('right_id'),\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          filterId        = status.filterId;\r\n\r\n      return !filterId && permissionType && (right_id || permissionType === \"public\") &&\r\n             collection &&\r\n             collection.options && collection.options.node && !!collection.options.node.get('id') &&\r\n             (collection.options.authenticatedUserPermissions &&\r\n              collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n              status.admin_permissions);\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.model,\r\n          collection      = permissionModel.collection,\r\n          targetView      = status.targetView;\r\n\r\n      self.targetView = targetView;\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      var failureMsg = this._getMessageWithUserDisplayName(lang.EditPermissionCommandFailMessage,\r\n          permissionModel);\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n\r\n        require(\r\n            ['csui/widgets/permissions/impl/edit/edit.permission.helper',\r\n              'csui/utils/contexts/factories/user', 'csui/controls/globalmessage/globalmessage'\r\n            ], function (EditPermissionHelper, UserModelFactory, GlobalMessage) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              self.editPermissionHelper = new EditPermissionHelper({\r\n                permissionModel: permissionModel,\r\n                popoverPlacement: \"left\",\r\n                popoverAtBodyElement: status.originatingView ?\r\n                                      !status.originatingView.options.isExpandedView : true,\r\n                popoverTragetElement: status.targetView.permissions.$el,\r\n                readonly: false,\r\n                originatingView: status.originatingView,\r\n                applyTo: status.applyTo\r\n              });\r\n\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"permissions:selected\", function (userSelection) {\r\n                    var saveAttr = {\r\n                      \"permissions\": userSelection.permissions,\r\n                      \"apply_to\": userSelection.apply_to,\r\n                      \"include_sub_types\": userSelection.apply_to > 0 ?\r\n                          [204, 207, 215, 298, 3030202] : []\r\n                    };\r\n                    if (userSelection.right_id) {\r\n                      saveAttr.right_id = userSelection.right_id;\r\n                    }\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function (response) {\r\n                      //Fetch effective permission of current logged-in user\r\n                      collection.options.authenticatedUserPermissions.fetch()\r\n                          .done(function () {\r\n                            permissionModel.set(saveAttr, {silent: true});\r\n                            self.editPermissionHelper.destroy();\r\n                            self.editPermissionHelper.unblockActions();\r\n                            /*if (permissionModel.mustRefreshAfterPut !== false) {\r\n                              return permissionModel.fetch();\r\n                            }*/\r\n                            deferred.resolve();\r\n                          })\r\n                          .fail(function (error) {\r\n                            var commandError = error ? new CommandError(error, permissionModel) :\r\n                                               error;\r\n                            deferred.reject(permissionModel, commandError);\r\n                          });\r\n                      var message;\r\n                      if (response.results.success > 0 && response.results.failure === 0) {\r\n                        message = _.str.sformat(\r\n                            response.results.success === 1 ? lang.AppliedPermissionsOneSuccess :\r\n                            lang.AppliedPermissionsOnlySuccess,\r\n                            response.results.success);\r\n                      } else if (response.results.success > 0 && response.results.failure > 0) {\r\n                        message = _.str.sformat(lang.AppliedPermissionsSuccessAndFailure,\r\n                            response.results.success, response.results.failure);\r\n                      } else if (response.results.success === 0 && response.results.failure > 0) {\r\n                        message = _.str.sformat(\r\n                            response.results.failure === 1 ? lang.AppliedPermissionsOneFailure :\r\n                            lang.AppliedPermissionsOnlyFailure,\r\n                            response.results.failure);\r\n                      }\r\n                      var errObject  = Backbone.Model.extend({\r\n                            defaults: {\r\n                              name: \"\",\r\n                              state: 'pending',\r\n                              commandName: 'ViewPermission'\r\n                            }\r\n                          }),\r\n                          errObjects = [];\r\n\r\n                      var failedfilesCollection = Backbone.Collection.extend({\r\n                        model: errObject\r\n                      });\r\n                      var errCollection = new failedfilesCollection();\r\n\r\n                      for (var i = 0;\r\n                           response.results.failure > 0 && i < response.results.data.length; i++) {\r\n                        errObjects[i] = new errObject({\r\n                          name: response.results.data[i].name,\r\n                          mime_type: '',\r\n                          state: 'rejected'\r\n                        });\r\n                        errCollection.add(errObjects[i]);\r\n                      }\r\n                      var succesfull_count = (response.results.success > 0 &&\r\n                                              response.results.failure > 0) ?\r\n                                             response.results.success : '',\r\n                          succes_msg       = '';\r\n                      var langTitle = _.str.sformat(lang.ApplyingManyItemsSuccessMessage,\r\n                          succesfull_count);\r\n                      var success_msg = succesfull_count > 0 ? langTitle : ' ';\r\n\r\n                      response.results.failure > 0 ?\r\n                      GlobalMessage.showPermissionApplyingProgress(errCollection, {\r\n                        oneFileFailure: success_msg + lang.ApplyingOneItemFailMessage,\r\n                        someFileFailure: success_msg +\r\n                                         _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n                                             errObjects.length),\r\n                        multiFileFailure: success_msg +\r\n                                          _.str.sformat(lang.ApplyingManyItemsFailMessage2,\r\n                                              errObjects.length)\r\n                      }) : '';\r\n\r\n                      (response.results.success > 0 &&\r\n                       response.results.failure <= 0) ?\r\n                      GlobalMessage.showMessage('success',\r\n                          message ? message : lang.AppliedPermissions) : '';\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      GlobalMessage.showMessage('error', commandError);\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n\r\n              self.editPermissionHelper.listenTo(self.editPermissionHelper,\r\n                  \"closed:permission:level:popover\", function () {\r\n                    deferred.reject(permissionModel);\r\n                  });\r\n            });\r\n      } else {\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg = _.str.sformat(unformattedMsg, displayName);\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return EditPermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/change.owner.permission',[\r\n  'module', 'csui/lib/underscore', 'csui/lib/jquery', \"csui/lib/marionette\",\r\n  'csui/models/command', 'csui/utils/command.error',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, _, $, Marionette, CommandModel, CommandError, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var ChangeOwnerPermissionCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: 'ChangeOwnerPermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          enabled         = (permissionType &&\r\n                            ((permissionType === \"owner\" &&\r\n                              permissionModel.get('permissions') !== null) ||\r\n                             permissionType === \"group\")) &&\r\n                            collection && collection.options && collection.options.node &&\r\n                            collection.options.node.get('id') &&\r\n                            (collection.options.authenticatedUserPermissions &&\r\n                             collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n                             status.admin_permissions),\r\n          title           = (enabled && permissionType === \"owner\") ?\r\n                            lang.ChangeOwnerPermissionCommand :\r\n                            lang.ChangeOwnerGroupPermissionCommand;\r\n      if (permissionType === \"group\" && status.toolItem.attributes &&\r\n          status.toolItem.attributes.icon) {\r\n        status.toolItem.attributes.icon = \"icon icon-group-change\";\r\n      }\r\n      //set title\r\n      status.toolItem && status.toolItem.set('name', title);\r\n\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred          = $.Deferred(),\r\n          permissionModel   = status.model,\r\n          permissionType    = permissionModel.get(\"type\"),\r\n          collection        = permissionModel.collection,\r\n          userExpandDetails = permissionModel.get(\"right_id_expand\"),\r\n          currentRow        = status.targetView.$el,\r\n          self              = this;\r\n      self.targetView = status.originatingView.permissionsContentView;\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        require(['csui/controls/table/inlineforms/permissions/user.picker/user.picker.view',\r\n              'csui/utils/contexts/factories/member', 'csui/models/permission/nodepermission.model',\r\n              'csui/utils/contexts/factories/user'],\r\n            function (UserPickerView, MemberModelFactory, NodePermissionModel, UserModelFactory) {\r\n              var user = status.originatingView.context.getModel(UserModelFactory);\r\n              self.loginUserId = user.get('id');\r\n              var memberFilter = status.context.getModel(MemberModelFactory);\r\n              var userPickerView = new UserPickerView({\r\n                context: status.options ? status.options.context : status.context,\r\n                userPickerModel: memberFilter,\r\n                currentRow: currentRow,\r\n                connector: status.connector,\r\n                memberFilter: {type: (permissionType === 'owner' ? [0] : [1])}\r\n              });\r\n              currentRow.addClass(\"csui-changeowner-permission\");\r\n              currentRow.find(\".member-info\").addClass(\"binf-hidden\");\r\n              var userpickerRegion = new Marionette.Region({\r\n                el: currentRow.find(\".csui-inline-owner-change\")\r\n              });\r\n              userpickerRegion.show(userPickerView);\r\n              userPickerView.listenTo(userPickerView,\r\n                  \"change:completed\", function (permissions) {\r\n                    userpickerRegion.currentView.destroy();\r\n                    deferred.resolve();\r\n                  });\r\n              userPickerView.listenTo(userPickerView, \"member:selected:save\",\r\n                  function (args) {\r\n                    var permissions = NodePermissionModel.getReadPermissions(),\r\n                        saveAttr    = {\r\n                          \"permissions\": permissionModel.get(\"permissions\"),\r\n                          \"right_id\": args.get(\"id\"),\r\n                          \"include_sub_types\": [204, 207, 215, 298, 3030202]\r\n                        };\r\n                    permissionModel.set({'right_id_expand': args}, {silent: true});\r\n                    permissionModel.save(saveAttr, {\r\n                      patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n                      // mixin makes it a PUT again (backbone would use PATCH)\r\n                      wait: true,\r\n                      silent: true\r\n                    }).done(function () {\r\n                      //Fetch effective permission of current logged-in user\r\n                      collection.options.authenticatedUserPermissions.fetch()\r\n                          .done(function (model) {\r\n                            permissionModel.set(saveAttr, {silent: true});\r\n                            userpickerRegion.currentView.destroy();\r\n                            currentRow.removeClass(\"csui-changeowner-permission\");\r\n                            currentRow.find(\".member-info\").removeClass(\r\n                                \"binf-hidden\");\r\n\r\n                            deferred.resolve();\r\n                          })\r\n                          .fail(function (error) {\r\n                            var commandError = error ? new CommandError(error, permissionModel) :\r\n                                               error;\r\n                            deferred.reject(permissionModel, commandError);\r\n                          });\r\n                    }).fail(function (error) {\r\n                      var commandError = error ? new CommandError(error, permissionModel) :\r\n                                         error;\r\n                      permissionModel.set({'right_id_expand': userExpandDetails}, {silent: true});\r\n                      deferred.reject(permissionModel, commandError);\r\n                    });\r\n                  });\r\n            });\r\n      } else {\r\n        var msg = _.str.sformat(lang.EditPermissionCommandFailMessage, lang.Owner);\r\n        return deferred.reject(\r\n            new CommandError(msg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n      return deferred.promise();\r\n    }\r\n  });\r\n  return ChangeOwnerPermissionCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/delete.permission',[\r\n  'module', 'require', 'csui/lib/jquery', 'csui/lib/underscore', 'csui/lib/backbone',\r\n  'csui/utils/base', 'csui/models/command', 'csui/utils/commandhelper',\r\n  'csui/utils/command.error', 'csui/utils/commands/confirmable',\r\n  'i18n!csui/utils/commands/nls/localized.strings'\r\n], function (module, require, $, _, Backbone, base, CommandModel, CommandHelper,\r\n    CommandError, ConfirmableCommand, lang) {\r\n  'use strict';\r\n\r\n  var config = _.extend({}, module.config());\r\n\r\n  var GlobalMessage;\r\n\r\n  var DeletePermissionCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'DeletePermission',\r\n      scope: 'single'\r\n    },\r\n\r\n    allowCollectionRefetch: false,\r\n\r\n    _getConfirmTemplate: function (status, options) {\r\n      return _.template(lang.DeleteCommandConfirmDialogHtml);\r\n    },\r\n\r\n    _getConfirmData: function (status, options) {\r\n      var permissionModel      = status.model,\r\n          confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogSingleMessage;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        confirmDialogMessage = lang.DeletePermissionCommandConfirmDialogPublicAccessMessage;\r\n      }\r\n      var msg = this._getMessageWithUserDisplayName(\r\n          confirmDialogMessage, permissionModel);\r\n\r\n      var title = this._getMessageWithUserDisplayName(\r\n          lang.DeletePermissionCommandConfirmDialogTitle, permissionModel);\r\n\r\n      return {\r\n        title: title,\r\n        message: msg\r\n      };\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      } else if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var permissionModel = status.model,\r\n          collection      = permissionModel && permissionModel.collection,\r\n          right_id        = permissionModel && permissionModel.get('right_id'),\r\n          permissionType  = permissionModel && permissionModel.get('type'),\r\n          filterId        = status.filterId,\r\n          enabled         = !filterId && permissionType &&\r\n                            (right_id || permissionType === \"public\") &&\r\n                            collection && collection.options && collection.options.node &&\r\n                            collection.options.node.get('id') &&\r\n                            (collection.options.authenticatedUserPermissions &&\r\n                             collection.options.authenticatedUserPermissions.hasEditPermissionRights() ||\r\n                             status.admin_permissions);\r\n\r\n      if (enabled) {\r\n        this.setCommandTitle(status.toolItem, permissionModel);\r\n      }\r\n\r\n      return enabled;\r\n    },\r\n\r\n    setCommandTitle: function (toolItem, permissionModel) {\r\n      var type = permissionModel.get(\"type\"),\r\n          title;\r\n      if (type === \"owner\") {\r\n        title = lang.DeletePermissionCommandRemoveOwner;\r\n      } else if (type === \"group\") {\r\n        title = lang.DeletePermissionCommandRemoveGroup;\r\n      } else if (type === \"public\") {\r\n        title = lang.DeletePermissionCommandRemovePublicAccess;\r\n      } else {\r\n        title = lang.DeletePermissionCommandRemoveOther;\r\n      }\r\n      toolItem.set(\"name\", title);\r\n    }\r\n  });\r\n\r\n  _.extend(DeletePermissionCommand.prototype, ConfirmableCommand, {\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          self     = this;\r\n      // avoid messages from handleExecutionResults\r\n      status.suppressFailMessage = true;\r\n      status.suppressSuccessMessage = true;\r\n\r\n      require([\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view'\r\n      ], function (localGlobalMessage, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (status.originatingView && status.originatingView.model &&\r\n            status.originatingView.model.get(\"container\")) {\r\n          self._executeDeletePermission(status, options, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          self._deletePermission(status, options).then(deferred.resolve, deferred.reject);\r\n        }\r\n      }, deferred.reject);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _deletePermission: function (status, options) {\r\n      options || (options = {});\r\n      var deferred = $.Deferred();\r\n      this._performActions(status, options);\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeDeletePermission: function (status, options, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView) {\r\n      options || (options = {});\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({\r\n        'removePermission': true,\r\n        'permissionModel': status.model\r\n      });\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: status.originatingView.model,\r\n        permissionModel: status.model,\r\n        removePermission: true,\r\n        applyTo: status.applyTo,\r\n        originatingView: status.originatingView\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: _.bind(this._performActions, this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self            = this,\r\n          deferred        = $.Deferred(),\r\n          permissionModel = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                            status.model,\r\n          permissionType  = permissionModel.get('type'),\r\n          collection      = permissionModel.collection,\r\n          orginatingView  = status.dialog && status.dialog.options.view.options.originatingView,\r\n          failureMsg      = this._getMessageWithUserDisplayName(\r\n              lang.DeletePermissionCommandFailMessage, permissionModel),\r\n          deleteAttr;\r\n      self.orginatingView = orginatingView;\r\n      if (collection) {\r\n        permissionModel.nodeId = collection.options && collection.options.node &&\r\n                                 collection.options.node.get('id');\r\n        var container           = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"container\"),\r\n            permissionModelType = collection.options && collection.options.node &&\r\n                                  collection.options.node.get(\"permissions_model\");\r\n        if (status.dialog) {\r\n          permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                     status.dialog.options.view.subFolderSelected ? 2 :\r\n                                     (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n          permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n              [204, 207, 215, 298, 3030202] : [];\r\n        }\r\n        if (self.originatingView && self.originatingView.blockActions) {\r\n          self.destroyDialog(status);\r\n          self.originatingView.blockActions();\r\n        }\r\n        var jqxhr = permissionModel.destroy({\r\n          wait: true\r\n        }).done(function (response) {\r\n          //update the results\r\n          permissionModel.set('results', response.results);\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n          //Fetch effective permission of current logged-in user\r\n          collection.options.authenticatedUserPermissions.fetch()\r\n              .done(function () {\r\n                var successMsg = self._getMessageWithUserDisplayName(\r\n                    permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n                    lang.DeletePermissionCommandSuccessMessageWithCount :\r\n                    lang.DeletePermissionCommandSuccessMessage, permissionModel);\r\n                GlobalMessage.showMessage('success', successMsg);\r\n                if (permissionType === \"owner\" || permissionType === \"group\") {\r\n                  //Check & Process for no owner condition\r\n                  collection.processForEmptyOwner && collection.processForEmptyOwner();\r\n                }\r\n                //self.destroyDialog(status);\r\n                deferred.resolve(permissionModel);\r\n              })\r\n              .fail(function (error) {\r\n                var commandError = error ? new CommandError(error, permissionModel) :\r\n                                   error;\r\n                //self.destroyDialog(status);\r\n                if (self.originatingView && self.originatingView.unblockActions) {\r\n                  self.originatingView.unblockActions();\r\n                }\r\n                deferred.reject(permissionModel, commandError);\r\n              });\r\n        }).fail(function (error) {\r\n          var commandError = error ? new CommandError(error, permissionModel) :\r\n                             error;\r\n          self.handleFailure(commandError, failureMsg);\r\n          deferred.reject(permissionModel, commandError);\r\n          if (!error) {\r\n            jqxhr.abort();\r\n          }\r\n        }).always(function () {\r\n          if (self.originatingView && self.originatingView.unblockActions) {\r\n            self.originatingView.unblockActions();\r\n          }\r\n        });\r\n        return deferred.promise();\r\n      }\r\n      else {\r\n        self.destroyDialog(status);\r\n        return deferred.reject(\r\n            new CommandError(failureMsg, {errorDetails: lang.undefinedCollection}));\r\n      }\r\n    },\r\n\r\n    handleFailure: function (commandError, oneFileFailure) {\r\n      var errObject = Backbone.Model.extend({\r\n            defaults: {\r\n              name: \"\",\r\n              state: 'pending',\r\n              commandName: 'ViewPermission'\r\n            }\r\n          }),\r\n          errObjects;\r\n\r\n      var failedPermissionsCollection = Backbone.Collection.extend({\r\n        model: errObject\r\n      });\r\n      var errCollection = new failedPermissionsCollection();\r\n      errObjects = new errObject({\r\n        name: commandError,\r\n        mime_type: '',\r\n        state: 'rejected'\r\n      });\r\n      errCollection.add(errObjects);\r\n      GlobalMessage.showPermissionApplyingProgress(errCollection, {oneFileFailure: oneFileFailure});\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n\r\n  });\r\n\r\n  return DeletePermissionCommand;\r\n});\r\n\n","csui.define('csui/utils/commands/permissions/add.user.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n\r\n  var AddUserOrGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"adduserorgroup\",\r\n      name: lang.CommandNameAddUserorGroup\r\n    },\r\n\r\n    enabled: function () {\r\n      return true;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel) {\r\n        GlobalMessage = arguments[1];\r\n        ModalAlert = arguments[2];\r\n\r\n        self._selectAddUserOrGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  permissionModelData = {\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_types: selectedOptions.apply_to > 0 ?\r\n                        [204, 207, 215, 298, 3030202] : []\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(permissionModelData, {\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set({\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: 'custom'\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.add(nodePermissionModel);\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            })\r\n            .fail(function (error) {\r\n              deferred.reject(error);\r\n            });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddUserOrGroupOptions: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var unSelectableMembers = status.originalCollection &&\r\n                                      status.originalCollection.models &&\r\n                                      status.originalCollection.models.length > 0 ?\r\n                                      status.originalCollection.models :\r\n                                      status.permissionCollection.models;\r\n            unSelectableMembers = _.filter(unSelectableMembers, function (member) {\r\n              return (member.get(\"type\") === \"custom\");\r\n            });\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'adduserorgroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: lang.allUsersAndGroups,\r\n              dialogTitle: lang.addUsersAndGroups,\r\n              startLocation: 'all.members',\r\n              adduserorgroup: true,\r\n              nodeModel: status.nodeModel,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              startLocations: ['all.members', 'member.groups'],\r\n              unselectableMembers: unSelectableMembers,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddUserOrGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/add.owner.group',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery', 'csui/utils/base',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/log',\r\n  'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, base, lang, log, CommandModel, CommandError) {\r\n  'use strict';\r\n\r\n  // Dependencies loaded in the execute method first\r\n  var GlobalMessage, ModalAlert;\r\n\r\n  var AddOwnerOrOwnerGroupCommand = CommandModel.extend({\r\n    defaults: {\r\n      signature: \"addownerorgroup\",\r\n      name: lang.CommandNameAddOwnerOrOwnerGroup\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection     = status.originalCollection ? status.originalCollection :\r\n                           status.permissionCollection,\r\n          userRights     = collection && collection.options\r\n                           && collection.options.authenticatedUserPermissions,\r\n          owner          = collection.findWhere({type: 'owner'}),\r\n          noOwnerOrGroup = (owner && owner.get('permissions') === null),\r\n          noGroup        = !collection.findWhere({type: 'group'}),\r\n          enabled        = collection && (userRights && userRights.hasEditPermissionRights() ||\r\n                                          status.admin_permissions) &&\r\n                           ( noOwnerOrGroup ||\r\n                             noGroup || !owner);\r\n\r\n      if (enabled && !!status.toolItem) {\r\n        if (noOwnerOrGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerOrGroup);\r\n        }\r\n        else if (noGroup) {\r\n          status.toolItem.set('name', lang.AddOwnerGroup);\r\n        }\r\n        else {\r\n          status.toolItem.set('name', lang.AddOwner);\r\n        }\r\n      }\r\n      return enabled;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var self = this;\r\n      var deferred = $.Deferred();\r\n      var context = status.context || options && options.context;\r\n      status.suppressSuccessMessage = true;\r\n      require(['csui/models/permission/nodepermission.model',\r\n        'csui/controls/globalmessage/globalmessage',\r\n        'csui/dialogs/modal.alert/modal.alert'\r\n      ], function (NodePermissionModel) {\r\n        GlobalMessage = arguments[1];\r\n        ModalAlert = arguments[2];\r\n\r\n        self._selectAddOwnerOrOwnerGroupOptions(status, options)\r\n            .done(function (selectedOptions) {\r\n              var selectedMember      = selectedOptions.members,\r\n                  selectedPermissions = selectedOptions.permissions,\r\n                  type                = selectedMember.get('type') === 0 ? 'owner' : 'group',\r\n                  permissionModelData = {\r\n                    type: type,\r\n                    right_id: selectedMember.get('id'),\r\n                    permissions: selectedPermissions,\r\n                    apply_to: selectedOptions.apply_to,\r\n                    include_sub_type: selectedOptions.apply_to > 0 ? [204, 207, 215, 298, 3030202] :\r\n                        []\r\n                  },\r\n                  saveAttr            = {\r\n                    right_id: selectedMember.get('id'),\r\n                    apply_to: selectedOptions.apply_to,\r\n                    permissions: selectedPermissions\r\n                  },\r\n                  nodePermissionModel = new NodePermissionModel(permissionModelData, status);\r\n\r\n              nodePermissionModel.nodeId = status.nodeModel ? status.nodeModel.get(\"id\") :\r\n                                           status.nodeId;\r\n              if (status.originatingView && status.originatingView.blockActions) {\r\n                status.originatingView.blockActions();\r\n              }\r\n              nodePermissionModel.save(saveAttr, {\r\n                patch: true,\r\n                silent: true,\r\n                wait: true\r\n              }).done(function () {\r\n                nodePermissionModel.set(\r\n                    {\r\n                      right_id_expand: _.clone(selectedMember.attributes),\r\n                      type: type,\r\n                      addOwnerGroup: true\r\n                    },\r\n                    {silent: true});\r\n                //status.permissionCollection.addOwnerOrGroup(nodePermissionModel);\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('success',\r\n                    self._getMessageWithUserDisplayName(nodePermissionModel));\r\n                deferred.resolve(nodePermissionModel);\r\n              }).fail(function (error) {\r\n                var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                                   error;\r\n                if (status.originatingView && status.originatingView.unblockActions) {\r\n                  status.originatingView.unblockActions();\r\n                }\r\n                GlobalMessage.showMessage('error', commandError);\r\n                deferred.reject(nodePermissionModel, commandError);\r\n              });\r\n            }).fail(function (error) {\r\n          deferred.reject(error);\r\n        });\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _selectAddOwnerOrOwnerGroupOptions: function (status, options) {\r\n      var self        = this,\r\n          deferred    = $.Deferred(),\r\n          owner       = status.originalCollection ?\r\n                        status.originalCollection.findWhere({type: 'owner'}) :\r\n                        status.permissionCollection.findWhere({type: 'owner'}),\r\n          displayName = lang.allUsersAndGroups,\r\n          selectableTypes, title, startLocation, startLocations;\r\n      if (owner && owner.get('permissions') === null) {\r\n        selectableTypes = [0, 1];\r\n        title = lang.AddOwnerOrGroupDialogTitle;\r\n        startLocation = 'all.members';\r\n        startLocations = ['all.members', 'member.groups'];\r\n      }\r\n      else {\r\n        selectableTypes = owner ? [1] : [0];\r\n        title = owner ? lang.AddOwnerGroupDialogTitle : lang.AddOwnerDialogTitle;\r\n        displayName = owner ? lang.allGroups : displayName;\r\n        startLocation = owner ? 'all.groups' : 'all.members';\r\n        startLocations = owner ? ['all.groups', 'member.groups'] : ['all.members', 'member.groups'];\r\n      }\r\n      require(['csui/dialogs/members.picker/members.picker.wizard'],\r\n          function (MembersPickerDialog) {\r\n            var membersPickerDialog = new MembersPickerDialog({\r\n              command: 'addownerorownergroup',\r\n              context: status.context,\r\n              connector: status.connector,\r\n              dialogClass: 'cs-permission-group-picker',\r\n              displayName: displayName,\r\n              dialogTitle: title,\r\n              startLocation: startLocation,\r\n              nodeModel: status.nodeModel,\r\n              availablePermissions: status.permissionCollection.availablePermissions,\r\n              adduserorgroup: true,\r\n              addButtonLabel: lang.AddButtonLabel,\r\n              startLocations: startLocations,\r\n              selectableTypes: selectableTypes,\r\n              applyTo: status.applyTo\r\n            });\r\n            membersPickerDialog\r\n                .show()\r\n                .done(function () {\r\n                  deferred.resolve.apply(deferred, arguments);\r\n                }).fail(function (error) {\r\n              deferred.reject.apply(deferred, arguments);\r\n            });\r\n          }, function (error) {\r\n            deferred.reject(error);\r\n          });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"right_id_expand\")) {\r\n        displayName = base.formatMemberName(permissionModel.get(\"right_id_expand\"));\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccessWithCount, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(lang.AddUserOrGroupSuccess, displayName);\r\n      }\r\n      return msg;\r\n    }\r\n  });\r\n\r\n  return AddOwnerOrOwnerGroupCommand;\r\n});\n","csui.define('csui/utils/commands/permissions/restore.public.access',[\r\n  'module', 'require', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'i18n!csui/utils/commands/nls/localized.strings', 'csui/utils/base',\r\n  'csui/utils/log', 'csui/models/command', 'csui/utils/command.error'\r\n], function (module, require, _, $, lang, base, log, CommandModel,\r\n    CommandError) {\r\n  'use strict';\r\n\r\n  var GlobalMessage;\r\n\r\n  var RestorePublicAccess = CommandModel.extend({\r\n    defaults: {\r\n      signature: 'restorepublicaccess',\r\n      name: lang.CommandNameRestorePublicAccess\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var collection = status.originalCollection ? status.originalCollection :\r\n                       status.permissionCollection,\r\n          userRights = collection && collection.options\r\n                       && collection.options.authenticatedUserPermissions;\r\n\r\n      return collection && userRights && userRights.hasEditPermissionRights() &&\r\n             (!collection.findWhere({type: 'public'}));\r\n    },\r\n\r\n    execute: function (status) {\r\n      var self       = this,\r\n          deferred   = $.Deferred(),\r\n          collection = status.permissionCollection,\r\n          nodePermissionModel, saveAttr;\r\n\r\n      require([\r\n        'csui/models/permission/nodepermission.model',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/apply.permission.view',\r\n        'csui/widgets/permissions/impl/edit/apply.permission/impl/header/apply.permission.header.view',\r\n        'csui/controls/progressblocker/blocker',\r\n        'csui/controls/dialog/dialog.view',\r\n        'csui/controls/globalmessage/globalmessage'\r\n      ], function (NodePermissionModel, ApplyPermissionView, ApplyPermissionHeaderView,\r\n          BlockingView, DialogView, localGlobalMessage) {\r\n        GlobalMessage = localGlobalMessage;\r\n        if (status.originatingView && status.originatingView.model &&\r\n            status.originatingView.model.get(\"container\")) {\r\n          self._executeApplyPermission(status, ApplyPermissionHeaderView,\r\n              ApplyPermissionView, BlockingView, DialogView, NodePermissionModel)\r\n              .then(deferred.resolve, deferred.reject);\r\n        } else {\r\n          nodePermissionModel = new NodePermissionModel({type: 'public'}, status);\r\n          saveAttr = {'permissions': NodePermissionModel.getReadPermissions()};\r\n          nodePermissionModel.nodeId = status.nodeId;\r\n          if (status.originatingView && status.originatingView.blockActions) {\r\n            status.originatingView.blockActions();\r\n          }\r\n          nodePermissionModel.save(saveAttr, {\r\n            patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n            // mixin makes it a PUT again (backbone would use PATCH)\r\n            wait: true\r\n          }).done(function () {\r\n            nodePermissionModel.set({publicAccess: true}, {silent: true});\r\n            //collection.addPublicAccess(nodePermissionModel);\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            var successMsg = self._getMessageWithUserDisplayName(\r\n                nodePermissionModel.get('results') && nodePermissionModel.get('results').success > 0 ?\r\n                lang.RestorePublicAccessSuccessMessageWithCount :\r\n                lang.RestorePublicAccessSuccessMessage, nodePermissionModel);\r\n            GlobalMessage.showMessage('success', successMsg);\r\n            deferred.resolve(nodePermissionModel);\r\n          }).fail(function (error) {\r\n            var commandError = error ? new CommandError(error, nodePermissionModel) :\r\n                               error;\r\n            if (status.originatingView && status.originatingView.unblockActions) {\r\n              status.originatingView.unblockActions();\r\n            }\r\n            GlobalMessage.showMessage('error', commandError);\r\n            deferred.reject(nodePermissionModel, commandError);\r\n          });\r\n        }\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    _executeApplyPermission: function (status, ApplyPermissionHeaderView,\r\n        ApplyPermissionView, BlockingView, DialogView, NodePermissionModel) {\r\n      var deferred = $.Deferred();\r\n      this.originatingView = status.originatingView;\r\n      var headerView = new ApplyPermissionHeaderView({'restorePublicAccess': true});\r\n      this._view = new ApplyPermissionView({\r\n        context: status.context,\r\n        model: status.originatingView.model,\r\n        permissionModel: new NodePermissionModel({type: 'public'}, status),\r\n        permissions: NodePermissionModel.getReadPermissions(),\r\n        removePermission: true,\r\n        collection: status.permissionCollection,\r\n        applyTo: status.applyTo,\r\n        originatingView: status.originatingView\r\n      });\r\n      var dialog = new DialogView({\r\n        headerView: headerView,\r\n        view: this._view,\r\n        className: \"csui-permissions-apply-dialog\",\r\n        midSize: true,\r\n        buttons: [\r\n          {\r\n            id: 'apply',\r\n            label: lang.applyButtonLabel,\r\n            'default': true,\r\n            click: _.bind(this._performActions, this)\r\n          },\r\n          {\r\n            label: lang.cancelButtonLabel,\r\n            close: true\r\n          }\r\n        ]\r\n      });\r\n      dialog.listenTo(dialog, 'hide', _.bind(this.onHideDialog, this));\r\n      BlockingView.imbue(dialog);\r\n      dialog.show();\r\n      return deferred.promise();\r\n    },\r\n\r\n    onHideDialog: function () {\r\n      var origView = this.originatingView;\r\n      origView && origView.trigger(\"unblock:view:actions\");\r\n    },\r\n\r\n    _performActions: function (status, options) {\r\n      var self                = this,\r\n          deferred            = $.Deferred(),\r\n          permissionModel     = status.dialog ? status.dialog.options.view.options.permissionModel :\r\n                                status.model,\r\n          permissions         = status.dialog && status.dialog.options.view.options.permissions,\r\n          originatingView     = status.dialog && status.dialog.options.view.options.originatingView,\r\n          nodeModel           = status.dialog.options.view.model,\r\n          collection          = status.dialog && status.dialog.options.view.options.collection,\r\n          container           = nodeModel && nodeModel.get(\"container\"),\r\n          permissionModelType = nodeModel && nodeModel.get(\"permissions_model\"), saveAttr;\r\n      self.originatingView = originatingView;\r\n      if (status.dialog) {\r\n        permissionModel.apply_to = (container && permissionModelType === \"advanced\") &&\r\n                                   status.dialog.options.view.subFolderSelected ? 2 :\r\n                                   (container && permissionModelType === \"advanced\") ? 3 : 0;\r\n        permissionModel.include_sub_types = permissionModel.apply_to > 0 ?\r\n            [204, 207, 215, 298, 3030202] : [];\r\n      }\r\n      saveAttr = {\r\n        'permissions': permissions,\r\n        'apply_to': permissionModel.apply_to,\r\n        'include_sub_types': permissionModel.include_sub_types\r\n      };\r\n      permissionModel.nodeId = nodeModel.get(\"id\");\r\n      if (self.originatingView && self.originatingView.blockActions) {\r\n        self.originatingView.blockActions();\r\n      }\r\n      permissionModel.save(saveAttr, {\r\n        patch: true,  // let form data be 'body:{\"name\":\"Pictures\"}' and uploadable\r\n        // mixin makes it a PUT again (backbone would use PATCH)\r\n        wait: true\r\n      }).done(function () {\r\n        permissionModel.set({publicAccess: true}, {silent: true});\r\n        self.destroyDialog(status);\r\n        collection.addPublicAccess(permissionModel);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        var successMsg = self._getMessageWithUserDisplayName(\r\n            permissionModel.get('results') && permissionModel.get('results').success > 0 ?\r\n            lang.RestorePublicAccessSuccessMessageWithCount :\r\n            lang.RestorePublicAccessSuccessMessage, permissionModel);\r\n        GlobalMessage.showMessage('success', successMsg);\r\n        deferred.resolve(permissionModel);\r\n      }).fail(function (error) {\r\n        var commandError = error ? new CommandError(error, permissionModel) :\r\n                           error;\r\n        self.destroyDialog(status);\r\n        if (self.originatingView && self.originatingView.unblockActions) {\r\n          self.originatingView.unblockActions();\r\n        }\r\n        GlobalMessage.showMessage('error', commandError);\r\n        deferred.reject(permissionModel, commandError);\r\n      });\r\n    },\r\n\r\n    _getMessageWithUserDisplayName: function (unformattedMsg, permissionModel) {\r\n      var displayName;\r\n      if (permissionModel.get(\"type\") === \"public\") {\r\n        displayName = lang.publicAccess;\r\n      }\r\n      var msg;\r\n      if (permissionModel.get('results') && permissionModel.get('results').success > 0) {\r\n        msg = _.str.sformat(unformattedMsg, displayName,\r\n            base.formatMessage(permissionModel.get('results').success, lang));\r\n      } else {\r\n        msg = _.str.sformat(unformattedMsg, displayName);\r\n      }\r\n      return msg;\r\n    },\r\n\r\n    destroyDialog: function (status) {\r\n      status.dialog && status.dialog.destroy();\r\n    }\r\n  });\r\n\r\n  return RestorePublicAccess;\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.blog',['csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenBlogCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenBlog'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 356 || type === 357;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var blog = node.get('type') === 356;\r\n      return {\r\n        func: 'll',\r\n        objAction: blog ? 'view' : 'viewincontainer',\r\n        // TODO: Is the logStopConditionID parameter important for the blog entry?\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenBlogCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.faq',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenFaqCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenFAQ'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123475 || type === 123476;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var faq = node.get('type') === 123475,\r\n          urlQuery = $.param({\r\n            func: 'll',\r\n            objAction: 'view',\r\n            objId: faq ? node.get('id') : node.get('volume_id'),\r\n            nexturl: location.href\r\n          });\r\n      return faq ? urlQuery : urlQuery + '#entry_' + node.get('id');\r\n    }\r\n\r\n  });\r\n\r\n  return OpenFaqCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.forum',['csui/lib/jquery', 'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function ($, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenForumCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenForum'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 123469 || type === 123470;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var forum = node.get('type') === 123469;\r\n      return {\r\n        func: 'll',\r\n        objAction: forum ? 'view' : 'viewincontainer',\r\n        objId: node.get('id'),\r\n        nexturl: location.href\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  return OpenForumCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.wiki',['csui/lib/jquery', 'csui/utils/url',\r\n  'csui/utils/commandhelper', 'csui/utils/commands/open.classic.page'\r\n], function ($, Url, CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenWikiCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenWiki'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 5573 || type === 5574;\r\n    },\r\n\r\n    getUrl: function (node, options) {\r\n      var url = OpenClassicPageCommand.prototype.getUrl.apply(this, arguments),\r\n          wiki = node.get('type') === 5573;\r\n      return wiki ? url : Url.combine(url, 'open', node.get('id'));\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var wiki = node.get('type') === 5573;\r\n      if (wiki) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return OpenWikiCommand;\r\n\r\n});\r\n\n","csui.define('csui/temporary/cop/commands/open.mailstore',['csui/utils/commandhelper',\r\n  'csui/utils/commands/open.classic.page'\r\n], function (CommandHelper, OpenClassicPageCommand) {\r\n  'use strict';\r\n\r\n  var OpenMailStoreCommand = OpenClassicPageCommand.extend({\r\n\r\n    defaults: {\r\n      signature: 'OpenMailStore'\r\n    },\r\n\r\n    enabled: function (status) {\r\n      var node = CommandHelper.getJustOneNode(status),\r\n          type = node && node.get('type');\r\n      return type === 3030331;\r\n    },\r\n\r\n    getUrlQueryParameters: function (node, options) {\r\n      var mailStore = node.get('type') === 3030331;\r\n      if (mailStore) {\r\n        return {\r\n          func: 'll',\r\n          objAction: 'browse',\r\n          objId: node.get('id'),\r\n          viewType: 1,\r\n          nexturl: location.href\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  return OpenMailStoreCommand;\r\n\r\n});\r\n\r\n\n","csui.define('csui/utils/commands/goto.location',['require', 'csui/lib/jquery', 'csui/utils/base', 'csui/lib/underscore',\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commandhelper', 'csui/models/command'\r\n], function (require, $, base, _, lang, CommandHelper, CommandModel) {\r\n  'use strict';\r\n\r\n  var GoToLocationCommand = CommandModel.extend({\r\n\r\n    defaults: {\r\n      signature: \"goToLocation\",\r\n      scope: \"single\"\r\n    },\r\n\r\n    enabled: function (status, options) {\r\n      var node = CommandHelper.getJustOneNode(status);\r\n      return node && this._isSupported(node);\r\n    },\r\n\r\n    _isSupported: function (node) {\r\n      var supportedObjects = [144], //this may be extend in future for other object types also\r\n          support          = $.inArray(node.get('type'), supportedObjects) !== -1;\r\n      return support;\r\n    },\r\n\r\n    execute: function (status, options) {\r\n      var deferred = $.Deferred(),\r\n          node     = CommandHelper.getJustOneNode(status),\r\n          nodeModel;\r\n      if (node && this._isSupported(node)) {\r\n        nodeModel = node.parent;\r\n        if (nodeModel && nodeModel.get('type') === undefined) {\r\n          // When the object is not accessable then we are not getting the parent type so we\r\n          // need to retrieve this value as per the DefaultActionController implementation\r\n          nodeModel.fetch().done(function () {\r\n            status.originatingView && this.executeDefaultAction(nodeModel, status.originatingView);\r\n          }).fail(function (resp) {\r\n            require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlert) {\r\n              var error = new base.Error(resp);\r\n              ModalAlert.showError(error.message);\r\n            });\r\n\r\n          });\r\n          deferred.resolve();\r\n        }     \r\n      else {\r\n        status.originatingView && this.executeDefaultAction(nodeModel, status.originatingView); \r\n        deferred.resolve();\r\n        }\r\n      }\r\n      return deferred.promise();\r\n    },\r\n\r\n    executeDefaultAction: function (node, originatingView) {\r\n      var args = {node: node};\r\n      originatingView.trigger('before:defaultAction', args);\r\n      if (!args.cancel) {\r\n        var self = originatingView;\r\n        originatingView.defaultActionController && originatingView.defaultActionController\r\n            .executeAction(node, {\r\n              context: originatingView.context,\r\n              originatingView: originatingView\r\n            })\r\n            .done(function () {\r\n              self.trigger('executed:defaultAction', args);\r\n            });\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  return GoToLocationCommand;\r\n\r\n});\r\n\n","csui.define('bundles/csui-commands',[\r\n  // Commands\r\n  'csui/integration/folderbrowser/commands/go.to.node.history',\r\n  'csui/integration/folderbrowser/commands/open.full.page.container',\r\n  'csui/utils/commands',\r\n  'csui/utils/commands/add.categories',\r\n  'csui/utils/commands/add',\r\n  'csui/utils/commands/add.item.metadata',\r\n  'csui/utils/commands/add.version',\r\n  'csui/utils/commands/browse',\r\n  'csui/utils/commands/collection/collect.items',\r\n  'csui/utils/commands/collection/remove.collected.items',\r\n  'csui/utils/commands/confirmable',\r\n  'csui/utils/commands/copy',\r\n  'csui/utils/commands/copy.link',\r\n  'csui/utils/commands/create.perspective',\r\n  'csui/utils/commands/delete',\r\n  'csui/utils/commands/download',\r\n  'csui/utils/commands/edit',\r\n  // TODO: Move these 3 commands and also their toolbar\r\n  // configurations (flyouts) to les.fastedit.\r\n  'csui/utils/commands/editactivex',\r\n  'csui/utils/commands/editofficeonline',\r\n  'csui/utils/commands/edit.perspective',\r\n  'csui/utils/commands/editwebdav',\r\n  'csui/utils/commands/email.link',\r\n  'csui/utils/commands/execute.saved.query',\r\n  'csui/utils/commands/favorite.add',\r\n  'csui/utils/commands/favorite.remove',\r\n  'csui/utils/commands/inlineedit',\r\n  'csui/utils/commands/move',\r\n  'csui/utils/commands/multiple.items',\r\n  'csui/utils/commands/navigate',\r\n  'csui/utils/commands/node',\r\n  'csui/utils/commands/open',\r\n  'csui/utils/commands/open.node.perspective',\r\n  'csui/utils/commands/open.classic.page',\r\n  'csui/utils/commands/open.discussion',\r\n  'csui/utils/commands/open.form',\r\n  'csui/utils/commands/open.milestone',\r\n  'csui/utils/commands/open.channel',\r\n  'csui/utils/commands/open.news',\r\n  'csui/utils/commands/open.poll',\r\n  'csui/utils/commands/open.prospector',\r\n  'csui/utils/commands/open.specific.classic.page',\r\n  'csui/utils/commands/open.specific.node.perspective',\r\n  'csui/utils/commands/open.task',\r\n  'csui/utils/commands/open.taskgroup',\r\n  'csui/utils/commands/open.tasklist',\r\n  'csui/utils/commands/open.topic',\r\n  'csui/utils/commands/permissions',\r\n  'csui/utils/commands/properties',\r\n  'csui/utils/commands/rename',\r\n  'csui/utils/commands/rename.favorite',\r\n  'csui/utils/commands/reserve',\r\n  'csui/utils/commands/run.livereport',\r\n  'csui/utils/commands/sign.out',\r\n  'csui/utils/commands/switch.to.classic',\r\n  'csui/utils/commands/unreserve',\r\n  'csui/utils/commands/user.profile',\r\n  'csui/utils/commands/versions',\r\n  'csui/utils/commands/versions/delete',\r\n  'csui/utils/commands/versions/download',\r\n  'csui/utils/commands/versions/open',\r\n  'csui/utils/commands/versions/properties',\r\n  'csui/utils/commands/filter',\r\n  'csui/utils/commands/description.toggle',\r\n  'csui/utils/commands/thumbnail.toggle',\r\n  'csui/utils/commands/save.filter',\r\n  'csui/utils/commands/maximize.widget.view',\r\n  'csui/utils/commands/restore.widget.size',\r\n  'csui/utils/commands/permissions/apply.permission',\r\n  'csui/utils/commands/permissions/edit.permission',\r\n  'csui/utils/commands/permissions/change.owner.permission',\r\n  'csui/utils/commands/permissions/delete.permission',\r\n  'csui/utils/commands/permissions/add.user.group',\r\n  'csui/utils/commands/permissions/add.owner.group',\r\n  'csui/utils/commands/permissions/restore.public.access',\r\n\r\n  // TODO: Remove this. Localizable string for csui commands  are\r\n  // private in csui and must not be referred to from other components.\r\n  'i18n!csui/utils/commands/nls/localized.strings',\r\n  'csui/utils/commands/nls/root/localized.strings',\r\n  'i18n!csui/utils/commands/collection/nls/lang',\r\n  'csui/utils/commands/collection/nls/root/lang',\r\n\r\n  // TODO: Remove this, as long as the module owners take over\r\n  // the commands and default action rules\r\n  'csui/temporary/cop/commands/open.blog',\r\n  'csui/temporary/cop/commands/open.faq',\r\n  'csui/temporary/cop/commands/open.forum',\r\n  'csui/temporary/cop/commands/open.wiki',\r\n  'csui/temporary/cop/commands/open.mailstore',\r\n\r\n  // Other modules, that commands directly depend on.\r\n  'csui/dialogs/file.open/file.open.dialog',\r\n  'csui/models/command',\r\n  'csui/models/commands',\r\n  'csui/utils/command.error',\r\n  'csui/utils/commandhelper',\r\n  'csui/utils/commands/open.plugins/open.plugins',\r\n  \"csui/utils/commands/goto.location\"\r\n], {});\r\n\n"]}