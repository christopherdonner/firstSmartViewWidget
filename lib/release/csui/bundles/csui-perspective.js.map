{"version":3,"sources":["../../src/perspective.manage/impl/nls/lang.js","../../src/perspective.manage/impl/nls/root/lang.js","../../src/perspective.manage/impl/widget.item!hbs","../../src/perspective.manage/impl/widget.list.view.js","../../src/perspective.manage/impl/accordion!hbs","../../src/perspective.manage/impl/accordion.view.js","../perspective.manage/impl/perspectivelayouts!csui-ext","../../src/perspective.manage/impl/perspectivelayouts.js","../../src/perspective.manage/impl/pman.panel!hbs","../../src/perspective.manage/impl/list.item!hbs","../../src/perspective.manage/impl/list!hbs","../../src/perspective.manage/impl/widget.drag.template!hbs","../../src/perspective.manage/impl/pman.panel!css","../../src/perspective.manage/impl/pman.panel.view.js","../../src/perspective.manage/impl/pman!hbs","../../src/perspective.manage/impl/pman!css","../../src/perspective.manage/impl/options.form.wrapper!hbs","../../src/perspective.manage/impl/options.form!css","../../src/perspective.manage/impl/options.form.view.js","../../src/perspective.manage/behaviours/impl/nls/lang.js","../../src/perspective.manage/behaviours/impl/nls/root/lang.js","../../src/perspective.manage/behaviours/impl/widget.masking!hbs","../../src/perspective.manage/behaviours/impl/widget.masking!css","../../src/perspective.manage/behaviours/pman.widget.config.behaviour.js","../../src/perspective.manage/pman.view.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!hbs","../../src/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder!css","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/lang.js","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!hbs","../../src/perspective.manage/widgets/perspective.widget/impl/perspective.widget!css","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.view.js","../../src/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json!json","../../src/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json!json","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest.js","../../src/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest!i18n","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest.js","../../src/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest!i18n","csui-perspective.js"],"names":["csui","define","root","en-us","en","layoutTabTitle","widgetTabTitle","expandTab","collapseTab","noTitle","goBackTooltip","templateMessage","changePageLayoutConfirmatonText","proceedButton","changeLayoutCancelButton","FlowLayoutTitle","LcrLayoutTitle","perspectiveSaveSuccess","saveConfirmMsg","saveConfirmTitle","addWidget","save","close","cancel","module","hbs","Handlebars","t","template","compiler","main","depth0","helpers","partials","data","this","escapeExpression","lambda","title","registerPartial","_","$","Backbone","Marionette","base","PerfectScrollingBehavior","Lang","WidgetCollection","WidgetItemTemplate","config","defaults","WidgetItemView","ItemView","extend","constructor","options","prototype","apply","arguments","tagName","events","click","onClickItem","widgetCollection","Collection","model","attributes","widgets","parentView","trigger","items","models","draggable","behaviors","any","behavior","key","behaviorClass","PerfectScrolling","contentParent","suppressScrollX","scrollYMarginOffset","call","self","allWidgets","fetch","done","collection","_groupWidgetsByModule","render","initialize","bindAll","className","each","renderItem","itemView","el","append","moduleCollection","set","manifest","groupBy","serverModule","id","val","first","replace","add","_sanitiseWidgetLibrary","WidgetListView","Template","ui","accordionHeader","accordionContent","accordionHeaderIcon","click @ui.accordionHeader","templateHelpers","onRender","widgetListRegion","Region","widgetListView","show","listenTo","args","toggle","showAccordion","toggleClass","extraPerspectiveLayouts","perspectivelayouts","type","icon","union","iconClass","helper","goBackAria","helperMissing","name","hash","header","body","require","BlockerView","AccordionView","perspectiveLayouts","ListItemTemplate","ListTemplate","WidgetDragTemplate","PManPanelView","click @ui.layoutTab","tabPannel","listPannel","layoutTab","widgetTab","hide","accordionRegion","accordionView","blockActions","onTabClicked","unblockActions","imbue","listView","destroy","itemClassName","pmanView","addClass","listregion","ListView","removeClass","ListItemView","get","widget","dragstart @ui.widget","dragend @ui.widget","triggers","click .csui-layout-item:not(.binf-active)","perspective","length","_makeWidgetSortable","$el","sortable","connectWith","containment","event","widgetDragTemplate","widgetDragTemplateView","newWidget","width","height","css","opacity","appendTo","find","cursor","tolerance","cursorAt","top","left","start","item","placeholder","over","out","dragStart","stop","dragEnd","onDragStart","originalEvent","dataTransfer","setData","JSON","stringify","toJSON","text","setDragImage","onDragEnd","CompositeView","ViewCollection","Model","idAttribute","back","click @ui.back","childEvents","change:layout","set:active","childViewContainer","childView","childViewOptions","onClickBack","preventDefault","stopPropagation","setActive","onChangeLayout","ModalAlertView","confirmWarning","buttons","showYes","labelYes","showNo","labelNo","description","LayoutViewEventsPropagationMixin","FormView","lang","WidgetOptionsFormWrapperView","LayoutView","regions","bodyRegion","_createForm","widgetOptionsFormView","WidgetOptionsFormView","context","_prepareFormModel","mode","listenToOnce","bind","field","_hasSchema","schema","properties","isEmpty","getValues","validate","_isPreviewWidget","widgetConfig","parse","formOptions","_addWidgetSizePropertyIfSupported","perspectiveView","getSupportedWidgetSizes","supportedKinds","widgetView","kindSchema","widgetSizeTitle","widgetSizeDescription","enum","map","sk","kind","kindOption","optionLabels","label","removeDefaultNone","selectedKind","size","selected","widgetSizeProperty","sizeSchema","sizeOptions","fields","required","push","_modifyModel","_normalizeSchemaToFormView","alpaca","_normalizeOptions","schemaProperies","optionFields","fieldId","fieldOpts","fieldData","deleteConfirmMsg","deleteConfirmTitle","replaceConfirmMsg","replaceConfirmTitle","i18n","log","WidgetModel","maskingTemplate","WidgetMaskingView","delete","masking","click @ui.masking","drop","dragover","dragenter","dragleave","click @ui.delete","dropCounter","undefined","_loadManifest","_createOptionsForm","_updateWidgetOptions","_showCallout","_showOptionsCallout","_calculatePopoverPlacement","$popoverEl","binf_popover","optionsFormView","_showPopover","afterRenderCallback","_onChangeField","adjust","_determineCalloutPlacement","contentClass","settings","rtl","placement","mirror","popoverOptions","html","content","viewport","selector","perspectiveSelector","padding","off","on","_handleCalloutHide","_registerPopoverEvents","cid","view","_documentClickHandler","_unregisterPopoverEvents","isValid","updatedConfig","target","closest","is","has","contains","document","value","offset","right","outerWidth","isRtl","perspectiveWidget","Deferred","resolve","deferred","widgetModel","then","error","reject","promise","onDeleteClick","alertDialog","confirmQuestion","yes","_doDeleteWidget","_doReplaceWidget","widgetToReplace","onDragOver","onDragEnter","onDragLeave","_extractWidgetToDrop","dragData","getData","e","onDrop","placeholderWidget","userConfirmed","Behavior","Error","message","getPManPlaceholderWidget","_ensureWidgetElement","isObject","$widgetEl","_checkAndApplyMask","_resolveWidgetConfiguration","maskingView","getPManWidgetConfig","isFunction","onDestroy","NonEmptyingRegion","pmanContainer","pmanPanel","cancelEdit","addIcon","saveBtn","click @ui.cancelEdit","click @ui.addIcon","click @ui.saveBtn","applyMasking","container","_prepareForEdit","_registerEventHandler","newLayoutType","perspectiveMode","silent","_triggerEditMode","togglePannel","_savePerspective","originalPerspective","_clonePrespective","isNew","_getDefaultPerspectiveConfig","original","perspectiveConfig","getContainer","class","center","_fetchPerspective","removeAttr","updatedPerspective","GlobalMessage","showMessage","_doExitPerspective","errorMessage","responseJSON","errorHtml","MessageHelper","toHtml","reset","onClickSave","triggerMethod","onClickClose","hasClass","_closeToolsPanel","_openToolsPanel","pmanPanelView","attr","_initializeWidgets","pmanPanelRegion","_documentClick","placeHolderWidget","dndWidgetsHere","onShow","parent","noConfig","clickToConfig","widgetTitle","widgetMessage","wConfig","$schema","styleLoad"],"mappings":"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","file":"csui-perspective.js","sourcesContent":["csui.define('csui/perspective.manage/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/impl/nls/root/lang',{\r\n  layoutTabTitle: 'Change page layout',\r\n  widgetTabTitle: 'Add widget',\r\n  expandTab: 'Expand tab',\r\n  collapseTab: 'Collapse tab',\r\n  noTitle: 'Title not available',\r\n  goBackTooltip: 'Go back',\r\n  templateMessage: 'Drag and Drop tile in position',\r\n  changePageLayoutConfirmatonText: 'All your previewsly added and configured widgets will be lost!',\r\n  proceedButton: 'Proceed',\r\n  changeLayoutCancelButton: 'Cancel',\r\n  FlowLayoutTitle: 'Flow Layout',\r\n  LcrLayoutTitle: 'Left-Center-Right',\r\n  perspectiveSaveSuccess: 'Perspective has been updated successfully.',\r\n  saveConfirmMsg: 'Please be aware this action will update all perspective overrides using this layout configuration. If you do not want this to happen, you should create a new perspective.',\r\n  saveConfirmTitle: 'Save perspective',\r\n  addWidget: 'Add Widget',\r\n  save: 'Save',\r\n  close: 'Close',\r\n  cancel: 'Cancel'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-module-item\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/perspective.manage/impl/widget.list.view',['module',\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'csui/models/widget/widget.collection',\r\n  'hbs!csui/perspective.manage/impl/widget.item'\r\n], function (module, _, $, Backbone, Marionette, base, PerfectScrollingBehavior, Lang,\r\n    WidgetCollection,\r\n    WidgetItemTemplate) {\r\n  'use strict';\r\n\r\n  var config = module.config();\r\n  _.defaults(config, {});\r\n\r\n  var WidgetItemView = Marionette.ItemView.extend({\r\n\r\n    constructor: function WidgetItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    events: {\r\n      'click': 'onClickItem'\r\n    },\r\n    onClickItem: function () {\r\n      var widgetCollection = new Backbone.Collection(this.model.attributes.widgets);\r\n      this.options.parentView.trigger(\"item:clicked\", {\r\n        data: {\r\n          items: widgetCollection.models,\r\n          draggable: true\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  var WidgetListView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: WidgetItemTemplate,\r\n\r\n    constructor: function WidgetListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      // Provide the perfect scrollbar to every list view by default\r\n      // (Behaviors cannot be inherited; add the PerfectScrolling\r\n      //  to the local clone of the descendant's behaviors.)\r\n      if (!(this.behaviors && _.any(this.behaviors, function (behavior, key) {\r\n            return behavior.behaviorClass === PerfectScrollingBehavior;\r\n          }))) {\r\n        this.behaviors = _.extend({\r\n          PerfectScrolling: {\r\n            behaviorClass: PerfectScrollingBehavior,\r\n            contentParent: '.cs-module-list',\r\n            suppressScrollX: true,\r\n            // like bottom padding of container, otherwise scrollbar is shown always\r\n            scrollYMarginOffset: 15\r\n          }\r\n        }, this.behaviors);\r\n      }\r\n\r\n      Marionette.ItemView.call(this, options);\r\n\r\n      var self = this;\r\n      this.allWidgets = new WidgetCollection();\r\n      this.allWidgets.fetch().done(function () {\r\n        self.collection = self._groupWidgetsByModule();\r\n        // self._sanitiseWidgetLibrary();\r\n        self.render();\r\n        self.trigger(\"items:fetched\");\r\n      });\r\n    },\r\n\r\n    initialize: function () {\r\n      _.bindAll(this, \"renderItem\");\r\n    },\r\n\r\n    className: 'cs-module-list',\r\n\r\n    render: function () {\r\n      this.collection && this.collection.each(this.renderItem);\r\n    },\r\n\r\n    renderItem: function (model) {\r\n      var parentView = this;\r\n      var itemView = new WidgetItemView({model: model, parentView: parentView});\r\n      itemView.render();\r\n      $(this.el).append(itemView.el);\r\n    },\r\n\r\n    _groupWidgetsByModule: function () {\r\n      // creates a data model where widgets are grouped according to their module\r\n      var moduleCollection = new Backbone.Collection();\r\n      _.each(this.allWidgets.models, function (model) {\r\n        model.set(\"title\",\r\n            model.attributes.manifest ? model.attributes.manifest.title : Lang.noTitle);\r\n      });\r\n      _.each(_.groupBy(this.allWidgets.models, function (model) {\r\n        return model.serverModule.id;\r\n      }), function (val, key) {\r\n        var title = _.first(val).serverModule.attributes.title;\r\n        title = title ? title.replace(/OpenText /, '') : Lang.noTitle; // remove superfluous OpenText prefix\r\n        moduleCollection.add({\r\n          id: key,\r\n          title: title,\r\n          widgets: val\r\n        })\r\n      });\r\n      return moduleCollection;\r\n    },\r\n\r\n    _sanitiseWidgetLibrary: function () {\r\n      // checks to see if any widget groups or widgets have been whitelisted or blacklisted\r\n      // alpha-sorts the groups and the widgets within them.\r\n    }\r\n\r\n  });\r\n\r\n  return WidgetListView;\r\n\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/accordion',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-accordion-header csui-accordion-expand\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n  \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.widgetTabTitle : depth0), depth0))\n    + \"\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowDown\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.expandTab : depth0), depth0))\n    + \"\\\"></div>\\r\\n  <div class=\\\"csui-button-icon cs-icon icon-expandArrowUp\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.collapseTab : depth0), depth0))\n    + \"\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-accordion-content\\\"></div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_accordion', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","csui.define('csui/perspective.manage/impl/accordion.view',[\r\n  'csui/lib/underscore',\r\n  'csui/lib/jquery',\r\n  'csui/lib/backbone',\r\n  'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/perspective.manage/impl/widget.list.view',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'hbs!csui/perspective.manage/impl/accordion',\r\n], function (_, $, Backbone, Marionette, base, WidgetListView, Lang, Template) {\r\n  'use strict';\r\n\r\n  var AccordionView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    className: 'csui-accordion',\r\n\r\n    template: Template,\r\n\r\n    ui: {\r\n      accordionHeader: '.csui-accordion-header',\r\n      accordionContent: '.csui-accordion-content',\r\n      accordionHeaderIcon: '.csui-accordion-header .cs-icon'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.accordionHeader': \"toggle\"\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        widgetTabTitle: Lang.widgetTabTitle,\r\n        expandTab: Lang.expandTab,\r\n        collapseTab: Lang.collapseTab\r\n      }\r\n    },\r\n\r\n    constructor: function AccordionView(options) {\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n    },\r\n\r\n    onRender: function () {\r\n      this.widgetListRegion = new Marionette.Region({\r\n        el: this.ui.accordionContent\r\n      });\r\n      this.widgetListView = new WidgetListView();\r\n      this.widgetListRegion.show(this.widgetListView);\r\n      this.listenTo(this.widgetListView, \"item:clicked\", function (args) {\r\n        this.trigger(\"item:clicked\", args);\r\n      }).listenTo(this.widgetListView, \"items:fetched\", function () {\r\n        this.trigger(\"items:fetched\");\r\n      });\r\n    },\r\n\r\n    toggle: function () {\r\n      this.showAccordion = !this.showAccordion;\r\n      this.ui.accordionHeader.toggleClass(\"csui-accordion-expand\");\r\n      this.ui.accordionContent.toggle();\r\n    }\r\n  });\r\n\r\n  return AccordionView;\r\n\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/impl/perspectivelayouts',[\r\n    'csui/lib/underscore',\r\n    'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n    // Load extra layout items to be added\r\n    'csui-ext!perspective.manage/impl/perspectivelayouts'\r\n], function(_, Lang, extraPerspectiveLayouts) {\r\n\r\n    var perspectivelayouts = [\r\n        {\r\n            title: Lang.LcrLayoutTitle, \r\n            type: \"left-center-right\",\r\n            icon: \"csui-layout-lcr\"\r\n        },\r\n        {\r\n            title: Lang.FlowLayoutTitle, \r\n            type: \"flow\",\r\n            icon: \"csui-layout-flow\"\r\n        }\r\n    ];\r\n\r\n    if(extraPerspectiveLayouts) {\r\n        perspectivelayouts = _.union(perspectivelayouts, extraPerspectiveLayouts);\r\n    }\r\n\r\n    return perspectivelayouts;\r\n});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman.panel',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-tab-pannel\\\">\\r\\n  <div class=\\\"csui-layout-tab\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\\">\\r\\n    \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.layoutTabTitle : depth0), depth0))\n    + \"\\r\\n  </div>\\r\\n  <div class=\\\"csui-widget-tab\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"csui-list-pannel\\\"></div>\\r\\n<div class=\\\"csui-template-wrapper\\\">\\r\\n  <div class=\\\"csui-widget-template\\\">\\r\\n    <div class=\\\"csui-template-header\\\"></div>\\r\\n    <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.templateMessage : depth0), depth0))\n    + \"</div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman.panel', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list.item',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.className : depth0), depth0))\n    + \"\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"\\\"\\r\\n     draggable=\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.draggable : depth0), depth0))\n    + \">\\r\\n  <span>\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.title : depth0), depth0))\n    + \"</span>\\r\\n  <div class=\\\"csui-layout-icon \"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.iconClass : depth0), depth0))\n    + \"\\\"></div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list.item', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/list',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"cs-header binf-panel-heading cs-header-with-go-back\\\" tabindex=\\\"0\\\" role=\\\"link\\\"\\r\\n     aria-label=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackAria || (depth0 != null ? depth0.goBackAria : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackAria\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  <span class=\\\"icon circular arrow_back cs-go-back\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.goBackTooltip || (depth0 != null ? depth0.goBackTooltip : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"goBackTooltip\",\"hash\":{}}) : helper)))\n    + \"\\\"></span>\\r\\n</div>\\r\\n<div class=\\\"cs-content\\\">\\r\\n  <div class=\\\"cs-list-group\\\"></div>\\r\\n</div>\\r\\n\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_list', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/widget.drag.template',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-widget-template\\\">\\r\\n  <div class=\\\"csui-template-header\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.header : depth0), depth0))\n    + \"</div>\\r\\n  <div class=\\\"csui-template-body\\\">\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.body : depth0), depth0))\n    + \"</div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_widget.drag.template', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman.panel',[],function(){});\n","csui.define('csui/perspective.manage/impl/pman.panel.view',['require', 'module', 'csui/lib/jquery', 'csui/lib/backbone',\r\n  'csui/lib/underscore', 'csui/lib/marionette',\r\n  \"csui/controls/progressblocker/blocker\",\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/perspective.manage/impl/accordion.view',\r\n  'csui/perspective.manage/impl/perspectivelayouts',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'hbs!csui/perspective.manage/impl/pman.panel',\r\n  'hbs!csui/perspective.manage/impl/list.item',\r\n  'hbs!csui/perspective.manage/impl/list',\r\n  'hbs!csui/perspective.manage/impl/widget.drag.template',\r\n  'css!csui/perspective.manage/impl/pman.panel'\r\n\r\n], function (require, module, $, Backbone, _, Marionette, BlockerView, PerfectScrollingBehavior,\r\n    AccordionView, perspectiveLayouts, Lang, template, ListItemTemplate, ListTemplate,\r\n    WidgetDragTemplate) {\r\n  'use strict';\r\n\r\n  var PManPanelView = Marionette.ItemView.extend({\r\n    tagName: 'div',\r\n\r\n    template: template,\r\n\r\n    events: {\r\n      'click @ui.layoutTab': \"onTabClicked\"\r\n    },\r\n\r\n    ui: {\r\n      tabPannel: \".csui-tab-pannel\",\r\n      listPannel: \".csui-list-pannel\",\r\n      layoutTab: \".csui-layout-tab\",\r\n      widgetTab: \".csui-widget-tab\",\r\n      template: \".csui-widget-template\"\r\n    },\r\n\r\n    className: 'csui-pman-panel',\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        layoutTabTitle: Lang.layoutTabTitle,\r\n        templateMessage: Lang.templateMessage\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      this.ui.widgetTab.hide();\r\n      this.ui.layoutTab.hide();\r\n      this.accordionRegion = new Marionette.Region({\r\n        el: this.ui.widgetTab\r\n      });\r\n      this.accordionView = new AccordionView();\r\n      this.accordionRegion.show(this.accordionView);\r\n      this.blockActions();\r\n      this.listenTo(this.accordionView, \"item:clicked\", this.onTabClicked)\r\n          .listenTo(this.accordionView, \"items:fetched\", function () {\r\n            this.unblockActions();\r\n            this.ui.layoutTab.show();\r\n            this.ui.widgetTab.show();\r\n          });\r\n    },\r\n\r\n    constructor: function PManPanelView(options) {\r\n      this.options = options || {};\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n      BlockerView.imbue(this);\r\n      this.listenTo(this, 'reset:items', function () {\r\n        this.listView && this.listView.destroy();\r\n      });\r\n    },\r\n\r\n    onTabClicked: function (options) {\r\n      var args = options.data ? options : {\r\n        data: {\r\n          items: perspectiveLayouts\r\n        }\r\n      };\r\n      args.draggable = !!args.data.draggable;\r\n      args.itemClassName = !!args.data.draggable ? \"csui-widget-item icon-draggable-handle\" : \"csui-layout-item\";\r\n      args.pmanView = this.options.pmanView;\r\n\r\n      this.ui.tabPannel.addClass(\"binf-hidden\");\r\n      this.listregion = new Marionette.Region({\r\n        el: this.ui.listPannel\r\n      });\r\n      this.listView = new ListView(args);\r\n      this.listregion.show(this.listView);\r\n\r\n      // Register events on listview to handle back\r\n      this.listenTo(this.listView, \"before:destroy\", function () {\r\n        this.ui.tabPannel.removeClass(\"binf-hidden\");\r\n      }).listenTo(this.listView, \"click:back\", function () {\r\n        this.listView.destroy();\r\n      });\r\n    },\r\n  });\r\n\r\n  var ListItemView = Marionette.ItemView.extend({\r\n    constructor: function ListItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    template: ListItemTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        draggable: !!this.options.draggable,\r\n        className: this.options.itemClassName,\r\n        iconClass: this.model.get('icon')\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      widget: '.csui-widget-item'\r\n    },\r\n\r\n    events: {\r\n      'dragstart @ui.widget': 'onDragStart',\r\n      'dragend @ui.widget': 'onDragEnd'\r\n    },\r\n\r\n    triggers: {\r\n      'click .csui-layout-item:not(.binf-active)': 'change:layout'\r\n    },\r\n\r\n    onRender: function () {\r\n      if (this.model.get('type') === this.options.pmanView.perspective.get('perspective').type) {\r\n        this.trigger('set:active');\r\n      }\r\n      var dndContainer = $('.perspective-editing .csui-dnd-container')\r\n      if (dndContainer.length) {\r\n        this._makeWidgetSortable();\r\n      }\r\n    },\r\n\r\n    _makeWidgetSortable: function() {\r\n      var self = this;\r\n      this.$el.data('pman.widget', this.model);\r\n      this.$el.sortable({\r\n        connectWith: \".perspective-editing .csui-dnd-container\",\r\n        containment: \".perspective-editing .csui-dnd-container\",\r\n        helper: function (event, ui) {\r\n          // Drag Image\r\n          self.widgetDragTemplate = new widgetDragTemplateView({\r\n            title: self.model.attributes.title,\r\n            newWidget: self.model\r\n          });\r\n          self.widgetDragTemplate.render();\r\n          //Set width and height to prevent jquery ui overriding Drag item width and height\r\n          self.widgetDragTemplate.$el.width('250px');\r\n          self.widgetDragTemplate.$el.height('250px');\r\n          self.widgetDragTemplate.$el.css({opacity: 0.75});\r\n          self.widgetDragTemplate.$el.appendTo(self.options.pmanView.$el.find('.pman-header'));\r\n          return self.widgetDragTemplate.$el;\r\n        },\r\n        cursor: 'grabbing',\r\n        tolerance: 'pointer',\r\n        cursorAt: {top: 50, left: 50},\r\n        start: function (event, ui) {\r\n          ui.item.css('display', 'block');\r\n          ui.placeholder.css('display', 'none');\r\n        },\r\n        over: function (event, ui) {\r\n          ui.placeholder.css('display', 'none');\r\n        },\r\n        out: function (event, ui) {\r\n            ui.placeholder.css('display', 'block');\r\n            self.dragStart();\r\n        }, \r\n        stop: function () {\r\n            self.dragEnd();\r\n        }\r\n      });\r\n    },\r\n\r\n\r\n    onDragStart: function (event) {\r\n      event.originalEvent.dataTransfer.setData(\"text\", JSON.stringify(this.model.toJSON()))\r\n      var template = $('.csui-template-wrapper');\r\n      template.find(\".csui-template-header\").text(this.model.attributes.title);\r\n      if (!!event.originalEvent.dataTransfer.setDragImage) {\r\n        // IE11 dont have 'setDragImage'\r\n        event.originalEvent.dataTransfer.setDragImage(template[0], 50, 50);\r\n      }\r\n      this.dragStart();\r\n    },\r\n\r\n    onDragEnd: function (event) {\r\n      this.dragEnd();\r\n    },\r\n\r\n    dragStart: function () {\r\n      this.options.pmanView.$el.find('.csui-pman-panel').addClass(\"csui-pman-drag-start\");\r\n    },\r\n\r\n    dragEnd: function () {\r\n      this.options.pmanView.$el.find('.csui-pman-panel').removeClass(\"csui-pman-drag-start\");\r\n    }\r\n  });\r\n\r\n  var ListView = Marionette.CompositeView.extend({\r\n\r\n    constructor: function ListView(options) {\r\n      options || (options = {});\r\n      options.data || (options.data = {});\r\n\r\n      // Provide the perfect scrollbar to every list view by default\r\n      // (Behaviors cannot be inherited; add the PerfectScrolling\r\n      //  to the local clone of the descendant's behaviors.)\r\n      if (!(this.behaviors && _.any(this.behaviors, function (behavior, key) {\r\n        return behavior.behaviorClass === PerfectScrollingBehavior;\r\n      }))) {\r\n        this.behaviors = _.extend({\r\n          PerfectScrolling: {\r\n            behaviorClass: PerfectScrollingBehavior,\r\n            contentParent: '.csui-pman-list',\r\n            suppressScrollX: true,\r\n            // like bottom padding of container, otherwise scrollbar is shown always\r\n            scrollYMarginOffset: 15\r\n          }\r\n        }, this.behaviors);\r\n      }\r\n\r\n      Marionette.CompositeView.call(this, options);\r\n\r\n      // TODO: Deprecate this, or fix it, so that a collection can be created\r\n      // without breaking the client\r\n      // Passing a collection without knowing its model schema and identifier\r\n      // is not possible in Backbone, where the collections should be indexed\r\n      if (this.options.data && this.options.data.items) {\r\n        if (!this.collection) {\r\n          var ViewCollection = Backbone.Collection.extend({\r\n            model: Backbone.Model.extend({\r\n              idAttribute: null\r\n            })\r\n          });\r\n          this.collection = new ViewCollection();\r\n        }\r\n        this.collection.add(this.options.data.items);\r\n      }\r\n    },\r\n\r\n    ui: {\r\n      back: '.cs-go-back'\r\n    },\r\n    className: 'csui-pman-list',\r\n\r\n    events: {\r\n      'click @ui.back': 'onClickBack'\r\n    },\r\n\r\n    childEvents: {\r\n      'change:layout': 'onChangeLayout',\r\n      'set:active': 'setActive'\r\n    },\r\n\r\n    template: ListTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        goBackTooltip: Lang.goBackTooltip\r\n      };\r\n    },\r\n\r\n    childViewContainer: '.cs-list-group',\r\n\r\n    childView: ListItemView,\r\n\r\n    childViewOptions: function () {\r\n      return this.options;\r\n    },\r\n\r\n    onClickBack: function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.trigger('click:back');\r\n    },\r\n\r\n    setActive: function (childView) {\r\n      this.$el.find('.csui-layout-item').removeClass('binf-active');\r\n      childView.$el.find('.csui-layout-item').addClass('binf-active');\r\n    },\r\n\r\n    onChangeLayout: function (childView) {\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (ModalAlertView) {\r\n        ModalAlertView.confirmWarning(Lang.changePageLayoutConfirmatonText, Lang.layoutTabTitle,\r\n            {\r\n              buttons: {\r\n                showYes: true,\r\n                labelYes: Lang.proceedButton,\r\n                showNo: true,\r\n                labelNo: Lang.changeLayoutCancelButton\r\n              }\r\n            })\r\n            .done(function (labelYes) {\r\n              if (labelYes) {\r\n                self.setActive(childView);\r\n                self.options.pmanView.trigger(\"change:layout\", childView.model.get('type'));\r\n              }\r\n            });\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  var widgetDragTemplateView = Marionette.ItemView.extend({\r\n    constructor: function ListItemView(options) {\r\n      Marionette.ItemView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    tagName: 'div',\r\n\r\n    className: 'csui-template-wrapper',\r\n\r\n    template: WidgetDragTemplate,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        header: this.options && this.options.title,\r\n        body: Lang.templateMessage\r\n\r\n      }\r\n    },\r\n    onRender: function () {\r\n      this.$el.data('pman.widget', this.options.newWidget);\r\n    }\r\n  });\r\n\r\n  return PManPanelView;\r\n});\r\n\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/pman',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"pman-backdrop\\\"></div>\\r\\n<div class=\\\"pman-header\\\">\\r\\n  <div class=\\\"pman-header-backdrop\\\"></div>\\r\\n  <div class=\\\"pman-tools-container\\\">\\r\\n    <div class=\\\"pman-left-tools\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"pman-toolitem\\\">\\r\\n          <button class=\\\"icon icon-toolbarAdd\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.addWidget : depth0), depth0))\n    + \"\\\"></button>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"pman-pannel-wrapper\\\"></div>\\r\\n    </div>\\r\\n    <div class=\\\"pman-right-tools\\\">\\r\\n      <ul>\\r\\n        <li class=\\\"pman-toolitem\\\">\\r\\n          <button class=\\\"icon icon-save\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.save : depth0), depth0))\n    + \"\\\" disabled></span>\\r\\n        </li>\\r\\n        <li class=\\\"pman-toolitem\\\">\\r\\n          <button class=\\\"icon cancel-edit\\\" title=\\\"\"\n    + this.escapeExpression(this.lambda((depth0 != null ? depth0.cancel : depth0), depth0))\n    + \"\\\"></button>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_pman', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/pman',[],function(){});\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/impl/options.form.wrapper',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-pman-form-header\\\">\\r\\n    <div class=\\\"csui-pman-form-title\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"title\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n    <div class=\\\"csui-pman-form-description\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"description\",\"hash\":{}}) : helper)))\n    + \"</div>\\r\\n</div>\\r\\n<div class=\\\"csui-pman-form-content\\\"></div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_impl_options.form.wrapper', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/impl/options.form',[],function(){});\n","csui.define('csui/perspective.manage/impl/options.form.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/controls/mixins/layoutview.events.propagation/layoutview.events.propagation.mixin',\r\n  'csui/controls/tile/behaviors/perfect.scrolling.behavior',\r\n  'csui/controls/form/form.view',\r\n  'hbs!csui/perspective.manage/impl/options.form.wrapper',\r\n  'i18n!csui/perspective.manage/impl/nls/lang',\r\n  'css!csui/perspective.manage/impl/options.form',\r\n], function (_, $, Backbone, Marionette, LayoutViewEventsPropagationMixin, PerfectScrollingBehavior,\r\n    FormView, template, lang) {\r\n\r\n  var WidgetOptionsFormWrapperView = Marionette.LayoutView.extend({\r\n\r\n    template: template,\r\n\r\n    className: 'csui-pman-form-wrapper',\r\n\r\n    regions: {\r\n      bodyRegion: '.csui-pman-form-content'\r\n    },\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        title: this.options.manifest.title,\r\n        description: this.options.manifest.description\r\n      }\r\n    },\r\n\r\n    constructor: function WidgetOptionsFormHeaderView(options) {\r\n      this.options = options || {};\r\n      this.manifest = this.options.manifest;\r\n      Marionette.LayoutView.prototype.constructor.apply(this, arguments);\r\n    },\r\n\r\n    _createForm: function () {\r\n      this.widgetOptionsFormView = new WidgetOptionsFormView({\r\n        context: this.options.context,\r\n        model: this._prepareFormModel(),\r\n        mode: 'create',\r\n      });\r\n\r\n      this.listenToOnce(this.widgetOptionsFormView, 'render:form', function () {\r\n        this.trigger('render:form');\r\n      }.bind(this))\r\n\r\n      this.listenTo(this.widgetOptionsFormView, 'change:field', function (field) {\r\n        this.trigger('change:field', field);\r\n      }.bind(this))\r\n    },\r\n\r\n    _hasSchema: function () {\r\n      if (!this.manifest || !this.manifest.schema || !this.manifest.schema.properties ||\r\n          _.isEmpty(this.manifest.schema.properties)) {\r\n        // No configuration required for the widget\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    onRender: function () {\r\n      if (this._hasSchema()) {\r\n        this._createForm();\r\n        this.bodyRegion.show(this.widgetOptionsFormView);\r\n      } else {\r\n        this.trigger('render:form');\r\n      }\r\n    },\r\n\r\n    getValues: function () {\r\n      if (!this._hasSchema()) {\r\n        return undefined;\r\n      }\r\n      return this.widgetOptionsFormView.getValues();\r\n    },\r\n\r\n    validate: function () {\r\n      if (!this._hasSchema()) {\r\n        return true;\r\n      }\r\n      return this.widgetOptionsFormView.validate();\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.options.widgetConfig.type ===\r\n             'csui/perspective.manage/widgets/perspective.widget';\r\n    },\r\n\r\n    _prepareFormModel: function () {\r\n      var data = this.options.widgetConfig.options || {};\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, widget will be added as preview for original widget\r\n        // Resolve original widget options from preview widget's options\r\n        data = data.options || {};\r\n      }\r\n      // Clone schema and options from manifest as they would change by form.view\r\n      var schema      = JSON.parse(JSON.stringify(this.manifest.schema)),\r\n          formOptions = JSON.parse(JSON.stringify(this.manifest.options || {}));\r\n\r\n      this._addWidgetSizePropertyIfSupported(schema, formOptions, data);\r\n\r\n      var model = new Backbone.Model({\r\n        schema: schema,\r\n        options: formOptions,\r\n        data: data\r\n      });\r\n      return model;\r\n    },\r\n\r\n    /**\r\n     * Add a new properties to form to change \"Size\" if widgets.\r\n     * Size that can be configured depends on perspective's supported sizes as well as supported sizes of widget\r\n     *\r\n     */\r\n    _addWidgetSizePropertyIfSupported: function (schema, options, data) {\r\n      if (!this.options.perspectiveView.getSupportedWidgetSizes) {\r\n        // Perspective view doesn't support configuring widget sizes\r\n        return;\r\n      }\r\n      var supportedKinds = this.options.perspectiveView.getSupportedWidgetSizes(this.manifest,\r\n          this.options.widgetView);\r\n      if (!supportedKinds || supportedKinds.length === 0) {\r\n        // No supported sizes found for widget\r\n        return;\r\n      }\r\n      var kindSchema = {\r\n        title: lang.widgetSizeTitle,\r\n        description: lang.widgetSizeDescription,\r\n        type: 'string',\r\n        enum: _.map(supportedKinds, function (sk) {\r\n          return sk.kind;\r\n        })\r\n      };\r\n      var kindOption = {\r\n        type: 'select',\r\n        optionLabels: _.map(supportedKinds, function (sk) {\r\n          return sk.label;\r\n        }),\r\n        removeDefaultNone: true\r\n      };\r\n      var selectedKind = _.find(supportedKinds, function (size) {return size.selected;});\r\n      if (!!selectedKind) {\r\n        data[WidgetOptionsFormWrapperView.widgetSizeProperty] = selectedKind.kind;\r\n      }\r\n      var sizeSchema = {};\r\n      sizeSchema[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindSchema;\r\n      schema.properties = _.extend(sizeSchema, schema.properties);\r\n\r\n      var sizeOptions = {};\r\n      sizeOptions[WidgetOptionsFormWrapperView.widgetSizeProperty] = kindOption;\r\n      options.fields = _.extend(sizeOptions, options.fields);\r\n\r\n      schema.required = schema.required || [];\r\n      schema.required.push(WidgetOptionsFormWrapperView.widgetSizeProperty);\r\n    },\r\n\r\n  }, {\r\n    widgetSizeProperty: '__widgetSize'\r\n  });\r\n\r\n  var WidgetOptionsFormView = FormView.extend({\r\n\r\n    className: function () {\r\n      var className = FormView.prototype.className.call(this);\r\n      return className + ' perspective-widget-form';\r\n    },\r\n\r\n    constructor: function WidgetOptionsFormView(options) {\r\n      FormView.apply(this, arguments);\r\n    },\r\n\r\n    _modifyModel: function () {\r\n      this._normalizeSchemaToFormView();\r\n      FormView.prototype._modifyModel.apply(this, arguments);\r\n    },\r\n\r\n    _normalizeSchemaToFormView: function () {\r\n      var self = this;\r\n      if (!this.alpaca.options) {\r\n        this.alpaca.options = {};\r\n      }\r\n      if (!this.alpaca.options.fields) {\r\n        this.alpaca.options.fields = {};\r\n      }\r\n      this._normalizeOptions(this.alpaca.schema.properties, this.alpaca.options.fields,\r\n          this.alpaca.data);\r\n    },\r\n\r\n    /**\r\n     * Recursively fill options for all respective schemas\r\n     */\r\n    _normalizeOptions: function (schemaProperies, optionFields, data) {\r\n      var self = this;\r\n      _.each(schemaProperies, function (field, fieldId) {\r\n        var fieldOpts = optionFields[fieldId];\r\n        var fieldData = data[fieldId];\r\n        if (!fieldOpts) {\r\n          optionFields[fieldId] = fieldOpts = {}\r\n        }\r\n        switch (field.type) {\r\n        case 'array':\r\n          if (!fieldOpts.fields) {\r\n            _.defaults(fieldOpts, {\r\n              fields: {\r\n                item: {}\r\n              }\r\n            });\r\n          }\r\n          if (!!fieldOpts.items) {\r\n            fieldOpts.fields.item = fieldOpts.items;\r\n          }\r\n          if (field.items.type === 'object') {\r\n            fieldOpts.fields.item.fields || (fieldOpts.fields.item.fields = {});\r\n            if (!fieldData) {\r\n              data[fieldId] = fieldData = [{}];\r\n            }\r\n            self._normalizeOptions(field.items.properties, fieldOpts.fields.item.fields,\r\n                fieldData[0]);\r\n          }\r\n          if (!fieldData) {\r\n            data[fieldId] = [null];\r\n          }\r\n          break;\r\n        case 'object':\r\n          if (!fieldData) {\r\n            data[fieldId] = fieldData = {};\r\n          }\r\n          if (!fieldOpts.fields) {\r\n            fieldOpts.fields = {};\r\n            self._normalizeOptions(field.properties, fieldOpts.fields, fieldData);\r\n          }\r\n          break;\r\n        default:\r\n          if (!fieldData) {\r\n            data[fieldId] = null;\r\n          }\r\n          break;\r\n        }\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  _.extend(WidgetOptionsFormView.prototype, LayoutViewEventsPropagationMixin);\r\n\r\n  return WidgetOptionsFormWrapperView;\r\n\r\n});\r\n\n","csui.define('csui/perspective.manage/behaviours/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/behaviours/impl/nls/root/lang',{\r\n  deleteConfirmMsg: 'Are you sure, you want to remove widget?',\r\n  deleteConfirmTitle: 'Remove Widget',\r\n  replaceConfirmMsg: 'Are you sure, you want to replace widget?',\r\n  replaceConfirmTitle: 'Replace Widget',\r\n  widgetSizeTitle: 'Widget size',\r\n  widgetSizeDescription: 'Determines how much space the widget occupies. Note that widgets are re-sized automatically to display optimally on smaller screens.'\r\n});\r\n\n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/behaviours/impl/widget.masking',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    return \"<div class=\\\"csui-pman-widget-masking\\\">\\r\\n  <div class=\\\"csui-pman-widget-close\\\">\\r\\n    <div class=\\\"formfield_clear\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"csui-pman-popover-right csui-pman-popover-holder\\\"></div>\\r\\n<div class=\\\"csui-pman-popover-left csui-pman-popover-holder\\\"></div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_behaviours_impl_widget.masking', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/behaviours/impl/widget.masking',[],function(){});\n","/**\r\n * Responsibilities:\r\n *  - Masking the unit level widget of perpsective. In case of grid.view, it will be cell\r\n *  - Listen and handle DnD of widgets and act accordingly - replace widgets\r\n *  - Fire \"replace:widget\" on dropping of any widget\r\n *  - Deleting a widget from perspective\r\n *  - Configuration of widget using callouts\r\n *\r\n * Usage:\r\n *  - Should be applied to widgets of perspective to be able to configure them\r\n *\r\n * Required Inputs:\r\n *  - perspectiveView\r\n *  - widgetView\r\n *\r\n * Events:\r\n *  - replace:widget\r\n *    - Fires on perspectiveView\r\n *    - When dropping any widget from tools on perpsective widget\r\n *  - delete:widget\r\n *    - Fires on perspectiveView\r\n *    - When deleting a perspective widget\r\n *  - update:widget:size\r\n *    - Firex Fires on perspectiveView\r\n *    - When change in size of widget\r\n *  - update:widget:config\r\n *    - Firex Fires on perspectiveView\r\n *    - When widget configuration options updated\r\n */\r\ncsui.define('csui/perspective.manage/behaviours/pman.widget.config.behaviour',['require', 'i18n', 'csui/lib/underscore', 'csui/lib/jquery',\r\n  'csui/lib/marionette', 'csui/lib/backbone', 'csui/utils/log',\r\n  'csui/models/widget/widget.model',\r\n  'csui/perspective.manage/impl/options.form.view',\r\n  'i18n!csui/perspective.manage/behaviours/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/behaviours/impl/widget.masking',\r\n  'css!csui/perspective.manage/behaviours/impl/widget.masking',\r\n], function (require, i18n, _, $, Marionette, Backbone, log, WidgetModel, WidgetOptionsFormView,\r\n    lang,\r\n    maskingTemplate) {\r\n  'use strict';\r\n\r\n  /**\r\n   * View to mask the perspective widget and handles the widget configuration\r\n   */\r\n  var WidgetMaskingView = Marionette.ItemView.extend({\r\n    template: maskingTemplate,\r\n    className: function () {\r\n      return WidgetMaskingView.className\r\n    },\r\n\r\n    ui: {\r\n      delete: '.csui-pman-widget-close',\r\n      masking: '.csui-pman-widget-masking'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.masking': '_showCallout',\r\n      'drop': 'onDrop',\r\n      'dragover': 'onDragOver',\r\n      'dragenter': 'onDragEnter',\r\n      'dragleave': 'onDragLeave',\r\n      'click @ui.delete': 'onDeleteClick'\r\n    },\r\n\r\n    constructor: function WidgetMaskingView(options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.dropCounter = 0;\r\n      this.manifest = undefined;\r\n      this.perspectiveView = options.perspectiveView;\r\n      this.widgetView = options.widgetView;\r\n      this.widgetConfig = options.widgetConfig;\r\n    },\r\n\r\n    onRender: function () {\r\n      var self = this;\r\n      this._loadManifest().done(function (manifest) {\r\n        self._createOptionsForm(function () {\r\n          self._updateWidgetOptions();\r\n        });\r\n      });\r\n    },\r\n\r\n    _showCallout: function () {\r\n      if (!this.widgetConfig || _.isEmpty(this.widgetConfig) ||\r\n          this.widgetConfig.type === 'csui/perspective.manage/widgets/perspective.placeholder') {\r\n        // Widget configuration not found. Hence cannot show callout\r\n        return;\r\n      }\r\n      // open widget configuration callout\r\n      this._loadManifest().done(function (manifest) {\r\n        this._showOptionsCallout(manifest);\r\n      }.bind(this));\r\n    },\r\n\r\n    _showOptionsCallout: function (manifest) {\r\n      this._calculatePopoverPlacement();\r\n\r\n      if (!!this.$popoverEl.data('binf.popover')) {\r\n        // Currently showing popover. Close it.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        return;\r\n      }\r\n      this.perspectiveView.$el.find('.' + WidgetMaskingView.className +\r\n                                    ' .csui-pman-popover-holder').binf_popover('destroy');\r\n\r\n      if (!!this.optionsFormView) {\r\n        // Toggle. Open popover with existing form.view\r\n        this._showPopover();\r\n      } else {\r\n        this._createOptionsForm();\r\n      }\r\n    },\r\n\r\n    _createOptionsForm: function (afterRenderCallback) {\r\n      this.optionsFormView = new WidgetOptionsFormView(_.defaults({\r\n        context: this.perspectiveView.options.context,\r\n        manifest: this.manifest\r\n      }, this.options));\r\n      if (!!afterRenderCallback) {\r\n        this.optionsFormView.listenToOnce(this.optionsFormView, 'render:form', afterRenderCallback);\r\n      }\r\n      this.optionsFormView.render();\r\n      this.optionsFormView.listenTo(this.optionsFormView, 'change:field',\r\n          this._onChangeField.bind(this));\r\n    },\r\n\r\n    _calculatePopoverPlacement: function () {\r\n      var adjust       = this._determineCalloutPlacement(),\r\n          contentClass = (i18n && i18n.settings.rtl) ?\r\n                         adjust.placement == 'right' ? adjust.mirror ? 'right' : 'left' : 'right' :\r\n                         ((adjust.placement == 'left' && adjust.mirror) ? 'right' :\r\n                          adjust.placement);\r\n      this.$popoverEl = this.$el.find('.csui-pman-popover-' + contentClass);\r\n      this.placement = adjust.placement;\r\n    },\r\n\r\n    /**\r\n     * Determite callout position and show widget configuration callout\r\n     */\r\n    _showPopover: function () {\r\n      var popoverOptions = {\r\n        html: true,\r\n        content: this.optionsFormView.el,\r\n        trigger: 'manual',\r\n        viewport: { // Limit popover placement to perspective panel only\r\n          selector: this.options.perspectiveSelector,\r\n          padding: 15\r\n        },\r\n        placement: this.placement\r\n      };\r\n      this.$popoverEl.binf_popover(popoverOptions);\r\n      this.$popoverEl.off('hidden.binf.popover')\r\n          .on('hidden.binf.popover', this._handleCalloutHide.bind(this));\r\n      this.$popoverEl.binf_popover('show');\r\n      this._registerPopoverEvents();\r\n    },\r\n\r\n    _registerPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').on('click.' + this.cid, {view: this},\r\n          this._documentClickHandler);\r\n      $('.pman-container').on('click.' + this.cid, {view: this}, this._documentClickHandler);\r\n    },\r\n\r\n    _unregisterPopoverEvents: function () {\r\n      $('.perspective-editing .cs-perspective-panel').off('click.' + this.cid,\r\n          this._documentClickHandler);\r\n      $('.pman-container').off('click.' + this.cid, this._documentClickHandler);\r\n    },\r\n\r\n    /**\r\n     * Handle callout data update to widget on hidding of popover\r\n     */\r\n    _handleCalloutHide: function () {\r\n      this._unregisterPopoverEvents();\r\n      this._updateWidgetOptions();\r\n    },\r\n\r\n    _updateWidgetOptions: function () {\r\n      var isValid = this.optionsFormView.validate();\r\n      var updatedConfig = this.optionsFormView.getValues();\r\n      this.perspectiveView.trigger(\"update:widget:options\", this.widgetView, isValid,\r\n          updatedConfig);\r\n      if (isValid) {\r\n        this.widgetView.$el.removeClass('binf-has-error');\r\n      } else {\r\n        this.widgetView.$el.addClass('binf-has-error');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Listen document click to close callouts\r\n     */\r\n    _documentClickHandler: function (event) {\r\n      var self = event.data.view;\r\n      if (!!$(event.target).closest('.binf-popover').length) {\r\n        // Click on popover\r\n        return;\r\n      }\r\n      if (self.$el.is(event.target) || !!self.$el.has(event.target).length) {\r\n        // Click on current widget\r\n        return;\r\n      }\r\n      if (!$.contains(document, event.target)) {\r\n        // Not Exist in DOM\r\n        return;\r\n      }\r\n      self._unregisterPopoverEvents();\r\n      self.$popoverEl.binf_popover('destroy');\r\n    },\r\n\r\n    _onChangeField: function (field) {\r\n      if (field.name === WidgetOptionsFormView.widgetSizeProperty) {\r\n        // Notify perspective panel about size change to do respective DOM / style updates\r\n        this.perspectiveView.trigger(\"update:widget:size\", this.options.widgetView, field.value);\r\n        // Close popover for now.\r\n        this.$popoverEl.binf_popover('destroy');\r\n        // TODO Re-position popover as widget size may change\r\n        // this._calculatePopoverPlacement();\r\n        // this._showPopover();\r\n      }\r\n    },\r\n\r\n    _determineCalloutPlacement: function () {\r\n      var offset    = this.$el.offset(),\r\n          left      = offset.left,\r\n          width     = $(document).outerWidth(),\r\n          right     = $(document).width() - (left + this.$el.width()),\r\n          isRtl     = i18n && i18n.settings.rtl,\r\n          placement = isRtl ? right < 550 ? 'left' : 'right' : left < 550 ? 'right' : 'left',\r\n          mirror    = false;\r\n      var contentWidth = isRtl ? right + this.$el.width() + 500 :\r\n                         this.$el.offset().left + this.$el.width() + 500;\r\n      var documentWidth = $(document).width();\r\n      if ((contentWidth > documentWidth) &&\r\n          (!isRtl && placement == 'right' || isRtl && placement == 'left')) {\r\n        placement = placement == 'right' ? 'left' : 'right';\r\n        mirror = true;\r\n      }\r\n      return {\r\n        placement: placement,\r\n        mirror: mirror\r\n      };\r\n    },\r\n\r\n    _isPreviewWidget: function () {\r\n      return this.widgetConfig.type === WidgetMaskingView.perspectiveWidget;\r\n    },\r\n\r\n    _loadManifest: function () {\r\n      if (this.manifest !== undefined) {\r\n        return $.Deferred().resolve(this.manifest);\r\n      }\r\n      if (this._isPreviewWidget()) {\r\n        // For widgets added using DnD, get manifest from perspective widget's options \r\n        // since Perspective widget will be added as preview for original widget\r\n        this.manifest = this.widgetConfig.options.widget.get('manifest');\r\n        return this._loadManifest();\r\n      }\r\n      var deferred = $.Deferred();\r\n      var self        = this,\r\n          widgetModel = new WidgetModel({id: this.widgetConfig.type});\r\n      widgetModel.fetch().then(function () {\r\n        self.manifest = widgetModel.get('manifest');\r\n        deferred.resolve(self.manifest);\r\n      }, function (error) {\r\n        deferred.reject(error);\r\n      });\r\n      return deferred.promise();\r\n    },\r\n\r\n    onDeleteClick: function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        alertDialog.confirmQuestion(lang.deleteConfirmMsg, lang.deleteConfirmTitle)\r\n            .done(function (yes) {\r\n              if (yes) {\r\n                self._doDeleteWidget();\r\n              }\r\n            });\r\n      });\r\n    },\r\n\r\n    _doDeleteWidget: function () {\r\n      this.perspectiveView.trigger(\"delete:widget\", this.widgetView);\r\n    },\r\n\r\n    _doReplaceWidget: function (widgetToReplace) {\r\n      var manifest = (widgetToReplace.get('manifest') || {});\r\n      this.perspectiveView.trigger('replace:widget', this.widgetView, {\r\n        type: WidgetMaskingView.perspectiveWidget,\r\n        kind: manifest.kind,\r\n        options: {\r\n          options: {}, // To be used and filled by callout form\r\n          widget: widgetToReplace\r\n        }\r\n      });\r\n    },\r\n\r\n    onDragOver: function (event) {\r\n      event.preventDefault();\r\n    },\r\n\r\n    onDragEnter: function (event) {\r\n      event.preventDefault();\r\n      this.dropCounter++;\r\n      this.$el.addClass('csui-widget-drop');\r\n    },\r\n\r\n    onDragLeave: function () {\r\n      this.dropCounter--;\r\n      if (this.dropCounter === 0) {\r\n        this.$el.removeClass('csui-widget-drop');\r\n      }\r\n    },\r\n\r\n    _extractWidgetToDrop: function (event) {\r\n      var dragData = event.originalEvent.dataTransfer.getData(\"text\");\r\n      if (!dragData) {\r\n        return undefined;\r\n      }\r\n      try { // TODO get rid of try catch and handle like non-droppable object\r\n        var widgetToReplace = new WidgetModel(JSON.parse(dragData));\r\n        return widgetToReplace;\r\n      } catch (e) {\r\n        // Unsupported drop\r\n        return false;\r\n      }\r\n    },\r\n\r\n    onDrop: function (event) {\r\n      this.onDragLeave();\r\n      var widgetToReplace = this._extractWidgetToDrop(event);\r\n      if (!widgetToReplace) {\r\n        return;\r\n      }\r\n      if (this.widgetConfig.type === WidgetMaskingView.placeholderWidget) {\r\n        this._doReplaceWidget(widgetToReplace);\r\n      } else {\r\n        var self = this;\r\n        require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n          alertDialog.confirmQuestion(lang.replaceConfirmMsg, lang.replaceConfirmTitle)\r\n              .done(function (userConfirmed) {\r\n                if (userConfirmed) {\r\n                  self._doReplaceWidget(widgetToReplace);\r\n                }\r\n              });\r\n        });\r\n      }\r\n    }\r\n\r\n  }, {\r\n    className: 'csui-configure-perspective-widget',\r\n    perspectiveWidget: 'csui/perspective.manage/widgets/perspective.widget',\r\n    placeholderWidget: 'csui/perspective.manage/widgets/perspective.placeholder',\r\n    widgetSizeProperty: '__widgetSize'\r\n  });\r\n\r\n  var PerspectiveWidgetConfigurationBehaviour = Marionette.Behavior.extend({\r\n\r\n    defaults: {\r\n      perspectiveSelector: '.perspective-editing .cs-perspective > div'\r\n    },\r\n\r\n    constructor: function PerspectiveWidgetConfigurationBehaviour(options, view) {\r\n      if (!options.perspectiveView) {\r\n        throw new Marionette.Error({\r\n          name: 'perspectiveView',\r\n          message: 'Undefined perspectiveView options'\r\n        });\r\n      }\r\n      this.perspectiveView = options.perspectiveView;\r\n      Marionette.Behavior.prototype.constructor.apply(this, arguments);\r\n      this.view = view;\r\n      _.extend(this.perspectiveView, {\r\n        getPManPlaceholderWidget: function () {\r\n          return {\r\n            type: WidgetMaskingView.placeholderWidget,\r\n            options: {}\r\n          };\r\n        }\r\n      })\r\n    },\r\n\r\n    _ensureWidgetElement: function () {\r\n      if (!_.isObject(this.$widgetEl)) {\r\n        // Consider element to add mask can be provided through options\r\n        this.$widgetEl = this.options.el ? $(this.options.el) : this.view.$el;\r\n      }\r\n      if (!this.$widgetEl || this.$widgetEl.length === 0) {\r\n        throw new Marionette.Error('An \"el\" ' + this.$widgetEl.selector + ' must exist in DOM');\r\n      }\r\n      return true;\r\n    },\r\n\r\n    _checkAndApplyMask: function () {\r\n      if (this.$el.find('.' + WidgetMaskingView.className).length > 0) {\r\n        // Mask exist\r\n        return;\r\n      }\r\n      this._ensureWidgetElement();\r\n\r\n      // Get data configured to widget\r\n      var widgetConfig = this._resolveWidgetConfiguration();\r\n      var maskingView = new WidgetMaskingView(\r\n          _.extend(this.options, {\r\n            widgetView: this.view,\r\n            widgetConfig: widgetConfig\r\n          }));\r\n      maskingView.render();\r\n      this.$widgetEl.append(maskingView.el);\r\n      this.$widgetEl.addClass('csui-pman-editable-widget')\r\n      // To be used perspective.view to show placeholder watermark\r\n      this.$widgetEl.data('pman.widget', {attributes: {manifest: widgetConfig}});\r\n    },\r\n\r\n    _resolveWidgetConfiguration: function () {\r\n      if (!!this.view.model && !!this.view.model.get('widget')) {\r\n        // Try model of widget view - Flow, LCR, Grid.. who even using grid control \r\n        return this.view.model.get('widget');\r\n      }\r\n      if (!!this.view.getPManWidgetConfig && _.isFunction(this.view.getPManWidgetConfig)) {\r\n        // Widget configuration can be provided though a function \r\n        return this.view.getPManWidgetConfig();\r\n      }\r\n      if (!!this.options.widgetConfig) {\r\n        // Can be provided through behaviour's options\r\n        return this.options.widgetConfig;\r\n      }\r\n    },\r\n\r\n    onRender: function () {\r\n      this._checkAndApplyMask();\r\n    },\r\n\r\n    onDestroy: function () {\r\n    },\r\n\r\n  });\r\n\r\n  return PerspectiveWidgetConfigurationBehaviour;\r\n\r\n})\r\n;\n","csui.define('csui/perspective.manage/pman.view',['csui/lib/underscore', 'csui/lib/jquery', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'csui/utils/base',\r\n  'csui/utils/non-emptying.region/non-emptying.region',\r\n  'csui/perspective.manage/impl/pman.panel.view',\r\n  'i18n!csui/perspective.manage/impl/nls/root/lang',\r\n  'hbs!csui/perspective.manage/impl/pman',\r\n  'css!csui/perspective.manage/impl/pman',\r\n  'csui/perspective.manage/behaviours/pman.widget.config.behaviour'\r\n], function (_, $, Backbone, Marionette, base, NonEmptyingRegion, PManPanelView, lang, template) {\r\n\r\n  var pmanContainer;\r\n\r\n  var PManView = Marionette.ItemView.extend({\r\n\r\n    className: 'pman pman-container',\r\n    template: template,\r\n\r\n    templateHelpers: function () {\r\n      return {\r\n        addWidget: lang.addWidget,\r\n        save: lang.save,\r\n        cancel: lang.cancel\r\n      };\r\n    },\r\n\r\n    ui: {\r\n      \"pmanPanel\": \".pman-header .pman-pannel-wrapper\",\r\n      'cancelEdit': '.pman-header .cancel-edit',\r\n      'addIcon': '.pman-header .icon-toolbarAdd',\r\n      'saveBtn': '.pman-header .icon-save'\r\n    },\r\n\r\n    events: {\r\n      'click @ui.cancelEdit': \"onClickClose\",\r\n      'click @ui.addIcon': \"togglePannel\",\r\n      'click @ui.saveBtn': \"onClickSave\"\r\n    },\r\n\r\n    constructor: function PManView(options) {\r\n      options || (options = {});\r\n      _.defaults(options, {\r\n        applyMasking: this.applyMasking.bind(this),\r\n        container: document.body\r\n      });\r\n      options.container = $(options.container);\r\n      this.context = options.context;\r\n      this._prepareForEdit(options.perspective || options.context.perspective);\r\n      Marionette.ItemView.prototype.constructor.call(this, options);\r\n      this._registerEventHandler();\r\n    },\r\n\r\n    _registerEventHandler: function () {\r\n      this.listenTo(this, 'change:layout', function (newLayoutType) {\r\n        this.perspective.set('perspective', {\r\n          type: newLayoutType,\r\n          options: {perspectiveMode: 'edit'}\r\n        }, {silent: true});\r\n        this._triggerEditMode();\r\n        this.togglePannel();\r\n      });\r\n      this.listenTo(this.context, 'save:perspective', this._savePerspective);\r\n    },\r\n\r\n    _prepareForEdit: function (originalPerspective) {\r\n      if (!originalPerspective) {\r\n        throw new Error(\"Missing perspective\");\r\n      }\r\n      this.perspective = this._clonePrespective(originalPerspective);\r\n      if (this.perspective.isNew()) {\r\n        // No perspectives are configues to current node\r\n        this.perspective.set('perspective', this._getDefaultPerspectiveConfig());\r\n      }\r\n\r\n      var perspectiveOptions = this.perspective.get('perspective').options || {};\r\n      perspectiveOptions.perspectiveMode = 'edit';\r\n    },\r\n\r\n    _clonePrespective: function (original) {\r\n      var perspectiveConfig = original.get('perspective');\r\n      var config = JSON.parse(JSON.stringify(perspectiveConfig));\r\n      original.set('perspective', config);\r\n      return original;\r\n    },\r\n\r\n    show: function () {\r\n      var container = this.getContainer(),\r\n          region    = new NonEmptyingRegion({\r\n            el: container\r\n          });\r\n      region.show(this);\r\n      return this;\r\n    },\r\n\r\n    getContainer: function () {\r\n      if (!pmanContainer || !$.contains(this.options.container, pmanContainer)) {\r\n        pmanContainer = $('<div>', {'class': 'binf-widgets'}).appendTo(this.options.container)[0]\r\n      }\r\n      return pmanContainer;\r\n    },\r\n\r\n    /**\r\n     * Default perspective when no perspectives configured for a container\r\n     */\r\n    _getDefaultPerspectiveConfig: function () {\r\n      // TODO check if LCR is relevant to all containers.\r\n      return {\r\n        \"type\": \"left-center-right\",\r\n        \"options\": {\r\n          \"center\": {\r\n            \"type\": \"csui/widgets/nodestable\"\r\n          }\r\n        }\r\n      };\r\n    },\r\n\r\n    _fetchPerspective: function () {\r\n      // TODO Handle Create perspective\r\n      var self = this;\r\n      if (!this.perspective.isNew()) {\r\n        this.perspective.fetch().then(function () {\r\n          // Enable save button\r\n          self.ui.saveBtn.removeAttr('disabled');\r\n        });\r\n      } else {\r\n        // Enable save button\r\n        self.ui.saveBtn.removeAttr('disabled');\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Updates / creates perspective\r\n     */\r\n    _savePerspective: function (updatedPerspective) {\r\n      this.perspective.set('perspective', updatedPerspective);\r\n      var self = this;\r\n      // Save perspective to server\r\n      this.perspective.save().then(function () {\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          // Perspective save success\r\n          GlobalMessage.showMessage(\"success\", lang.perspectiveSaveSuccess);\r\n          // Update context's perspective and exit from inline editing\r\n          updatedPerspective.id = self.perspective.get('id');\r\n          self.context.perspective.set(updatedPerspective);\r\n          self._doExitPerspective();\r\n        });\r\n      }, function (error) {\r\n        // API error while saving..\r\n        var errorMessage;\r\n        if (error && error.responseJSON && error.responseJSON.error) {\r\n          errorMessage = error.responseJSON.error;\r\n        } else {\r\n          var errorHtml = base.MessageHelper.toHtml();\r\n          base.MessageHelper.reset();\r\n          errorMessage = $(errorHtml).text();\r\n        }\r\n        require([\r\n          'csui/controls/globalmessage/globalmessage'\r\n        ], function (GlobalMessage) {\r\n          GlobalMessage.showMessage(\"error\", errorMessage);\r\n        });\r\n      });\r\n    },\r\n\r\n    onClickSave: function () {\r\n      var self = this;\r\n      require(['csui/dialogs/modal.alert/modal.alert'], function (alertDialog) {\r\n        alertDialog.confirmWarning(lang.saveConfirmMsg, lang.saveConfirmTitle)\r\n            .done(function (yes) {\r\n              if (yes) {\r\n                self.context.triggerMethod('serialize:perspective', self.perspective);\r\n              }\r\n            });\r\n      });\r\n    },\r\n\r\n    onClickClose: function () {\r\n      this._doExitPerspective();\r\n    },\r\n\r\n    togglePannel: function () {\r\n      if (!this.ui.pmanPanel.hasClass('binf-active')) {\r\n        // Reset before showing panel\r\n        this._openToolsPanel();\r\n      } else {\r\n        this._closeToolsPanel();\r\n      }\r\n    },\r\n\r\n    _openToolsPanel: function () {\r\n      this.pmanPanelView.trigger('reset:items');\r\n      this.ui.addIcon.addClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.close);\r\n      this.ui.pmanPanel.addClass('binf-active');\r\n    },\r\n\r\n    _closeToolsPanel: function () {\r\n      this.ui.pmanPanel.removeClass('binf-active');\r\n      this.ui.addIcon.attr(\"title\", lang.addWidget);\r\n      this.ui.addIcon.removeClass('binf-active');\r\n    },\r\n\r\n    applyMasking: function () {\r\n\r\n    },\r\n\r\n    _initializeWidgets: function () {\r\n      this.pmanPanelRegion = new Marionette.Region({\r\n        el: this.ui.pmanPanel\r\n      });\r\n      this.pmanPanelView = new PManPanelView({\r\n        pmanView: this\r\n      });\r\n      this.pmanPanelRegion.show(this.pmanPanelView);\r\n    },\r\n\r\n    _triggerEditMode: function () {\r\n      var perspectiveConfig = new Backbone.Model(this.perspective.get('perspective'));\r\n      this.context.triggerMethod('enter:edit:perspective', perspectiveConfig);\r\n    },\r\n\r\n    onRender: function () {\r\n      var self = this;\r\n      this.options.container.addClass('perspective-editing');\r\n      this.options.applyMasking();\r\n      this._initializeWidgets();\r\n      this._triggerEditMode();\r\n      $(document).on('click.' + this.cid, {view: this}, this._documentClick);\r\n      this._fetchPerspective();\r\n\r\n    },\r\n\r\n    _documentClick: function (event) {\r\n      var self = event.data.view;\r\n      if (self.ui.addIcon.is(event.target) || !!self.ui.addIcon.has(event.target).length) {\r\n        // Add Icon\r\n        return;\r\n      }\r\n      if (self.ui.pmanPanel.is(event.target) || !!self.ui.pmanPanel.has(event.target).length) {\r\n        // Pman panel\r\n        return;\r\n      }\r\n      self._closeToolsPanel();\r\n    },\r\n\r\n    /**\r\n     * Edit from perspective inline editing mode.\r\n     */\r\n    _doExitPerspective: function () {\r\n      this.options.container.removeClass('perspective-editing');\r\n      this.context.triggerMethod('exit:edit:perspective', this.perspective);\r\n      $(document).off('click.' + this.cid, this._documentClick);\r\n      this.trigger('destroy');\r\n    },\r\n\r\n  }, {\r\n    placeHolderWidget: 'csui/perspective.manage/widgets/perspective.placeholder'\r\n  });\r\n\r\n  return PManView;\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/lang',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"csui-placeholder-title\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"\\\">\\r\\n  \"\n    + this.escapeExpression(((helper = (helper = helpers.dndWidgetsHere || (depth0 != null ? depth0.dndWidgetsHere : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"dndWidgetsHere\",\"hash\":{}}) : helper)))\n    + \"\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.placeholder_impl_perspective.placeholder', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',[],function(){});\n","/**\r\n * Placeholder view to represent an empty widget in perpsective.\r\n * This will be replaces by perspective.widget (preview) on dropping of widgets on this\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder',\r\n  'css!csui/perspective.manage/widgets/perspective.placeholder/impl/perspective.placeholder'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectivePlaceholderView = Marionette.ItemView.extend({\r\n    className: 'csui-perspective-placeholder',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      return {\r\n        dndWidgetsHere: lang.dndWidgetsHere\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n    },\r\n\r\n    onShow: function() {\r\n      this.$el.parent().addClass('csui-pman-placeholder-container');\r\n    },\r\n\r\n    onDestroy: function() {\r\n      this.$el.parent().removeClass('csui-pman-placeholder-container');\r\n    }\r\n\r\n  });\r\n  return PerspectivePlaceholderView;\r\n});\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n  \n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/lang',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Click to configure'\r\n});\r\n  \n","\n/* START_TEMPLATE */\ncsui.define('hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',['module','hbs','csui/lib/handlebars'], function( module, hbs, Handlebars ){ \nvar t = Handlebars.template({\"compiler\":[6,\">= 2.0.0-beta.1\"],\"main\":function(depth0,helpers,partials,data) {\n    var helper;\n\n  return \"<div class=\\\"tile-header\\\">\\r\\n  <div class=\\\"tile-title\\\">\\r\\n    <h2 class=\\\"csui-heading\\\" title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"\\\">\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetTitle || (depth0 != null ? depth0.widgetTitle : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetTitle\",\"hash\":{}}) : helper)))\n    + \"</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<div>\\r\\n  <div title=\\\"\"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"\\\" class=\\\"csui-pman-widget-msg\\\">\\r\\n    \"\n    + this.escapeExpression(((helper = (helper = helpers.widgetMessage || (depth0 != null ? depth0.widgetMessage : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === \"function\" ? helper.call(depth0,{\"name\":\"widgetMessage\",\"hash\":{}}) : helper)))\n    + \"\\r\\n  </div>\\r\\n</div>\";\n}});\nHandlebars.registerPartial('csui_perspective.manage_widgets_perspective.widget_impl_perspective.widget', t);\nreturn t;\n});\n/* END_TEMPLATE */\n;\n","\ncsui.define('css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',[],function(){});\n","/**\r\n * Preview view of any widget\r\n */\r\ncsui.define('csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',['csui/lib/underscore', 'csui/lib/backbone', 'csui/lib/marionette',\r\n  'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/lang',\r\n  'hbs!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget',\r\n  'css!csui/perspective.manage/widgets/perspective.widget/impl/perspective.widget'\r\n], function (_, Backbone, Marionette, lang, template) {\r\n  var PerspectiveWidgetView = Marionette.ItemView.extend({\r\n    className: 'csui-pman-widget',\r\n    template: template,\r\n    templateHelpers: function () {\r\n      var wConfig = this.widget.get(\"manifest\");\r\n      var noConfig = !wConfig || !wConfig.schema || !wConfig.schema.properties ||\r\n                     _.isEmpty(wConfig.schema.properties);\r\n      return {\r\n        widgetTitle: this.widget.get('title'),\r\n        widgetMessage: noConfig ? lang.noConfig : lang.clickToConfig\r\n      }\r\n    },\r\n\r\n    constructor: function (options) {\r\n      Marionette.ItemView.apply(this, arguments);\r\n      this.widget = options.data.widget;\r\n    }\r\n  });\r\n  return PerspectiveWidgetView;\r\n});\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n  \r\n);\n\n","\ncsui.define('json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',{\r\n  \"$schema\": \"http://opentext.com/cs/json-schema/draft-04/schema#\",\r\n  \"title\": \"{{title}}\",\r\n  \"description\": \"{{description}}\",\r\n  \"kind\": \"tile\",\r\n  \"schema\": {\r\n    \"type\": \"object\",\r\n    \"properties\": {}\r\n  }\r\n}\r\n);\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.placeholder/impl/nls/root/perspective.placeholder.manifest',{\r\n  dndWidgetsHere: 'Drag and Drop widgets here'\r\n});\r\n\n","\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',{\r\n  // Always load the root bundle for the default locale (en-us)\r\n  \"root\": true,\r\n  // Do not load English locale bundle provided by the root bundle\r\n  \"en-us\": false,\r\n  \"en\": false\r\n});\r\n\n","csui.define('csui/perspective.manage/widgets/perspective.widget/impl/nls/root/perspective.widget.manifest',{\r\n  noConfig: 'No configuration needed',\r\n  clickToConfig: 'Click to configure'\r\n});\r\n\n","\n","csui.define('bundles/csui-perspective',[\r\n    'csui/perspective.manage/pman.view',\r\n    'csui/perspective.manage/behaviours/pman.widget.config.behaviour',\r\n    'csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.view',\r\n    'csui/perspective.manage/widgets/perspective.widget/perspective.widget.view',\r\n    \r\n    // widgets manifests\r\n    'json!csui/perspective.manage/widgets/perspective.placeholder/perspective.placeholder.manifest.json',\r\n    'json!csui/perspective.manage/widgets/perspective.widget/perspective.widget.manifest.json',\r\n\r\n    'i18n!csui/perspective.manage/widgets/perspective.placeholder/impl/nls/perspective.placeholder.manifest',\r\n    'i18n!csui/perspective.manage/widgets/perspective.widget/impl/nls/perspective.widget.manifest',\r\n], {});\r\n  \r\ncsui.require(['require', 'css'], function (require, css) {\r\n    css.styleLoad(require, 'csui/bundles/csui-perspective', true);\r\n});\r\n  \n"]}